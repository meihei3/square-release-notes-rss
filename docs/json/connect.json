[
    {
        "id": "5hp20sYVbUndEEDG50Le1G",
        "slug": "changelog\/connect-logs\/2025-02-20",
        "linkBack": "changelog\/connect",
        "changelogType": "Connect SDK",
        "changelogDate": "2025-02-20T00:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Mobile Authorization API:**\n * **Deprecation notice** - The Mobile Authorization API is used by the Reader SDK, which is now deprecated. This API will be retired along with the Reader SDK on **December 31, 2025**. Developers should [migrate their application to the Mobile Payments SDK](mobile-payments-sdk\/migrate), which is the successor to the Reader SDK and contains its own authorization methods.\n\n* **Mobile Payments SDK:**\n * Tap to Pay and international support - For more information, see the [Mobile changelog](changelog\/mobile-logs\/2025-02-20).\n\n* **Refunds API:**\n * [ListPaymentRefunds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/list-payment-refunds) endpoint - New `updated_at_begin_time`, `updated_at_end_time`, and `sort_field` filters for results based on the refund's timestamp value for the `updated_at` property.\n\n* **Square SDKs:**\n * [PHP SDK](sdks\/php) - The Square PHP SDK has been rewritten. The new version provides the same access to Square APIs, along with: \n * Auto-pagination - With the SDK, you can easily paginate through long responses.\n * Simplified classes and method names. Previous versions of the SDK continue to work, but to take advantage of these new features and API updates moving forward, you should [migrate your code to use the new version of the SDK](sdks\/php\/migration).\n\n* **Terminal API:**\n * [CreateTerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-checkout) - Expanded support for linked orders in Terminal checkouts for Canada, UK, and AU markets. \n\n### Documentation updates\n\n* **Disputes API:**\n * Clarified that evidence submitted with the Disputes API cannot be managed or viewed in the Square Dashboard and the dispute status isn't updated in the Square Dashboard after you manage it with the Disputes API.",
        "tags": [
            "Square",
            "Documentation",
            "Mobile Authorization API",
            "Refunds API",
            "Square SDK",
            "Terminal API",
            "DEPRECATED"
        ]
    },
    {
        "id": "ruyKeFgt9ioFpqChFLAvj",
        "slug": "changelog\/connect-logs\/2025-01-23",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2025-01-23T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object - The `cards` field is retired in Square API version 2025-01-23 and later. This field is replaced by the `ListCards` and `ListGiftCards` endpoints with the `customer_id` query parameter.\n\n Note that the retirement date for the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints isn't currently scheduled, but you should migrate to the Cards API and Gift Cards API as soon as possible. For more information, see [Migration notes](customers-api\/what-it-does#deprecated-createcustomercard-endpoint).\n\n* **Reader SDK:**\n * **Deprecation notice** - The Reader SDK is now deprecated and will be retired on December 31, 2025. Developers must [migrate to the Mobile Payments SDK](mobile-payments-sdk\/migrate) to ensure continued support and application functionality.\n\n* **Mobile Payments SDK:**\n * New [React Native plugin](mobile-payments-sdk\/react-native) for the Mobile Payments SDK.\n\n* **Square SDKs:**\n * [Node.js SDK](sdks\/nodejs) - The Square Node.js SDK has been rewritten. The new version provides the same access to Square APIs, along with:\n * More runtime compatibility - The SDK supports a wide range of environments, including Node, AWS Lambda, Cloudflare Workers, and more.\n * Auto-pagination - With the SDK, you can easily paginate through long responses.\n * Native fetch - The SDK replaces `axios` with native `fetch`. \n Previous versions of the SDK will continue to work, but to take advantage of these new features and API updates moving forward, you should [migrate your code to use the new version of the SDK](sdks\/nodejs\/migration). \n\n* **Web Payments SDK:**\n * (Beta) Support for a new payment flow with the `Card.tokenize()` method for payment processing, buyer verification, and cards on file use cases. For more information, see:\n * [Take a Card Payment](web-payments\/take-card-payment)\n * [Store a Card on File](web-payments\/sca-add-card)\n * [Charge a Card on File](web-payments\/sca-charge-card-on-file)\n * [Charge and Store a Card on File](web-payments\/sca-charge-and-store-card-on-file)\n\n* **Webhooks**:\n * The [retry schedule](webhooks\/overview#notification-retries) for Square webhooks is changed. Square now makes a maximum of 19 retry attempts for up to 48 hours after the event. This change applies to webhook subscriptions for all Square API versions.\n\n### Documentation updates\n\n* **Checkout API:**\n * [Square Order Checkout](checkout-api\/square-order-checkout) - Added a section that explains how to retrieve a `customer_id` from a payment associated with an order and a checkout. \n\n* **Mobile Payments SDK:**\n * [Handling Errors](mobile-payments-sdk\/ios\/handling-errors) - Added Swift code samples demonstrating how to unwrap the error messages from `Error` objects.\n\n* **Terminal API:**\n * [PaymentOptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PaymentOptions) - API Reference documentation updates for the following parameters:\n * `accept_partial_authorization` - Updated the description of the default behavior of partial authorization for delayed capture payments. \n * `autocomplete` - Added a default value of `true`.\n * `delay_duration` - Updated the description of delayed capture behavior and the delay duration time for payments. \n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Customers API",
            "Mobile Payments SDK",
            "Node.js",
            "Reader SDK",
            "Webhooks",
            "DEPRECATED",
            "RETIRED"
        ]
    },
    {
        "id": "3XinBHmlGKzb5frvQpe8E0",
        "slug": "changelog\/connect-logs\/2024-12-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-12-18T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### New SDK release\n* **Go SDK:**\n * New [Go SDK](sdks\/go) provides access to Square APIs in a language-idiomatic way. Download the SDK package and read the [quickstart guide](sdks\/go\/quick-start) to get started.\n\n### API updates\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object - The `cards` field will be retired in Square API version 2025-01-23. This field is replaced by the `ListCards` and `ListGiftCards` endpoints with the `customer_id` query parameter.\n\n Note that the retirement date for the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints isn't currently scheduled, but you should migrate to the Cards API and Gift Cards API as soon as possible. For more information, see [Migration notes](customers-api\/what-it-does#deprecated-createcustomercard-endpoint).\n\n* **GraphQL:**\n * [Square GraphQL](devtools\/graphql) queries now support the Payouts graph (Alpha). See an [example query](graphql\/query-examples#graphql-get-payout-entries-query).\n\n* **Payments API:**\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments\/create-payment) endpoint - New `buyer_phone_number` field.\n * [ListPayments](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments\/list-payments) endpoint - New `updated_at_begin_time`, `updated_at_end_time`, and `sort_field` filters that can be used to filter the results by the payment's `updated_at` field. \n\n* **Team API:**\n * New [Job](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Job) object and job management endpoints (Beta):\n * [CreateJob](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api\/create-job)\n * [UpdateJob](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api\/update-job)\n * [ListJobs](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api\/list-jobs)\n * [RetrieveJob](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api\/retrieve-job)\n * [TeamMember](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TeamMember) object - New `wage_setting` field (Beta), which provides direct access to a team member's overtime exemption status and job and compensation information using `TeamMember` endpoints (instead of `RetrieveWageSetting` or `UpdateWageSetting`). \n * [JobAssignment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/JobAssignment) object - New `job_id` field (Beta), which now serves as the unique job identifier instead of `job_title`.\n\n For more information about using these new Team API features, see [Integration Guide](team\/integration).\n\n* **Terminal API:**\n * [CreateTerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-checkout) endpoint - New `QR_CODE` enum value for `payment_type`, which allows the Square Terminal to support a single QR code payment that integrates with multiple Japanese digital wallet brands.\n * [CheckoutOptionsPaymentType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CheckoutOptionsPaymentType) enum - Deprecates the `PAYPAY` enum value. The `QR_CODE` enum value now supports PayPay as well as other digital wallets.\n\n### Documentation updates\n\n* **Square SDKs:**\n * Reorganized the [Square SDKs](https:\/\/developer.squareup.com\/docs\/sdks) overview page for easy access to each SDK package and GitHub repos, and added information about mobile and frontend SDKs.\n * Removed the **Stay Current with SDK Version** topic for each SDK. This content is now present on each SDK landing page. \n\n* **Point of Sale API:**\n * [Offline Mode](pos-api\/cookbook\/offline-mode) - Added a **Requirements and limitations** section to clarify how to maintain a Bluetooth connection and a secure connection to take payments while offline.\n\n* **Web Payments SDK:**\n * [Integrate Digital Wallets with the Web Payments SDK](web-payments\/digital-wallets) - Removed the note that Apple Pay and Google Pay already comply with SCA. Developers are encouraged to implement SCA for all digital wallet payments.\n\n{% line-break \/%}\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Customers API",
            "GraphQL",
            "Payments API",
            "Team API",
            "Terminal API",
            "Web Payments SDK",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "6kYB5jvJpdLc1HhejSylZu",
        "slug": "changelog\/connect-logs\/2024-11-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-11-20T11:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object - The `cards` field will be retired in Square API version 2025-01-23. This field is replaced by the `ListCards` and `ListGiftCards` endpoints with the `customer_id` query parameter.\n\n Note that the retirement date for the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints isn't currently scheduled, but you should migrate to the Cards API and Gift Cards API as soon as possible. For more information, see [Migration notes](customers-api\/what-it-does#deprecated-createcustomercard-endpoint).\n\n* **Mobile Payments SDK:**\n * General Availability in the United States.\n * New sample applications for [iOS](https:\/\/github.com\/square\/mobile-payments-sdk-ios) and [Android](https:\/\/github.com\/square\/mobile-payments-sdk-android).\n * The [Offline Payments](mobile-payments-sdk\/ios\/offline-payments) feature is now in Beta. Sellers must continue to [opt in to offline payments](mobile-payments-sdk\/ios\/offline-payments#seller-onboarding) to participate. \n * For more details, see [Mobile Changelog](changelog\/mobile-logs\/2024-11-20).\n\n* **Refunds API:**\n * [RefundPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment) endpoint - New error code `PAYMENT_NOT_REFUNDABLE_DUE_TO_DISPUTE` for a `400` bad request on a payment that cannot be refunded due to a dispute. \n\n### Documentation updates\n\n* **Subscriptions API:**\n * [Subscriptions API](subscriptions\/overview) - `INVOICES_READ` is a required permission when working with invoices and webhooks related to subscriptions.\n * [Subscription Billing and Invoices](subscriptions-api\/subscription-billing#proration) - When changing the billing anchor date for a subscription, the default behavior is to not prorate the next invoice, which can result in billing customers twice in quick succession. To prorate subscription charges, the `can_prorate` field on the `SubscriptionPlanVariation` must be set to `true`.\n\n* [Take Payments on Hardware](in-person-payment-options): \n * Added a decision matrix to help developers determine the best APIs and SDKs for their application.\n * Revised the content to focus on three in-person payment use cases:\n * Processing payments over the counter\n * Processing payments on the go\n * Processing payments at a self-service kiosk\n\n* **Web Payments SDK:**\n * (Beta) Support for `CHARGE_AND_STORE` card payments on file with the new payment method flow that uses additional parameters for `tokenize()` to initiate SCA and buyer verification without calling `verifyBuyer()` in payment requests.\n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).\n",
        "tags": [
            "Square",
            "Documentation",
            "Customers API",
            "Mobile Payments SDK",
            "Refunds API",
            "Web Payments SDK"
        ]
    },
    {
        "id": "4rKpbD9J2PN9b4ufNhkMNg",
        "slug": "changelog\/connect-logs\/2024-10-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-10-17T00:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object - The `cards` field will be retired in Square API version 2024-12-18. This field is replaced by the `ListCards` and `ListGiftCards` endpoints with the `customer_id` query parameter.\n\n Note that the retirement date for the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints isn't currently scheduled, but you should migrate to the Cards API and Gift Cards API as soon as possible. For more information, see [Migration notes](customers-api\/what-it-does#deprecated-createcustomercard-endpoint).\n\n* **Gift Card Activities API:**\n\n {% aside type=\"info\" %}\n The following November 1, 2024, changes to compliance limits are currently paused.\n {% \/aside %}\n\n * Starting November 1, 2024, compliance limits are changing for France, Ireland, Spain, and the United Kingdom. Square enforces [compliance limits](gift-cards\/using-gift-cards-api#compliance-limits) for gift card activities that load funds onto digital or physical gift cards.\n\n The following limits will be lowered:\n\n {% table %}\n * Limit\n * Country and change\n -----\n * {% tooltip text=\"Maximum balance amount per gift card\" %}The maximum amount for a gift card balance.{% \/tooltip %}\n * * France - From 750 EUR to 400 EUR\n * Ireland - From 750 EUR to 400 EUR\n * Spain - No change\n * United Kingdom - From &#xA3;750 to &#xA3;400\n -----\n * {% tooltip text=\"Maximum load amount per gift card per day\" %}The maximum amount that can be loaded onto a gift card in a 24-hour period.{% \/tooltip %}\n * * France - From 750 EUR to 400 EUR\n * Ireland - From 750 EUR to 400 EUR\n * Spain - No change\n * United Kingdom - From &#xA3;750 to &#xA3;400\n -----\n * {% tooltip text=\"Maximum load amount per payment card per day\" %}The maximum amount that a single payment card can load onto gift cards in a 24-hour period.{% \/tooltip %}\n * * France - From 7.500 EUR to 800 EUR\n * Ireland - From 7,500 EUR to 800 EUR \n * Spain - From 7,500 EUR to 800 EUR\n * United Kingdom - From &#xA3;7,500 to &#xA3;800\n {% \/table %}\n\n* **Refunds API:**\n * [RefundPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment) endpoint - A new `cash_details` and `external_details` properties to record additional required details about cash and external refunds, respectively. \n\n* **Web Payments SDK:**\n * (Beta) A new card payment method flow that uses additional parameters for `tokenize()` to initiate SCA and buyer verification without calling `verifyBuyer()` in payment requests. For more information, see [Take a Card Payment with the Web Payments SDK](web-payments\/take-card-payment).\n\n### Documentation updates\n\n* **Refunds API:**\n * [RefundPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment) endpoint - Updated the `destination_id` property definition to clarify how to manage linked refunds to Square payments and cross-method refunds with gift cards.\n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Customers API",
            "Gift Card Activities API",
            "In-App Payments SDK",
            "Refunds API",
            "Web Payments SDK"
        ]
    },
    {
        "id": "6moNAR55OhvyCRALaXrgHB",
        "slug": "changelog\/connect-logs\/2024-09-19",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-09-19T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Bookings API:**\n * [Booking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Booking) object - You can provide a customer address when [creating a booking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/create-booking) as long as the `location_type` is set to `CUSTOMER_LOCATION`. \n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object - The `cards` field will be retired in Square API version 2024-12-18. This field is replaced by the `ListCards` and `ListGiftCards` endpoints with the `customer_id` query parameter.\n\n Note that the retirement date for the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints isn't currently scheduled, but you should migrate to the Cards API and Gift Cards API as soon as possible. For more information, see [Migration notes](customers-api\/what-it-does#deprecated-createcustomercard-endpoint).\n\n* **Orders API:**\n * [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) object - For Square API versions prior to 2024-09-19: Order line items, with fractional quantities not associated with a catalog item variation that's configured for fractional units (references a [CatalogMeasurementUnit](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogMeasurementUnit)), now include the `order.line_items[].quantity_unit` property. For information about creating fractional line items, see [Line items with a fractional quantity](orders-api\/create-orders#line-items-with-a-fractional-quantity).\n* **Payments API:**\n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object - New `terminal_checkout_id` field that associates a Terminal checkout with a payment.\n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Bookings API",
            "Customers API",
            "Orders API",
            "Payments API"
        ]
    },
    {
        "id": "2QdrOE4dRHAvB0ZfeT6LKN",
        "slug": "changelog\/connect-logs\/2024-08-21",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-08-21T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Catalog API** - The following endpoint parameters, objects, properties, and enums are released to General Availability (GA).\n * **Endpoint parameters** - `include_category_path_to_root` in [BatchRetrieveCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-retrieve-catalog-objects), [RetrieveCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/retrieve-catalog-object), and [SearchCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-objects)\n * **Objects** - [CatalogEcomSeoData](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogEcomSeoData) and [CategoryPathToRootNode](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CategoryPathToRootNode)\n * **Properties:** \n * [CatalogCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCategory) - `category_Type`, `parent_Category`, `is_top_level`, `channels`, `availability_period_ids`, `online_visibility`, `root_category`, `ecom_seo_data`, and `path_to_root`\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) - `categories`, `channels`, `ecom_seo_data`, and `reporting_category`\n * [CatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogObject) - `availability_period_data`\n * **Enums** - [CatalogCategoryType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogCategoryType)\n\n* **Payments API:**\n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object - Added a new field that indicates timestamps for when a client device processes payments in Offline Mode:\n * `client_created_at` - Indicates the time on the device when the payment was taken offline. The `offline_begin_time` and `offline_end_time` filter options have been added to [ListPayments](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/list-payments) to indicate the start and end time ranges for which to retrieve offline payments based on the `client_created_at` time in the payment object.\n\n For more information, see [Payment location](payments-api\/take-payments#payment-location).\n\n* **Refunds API** - Added support for cross-tender refunds to Square gift cards. This enables sending refunds from a payment source, such as card payments, to a gift card. For more information, see [Refund Payments](payments-api\/refund-payments).\n\n### Documentation updates\n\n* [Gift Cards API and Gift Card Activities API](gift-cards\/using-gift-cards-api) - Provided more information about how [Refunds API integration](gift-cards\/using-gift-cards-api#integration-with-square-apis) works for refunds to gift cards. With the new Refunds API support for cross-tender refunds, Square now automatically activates new `PENDING` gift cards that are specified as the refund destination.\n* [Locations API](locations-api#mccs-available-for-initialization) - Added new Merchant Category Codes (MCCs) for businesses in Australia: 5812 (Restaurant\/Bar) and 5813 (Bar\/Club\/Lounge).\n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Catalog API",
            "Payments API",
            "Refunds API",
            "GA"
        ]
    },
    {
        "id": "2HOUNhhhRZ3gWNfLgRgMPF",
        "slug": "changelog\/connect-logs\/2024-07-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-07-17T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### New API and SDK releases\n* **Web Payments SDK:**\n * [Charge and Store a Card on File with SCA](web-payments\/sca-charge-and-store-card-on-file) (Beta) - New `CHARGE_AND_STORE` intent to trigger Strong Customer Authentication for charging and storing a card on file in a single request.\n\n### API updates\n* **GraphQL:**\n * [Square GraphQL](devtools\/graphql) queries now support the following Square graphs:\n * Bookings (Alpha)\n * Customer Custom Attributes (Alpha)\n * Subscriptions (Alpha)\n\n### Documentation updates\n* **App Marketplace:**\n * [App Subscriptions](app-marketplace\/app-subscriptions) \u2013 US-based developers with an application in the Square App Marketplace can now leverage Square subscriptions to bill sellers and monetize their applications.\n\n* **Online Payment Solutions:**\n * [Online Payment Solutions](online-payment-options) - Updated with the following information: \n * High-level descriptions about Square's online payment APIs and SDKs\n * Common use cases for one-time payments and recurring payments\n * Product comparisons\n * Payment processing examples\n\n{% line-break \/%}\n\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Web Payments SDK",
            "GraphQL",
            "BETA"
        ]
    },
    {
        "id": "3JAKWGhD9vaXUK92lGawLy",
        "slug": "changelog\/connect-logs\/2024-06-04",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-06-04T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### New API releases\n\n* **Events API (Beta):**\n\n The Events API lets you search for and retrieve Square API events occurring within a 28-day period. For more information, see\u00a0[Events API](events-api\/overview).\n\n* **Mobile Payments SDK (Beta):**\n\n The Mobile Payments SDK has launched as the successor to the Reader SDK, enabling developers to accept in-person payments using an embedded Square payment flow in iOS and Android applications. For more information, see the [mobile changelog](changelog\/mobile-logs\/2024-06-04) and [Mobile Payments SDK documentation](mobile-payments-sdk).\n\n{% line-break \/%}\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Events API",
            "Mobile Payments SDK",
            "BETA"
        ]
    },
    {
        "id": "3Hf8y718I0yS95RL0ktAg5",
        "slug": "changelog\/connect-logs\/2024-05-15",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-05-15T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Catalog API:**\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) object - New `is_taxable` attribute to designate whether an item is taxable. \n\n* **Customers API:**\n * [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint - Fixed an issue where the endpoint returned 20 results by default instead of 100. This fix applies to all Square API versions.\n\n### Documentation updates\n\n* **Payments API:**\n * [Payments](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object - The `is_offline_payment` field is documented to indicate whether this payment was taken offline.\n\n* **Refunds API:**\n * [DestinationDetailsCardRefundDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/DestinationDetailsCardRefundDetails) object - The `auth_result_code` field is documented for when the authorization code of a refund is approved.\n\n{% line-break \/%}\nLearn about [versioning for the Square API and SDKs](build-basics\/versioning-overview).",
        "tags": [
            "Square",
            "Documentation",
            "Catalog API",
            "Customers API"
        ]
    },
    {
        "id": "2NEsHotFzaGZYYXi9ekGmS",
        "slug": "changelog\/connect-logs\/2024-04-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-04-17T00:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API Updates\n* **Bookings API**\n * [UpdateBooking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/update-booking) endpoint - Disallows updates of a booking's appointment segments after a deposit is made for the booking. \n* **Catalog API**\n * [CatalogModifierList](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifierList) and [CatalogCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCategory) objects - Supports having custom attributes according to the [CatalogCustomAttributeDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCustomAttributeDefinition) specification. For more information, see [Add Custom Attributes](catalog-api\/add-custom-attributes).\n* **OAuth API**\n * `RenewToken` endpoint - **Retired**. For information about refreshing an expiring token, see [Refresh the access token regularly](oauth-api\/best-practices#refresh-the-access-token-regularly).\n\n### Documentation updates\n\n* **Square SDKs**\n * Quickstarts for [Java](https:\/\/developer.squareup.com\/docs\/sdks\/java\/quick-start), [.NET](https:\/\/developer.squareup.com\/docs\/sdks\/dotnet\/quick-start), [Node.js](https:\/\/developer.squareup.com\/docs\/sdks\/nodejs\/quick-start), [PHP](https:\/\/developer.squareup.com\/docs\/sdks\/php\/quick-start), [Python](https:\/\/developer.squareup.com\/docs\/sdks\/python\/quick-start), and [Ruby](https:\/\/developer.squareup.com\/docs\/sdks\/ruby\/quick-start) - Updated the sample code to demonstrate the use of Bearer Auth credentials in the client.",
        "tags": [
            "Square",
            "Documentation",
            "Bookings API",
            "Catalog API",
            "OAuth API",
            "RETIRED"
        ]
    },
    {
        "id": "6mJVuMsSZW9DQSAeoMoKav",
        "slug": "changelog\/connect-logs\/2024-03-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-03-20T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### Documentation updates\n\n* **Payments API**:\n * Documented support for additional QR code payment methods (`RAKUTEN_PAY`, `AU_PAY`, `D_BARAI`, `MERPAY`, `ALIPAY`, and `WECHAT_PAY`) for the [wallet_details](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-wallet_details) object. \n\n* **Payouts API**:\n * [Payouts API Overview](payouts-api\/overview) - Added a [Real-world use cases](payouts-api\/overview#real-world-use-cases) section, which describes practical scenarios for using the Payouts API.\n",
        "tags": [
            "Square",
            "Documentation",
            "Payments API",
            "Payouts API"
        ]
    },
    {
        "id": "3WPXek4PNZQMwfWVphCzqO",
        "slug": "changelog\/connect-logs\/2024-02-22",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-02-22T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Catalog API:** Added text-based modifiers (Beta) to support text-based product customization at the time of sale. \n * [CatalogModifierList](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifierList) object - Added the following attributes:\n * `modifier_type`\n * `max_length`\n * `text_required`\n * `internal_name`\n * [CatalogModifierListInfo](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifierListInfo) object - Added the `ordinal` attribute.\n * [CatalogModifierListModifierType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogModifierListModifierType) enum - Added to support the selection of list-based or text-based modifiers.\n\n For more information, see [Enable Product Customization with Modifiers](catalog-api\/enable-modifiers-on-items).\n\n* **Customers API:** Added endpoints that allow you to retrieve or manage 1\u2013100 customer profiles in a single call:\n * [BulkCreateCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/bulk-create-customers)\n * [BulkUpdateCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/bulk-update-customers)\n * [BulkDeleteCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/bulk-delete-customers)\n * [BulkRetrieveCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/bulk-retrieve-customers)\n\n For more information, see [Manage Customer Profiles](customers-api\/use-the-api\/keep-records) and [Retrieve Customer Profiles](customers-api\/use-the-api\/retrieve-profiles).\n\n* **Payouts API:** Added payout entry types for the `ListPayoutEntries` endpoint:\n\n * [LOCAL_OFFERS_CASHBACK](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-LOCAL_OFFERS_CASHBACK)\n * [LOCAL_OFFERS_FEE](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-LOCAL_OFFERS_FEE)\n * [PERCENTAGE_PROCESSING_ENROLLMENT](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PERCENTAGE_PROCESSING_ENROLLMENT)\n * [PERCENTAGE_PROCESSING_DEACTIVATION](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PERCENTAGE_PROCESSING_DEACTIVATION)\n * [PERCENTAGE_PROCESSING_REPAYMENT](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PERCENTAGE_PROCESSING_REPAYMENT)\n * [PERCENTAGE_PROCESSING_REPAYMENT_REVERSED](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PERCENTAGE_PROCESSING_REPAYMENT_REVERSED)\n * [PROCESSING_FEE](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PROCESSING_FEE)\n * [PROCESSING_FEE_REFUND](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-PROCESSING_FEE_REFUND)\n * [UNDO_PROCESSING_FEE_REFUND](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-UNDO_PROCESSING_FEE_REFUND)\n * [GIFT_CARD_LOAD_FEE](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-GIFT_CARD_LOAD_FEE)\n * [GIFT_CARD_LOAD_FEE_REFUND](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-GIFT_CARD_LOAD_FEE_REFUND)\n * [UNDO_GIFT_CARD_LOAD_FEE_REFUND](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-UNDO_GIFT_CARD_LOAD_FEE_REFUND)\n * [BALANCE_FOLDERS_TRANSFER](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-BALANCE_FOLDERS_TRANSFER)\n * [BALANCE_FOLDERS_TRANSFER_REVERSED](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-BALANCE_FOLDERS_TRANSFER_REVERSED)\n * [GIFT_CARD_POOL_TRANSFER](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-GIFT_CARD_POOL_TRANSFER)\n * [GIFT_CARD_POOL_TRANSFER_REVERSED](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ActivityType#value-GIFT_CARD_POOL_TRANSFER_REVERSED)\n\n For more information, see [Payout type details](payouts-api\/list-payout-entries#payout-type-details).\n\n* **Webhook Subscriptions API:** For [CreateWebhookSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhook-subscriptions-api\/create-webhook-subscription) or [UpdateWebhookSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhook-subscriptions-api\/update-webhook-subscription) requests with read-only fields specified in the request body, a `400` bad request error is now returned. In earlier Square API versions, read-only fields are ignored.\n\n### Documentation updates\n\n* **Catalog API:**\n * [Enable Product Customization with Modifiers](catalog-api\/enable-modifiers-on-items) topic - Added a topic that demonstrates how to enable product customization with previously released list-based modifiers as well as newly released text-based modifiers.\n\n* **Refunds API:**\n * [PaymentRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PaymentRefund) object - Added `SQUARE_ACCOUNT` as a `destination_type` value.\n* **Subscriptions API:**\n * [price_override_money](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Subscription#definition__property-price_override_money) field - Clarified that this field doesn't affect itemized subscriptions with `RELATIVE` pricing. Relative prices are controlled by the subscription's [order template](subscriptions-api\/manage-subscriptions#phases-and-order-templates).",
        "tags": [
            "Square",
            "Documentation",
            "Catalog API",
            "Customers API",
            "Payouts API",
            "Webhook Subscriptions API",
            "BETA"
        ]
    },
    {
        "id": "31A60ZiXixmkNmt5Iyw2aL",
        "slug": "changelog\/connect-logs\/2024-01-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2024-01-18T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Catalog API:**\n\n The Catalog API now supports new product types for [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) with the following updates:\n * [CatalogItemProductType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogItemProductType) - Updated enum with additional fields of `FOOD_AND_BEV`, `EVENT`, `DIGITAL`, `DONATION`, `LEGACY_SQUARE_ONLINE_SERVICE`, and `LEGACY_SQUARE_ONLINE_MEMBERSHIP`.\n * [CatalogItem.food_and_beverage_details](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem#definition__property-food_and_beverage_details) - New property to provide food and beverage details for an item of the `FOOD_AND_BEV` product type.\n * [CatalogItem.FoodAndBeverageDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemFoodAndBeverageDetails) - New object to describe the food and beverage details of a `FOOD_AND_BEV` item. \n * [CatalogItem.FoodAndBeverageDetails.DietaryPreference](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemFoodAndBeverageDetailsDietaryPreference) - New object to describe the dietary preference as part of food and beverage details. \n * [CatalogItem.FoodAndBeverageDetails.DietaryPreference.DietaryPreferenceType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogItemFoodAndBeverageDetailsDietaryPreferenceType) - New enum for supported dietary preference types.\n * [CatalogItem.FoodAndBeverageDetails.DietaryPreference.StandardDietaryPreference](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference) - New enum for standard dietary preference.\n * [CatalogItem.FoodAndBeverageDetails.Ingredient](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemFoodAndBeverageDetailsIngredient) - New object to describe the ingredient as part of food and beverage details. \n * [CatalogItem.FoodAndBeverageDetails.Ingredient.StandardIngredient](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient) - New enum for standard ingredients.\n\n For more information, see [create a food and beverage item explicitly](catalog-api\/build-with-catalog#create-the-coffee-item-as-a-food-and-beverage-item-explicitly).\n\n* **GraphQL:**\n * [Square GraphQL](devtools\/graphql) queries now support the following Square graphs:\n * Cash Drawer Shifts (Alpha)\n * Gift Cards and Gift Card Activities (Alpha)\n * Labor (Alpha)\n * Loyalty (Alpha)\n\n* **Invoices API:** \n * The Invoices API now allows you to create and delete invoice attachments and retrieve attachment metadata with the following updates: \n * [CreateInvoiceAttachment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api\/create-invoice-attachment) endpoint - New endpoint used to upload a file as an invoice attachment.\n * [DeleteInvoiceAttachment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api\/delete-invoice-attachment) endpoint - New endpoint used to delete an invoice attachment.\n * [InvoiceAttachment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceAttachment) object - New object that represents attachment metadata, such as the file name, file type, timestamp of when the file was uploaded, and an MD5 hash of the file contents. \n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object - New `attachments` field that contains attachment metadata, represented as a list of up to 10 `InvoiceAttachment` objects. For all Square API versions, this field is now included in API responses and webhook notifications if the invoice has attachments.\n\n For more information, see [Create or Delete Invoice Attachments](invoices-api\/attachments).\n\n* **Loyalty API:**\n * [LoyaltyPromotion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyPromotion) object - The maximum length of the `name` field is changed from 50 characters to 70 characters.\n\n* **Orders API:**\n * [OrderReturn](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturn) object:\n * [return_tips](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturn#definition__property-return_tips) - New array of [OrderReturnTip](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnTip) objects. Each array element represents a tip being returned for an order.\n * [OrderLineItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItem) object:\n * [gross_sales_money](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItem#definition__property-gross_sales_money) - For inclusive tax items in the US, Canada, and Japan, tax is deducted from `gross_sales_money`. For Europe and Australia, the inclusive tax remains as part of the gross sale calculation.\n\n### Documentation updates\n\n* **Customers API:**\n * [Manage Customer Profiles](customers-api\/use-the-api\/keep-records) - Removed details about setting the `X-Clear-Null` header when using `null` to clear fields in an `UpdateCustomer` request. This header is no longer required.\n\n* **Dev Essentials:**\n * [Regional Differences for International Development](international-development\/regional-differences#product-and-feature-availability) - Added information about product and feature availability by region.\n\n* **Locations API:**\n * [Locations API Overview](locations-api) - Removed details about setting the `X-Clear-Null` header when removing fields from a `Location` object. When updating a location, you can remove any non-read-only field by setting its value to `null`. \n\n* **Technical Scenarios:**\n * New scenario-based documentation that describes how to build applications that satisfy seller requirements for various use cases.\n * [Build a Tip Report](payments\/scenarios\/tip-reporting) - Sellers want to report on the tips earned by their team members in a given time period.\n * [Split an Online Payment](payments\/scenarios\/split-online-payment) - Sellers want the ability to use orders to capture split payments when credit cards and gift cards are used.\n * [Build a Sales Report](payments\/scenarios\/simple-sales-report) - Sellers want to generate sales reports for items sold in a given time period. ",
        "tags": [
            "Square",
            "Documentation",
            "Catalog API",
            "GraphQL",
            "Invoices API",
            "Loyalty API",
            "Orders API"
        ]
    },
    {
        "id": "56jLK1KVl0lciAWUDJCvK",
        "slug": "changelog\/connect-logs\/2023-12-13",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-12-13T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Catalog API:**\n\n Beta release of the [new catalog categories model and object-retrieval\/querying endpoints](catalog-api\/categorize-catalog-items) to support nested categories and multiple categories assigned to an item.\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem) object:\n * [categories](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem#definition__property-categories) - New field to support assigning multiple categories to an item.\n * [reporting_category](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem#definition__property-reporting_category) - New field to support specifying the item's category for reporting or displaying purposes.\n * [channels](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem#definition__property-channels) - New field to specify channels where the item is visible or available.\n * [ecom_seo_data](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem#definition__property-ecom_seo_data) - New field to specify the SEO data for the seller's Square Online store.\n * [category_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogItem#definition__property-category_id) - Deprecated field to support backward compatibility for legacy applications to transition gracefully to multiple categories.\n\n * [CatalogCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory) object:\n * [category_type](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-category_type) - New field to indicate a supported category type.\n * [parent_category](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-parent_category) - New field to support nested categories. \n * [is_top_level](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-is_top_level) - New field to specify whether the category is a root category.\n * [root_category](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-root_category) - New field to specify the category's root.\n * [channels](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-channels) - New field to specify the IDs of the channels in which to make the category visible.\n * [availability_period_ids](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-availability_period_ids) - New field to specify the category's availability periods. \n * [online_visibility](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-online_visibility) - New field to indicate whether the category is visible on the seller's Square Online sites. \n * [ecom_seo_data](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-ecom_seo_data) - New field to represent the category's SEO data for a seller's Square Online store.\n * [path_to_root](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory#definition__property-path_to_root) - New field to specify the path from the category's immediate parent to its root category.\n\n * [CatalogObjectCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogObjectCategory) - New object to reference a [CatalogCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/catalogCategory) instance by its ID value and positional order.\n\n * [SearchCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-objects), [RetrieveCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/retrieve-catalog-object) and [BatchRetrieveCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-retrieve-catalog-objects) endpoints - New `include_category_path_root` field added to the payload or as a query parameter to support returning the category's nesting path to the root. \n\n* **Checkout API:**\n * Beta release of new endpoints that access and modify settings for payment links.\n * [RetrieveMerchantSettings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/retrieve-merchant-settings) - Retrieves the merchant-level settings for a Square-hosted checkout page.\n * [UpdateMerchantSettings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/update-merchant-settings) - Updates the merchant-level settings for a Square-hosted checkout page.\n * [RetrieveLocationSettings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/retrieve-location-settings) - Retrieves the location-level settings for a Square-hosted checkout page. \n * [UpdateLocationSettings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/update-location-settings) - Updates the location-level settings for a Square-hosted checkout page. \n\n For more information, see [Checkout Settings](checkout-api\/checkout-settings).\n\n* **Terminal API**\n * [DismissTerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/dismiss-terminal-checkout) and [DismissTerminalRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/dismiss-terminal-refund) endpoints. New endpoints that dismiss the \"Please wait...\" screen on a Square Terminal and transition to the idle screen. \n\n### Documentation updates\n* **App Marketplace**\n * [Create an App Marketplace Listing](app-marketplace\/listing-best-practices) - New documentation that provides best practices for writing an effective listing for your app in the App Marketplace.\n * App Marketplace [requirements](app-marketplace\/requirements) topics - New interactive topics that ask questions about your API usage and provide a dynamic list of requirements tailored to your app.\n* **Locations API:**\n * Expanded the list of [Merchant Category Codes](locations-api#mccs-available-for-initialization) (MCCs) that can be provided to the `UpdateLocation` endpoint for each country and documented the MCCs available in Great Britain, France, Ireland, Spain, and Australia. \n\n* **Terminal API:**\n * [Dismiss Terminal Checkouts and Refunds](terminal-api\/dismiss-checkouts-and-refunds) - New documentation that describes how to dismiss Terminal checkouts and Interac refunds on a Square Terminal when the buyer needs to abandon a checkout or a refund operation.\n\n* **Dev Essentials:**\n * [Regional Differences for International Development](international-development\/regional-differences) - New information about regional payment processing differences.\n * [Compliance with Japan's Tax Invoice Preservation System](international-development\/japan-invoice-system) - New information about meeting compliance with Japan's tax invoice preservation system.",
        "tags": [
            "Square",
            "Documentation",
            "Catalog API",
            "Checkout API",
            "Terminal API",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "4zVt7AXbf30Q7Ie5g7bGXk",
        "slug": "changelog\/connect-logs\/2023-11-15",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-11-15T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Labor API:**\n * New tip eligibility settings:\n * [TeamMemberWage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TeamMemberWage) object - Added a `tip_eligible` field that maps to the **Tip eligible** setting defined for a job in the Square Dashboard.\n * [ShiftWage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/ShiftWage) object - Added a `tip_eligible` field that indicates whether the team member can earn tips for the job to be done on a shift. Defaults to the corresponding `TeamMemberWage.tip_eligible` setting if not specified in a `CreateShift` request.\n * Support for declared cash tips:\n * [Shift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Shift) object - Added the `declared_cash_tip_money` field, which can be set in a `CreateShift` or `UpdateShift` request. This field is now returned for all shifts. If no cash tips were declared, the amount is set to 0.",
        "tags": [
            "Square",
            "Documentation",
            "Labor API"
        ]
    },
    {
        "id": "2bDiE6EUHNjRC1y5fD2uZB",
        "slug": "changelog\/connect-logs\/2023-11-01",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-11-01T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### Documentation updates\n\n* **Subscriptions API:** \n * [BulkSwapPlan](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/bulk-swap-plan) endpoint - The `CUSTOMERS_READ`, `PAYMENTS_WRITE`, `ORDERS_WRITE`, and `INVOICES_WRITE` permissions were removed because they're not required.\n* **Web Payments SDK**\n * [Payment Requests](web-payments\/payment-requests#payment-request-events) - Added information about how some payment methods return redacted shipping contact information depending on the payment method used. The shipping contact information might include only the data needed for the payment method to complete transaction tasks.",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "3mUN2iUXsibcWnbgxADEhp",
        "slug": "changelog\/connect-logs\/2023-10-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-10-18T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Bookings API -** Introduces location booking profiles to [determine whether a location is enabled for online booking.](bookings-api\/use-the-api#determine-if-a-location-is-enabled-for-booking)\n * [LocationBookingProfile](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LocationBookingProfile) object - New object to describe the booking profile of a location.\n * [ListLocationBookingProfiles](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/list-location-booking-profiles) endpoint - New endpoint to support retrieving all location booking profiles that are enabled for online booking.\n * [RetrieveLocationBookingProfile](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/retrieve-location-booking-profile) endpoint - New endpoint to support retrieving a location booking profile that is enabled for online booking for a specific location. \n\n* **Devices API:**\n * [DeviceStatus](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/device-status) enum - New `OFFLINE` enum value (Beta) for the `category` field that represents the current offline status of a device.\n\n* **Subscriptions API** - Subscriptions on a month-based cadence can now have their billing anchor dates configured. This might be, for example, the first day of each month for a monthly subscription or the fifth day of each quarter for a quarterly subscription. For more information, see [Subscription Billing and Invoices](subscriptions-api\/subscription-billing).\n * [ChangeBillingAnchorDate](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/change-billing-anchor-date) endpoint - New endpoint that changes the billing anchor date for a single subscription. \n * [BulkSwapPlan](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/bulk-swap-plan) endpoint - New endpoint that schedules a plan variation change for all active subscriptions under a given plan variation.\n\n * [Subscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Subscription) object - Added the following field:\n * `monthly_billing_anchor_date` field - The day of the month on which the recurring invoice is published for the subscription.\n\n * [CatalogSubscriptionPlanVariation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogSubscriptionPlanVariation) object - Added the following fields:\n * `monthly_billing_anchor_date` field - The day of the month on which the recurring invoice is published for the subscription.\n * `can_prorate` field - Whether bills for this plan variation can be split for proration.\n * `successor_plan_variation_id` field - The ID of a replacement `CatalogSubscriptionPlanVariation` object used when the current plan is marked as Deprecated. For more information, see [Swap Subscription Plan Variations](subscriptions-api\/swap-plan-variations).\n\n * [SubscriptionAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/SubscriptionAction) object - New `CHANGE_BILLING_ANCHOR_DATE` action type for scheduling a billing anchor date change.\n * [SubscriptionEvent](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/SubscriptionEvent) object - New `BILLING_ANCHOR_DATE_CHANGED` event type that indicates the subscription's billing date was changed.",
        "tags": [
            "Square",
            "Bookings API",
            "Devices API",
            "Subscriptions API",
            "BETA"
        ]
    },
    {
        "id": "4Tc4ZqPKo8uGOyYGmaHa2g",
        "slug": "changelog\/connect-logs\/2023-09-25",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-09-25T08:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Bookings API:**\n * [BulkRetrieveTeamMemberBookingProfiles](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/bulk-retrieve-team-member-booking-profiles) - A new endpoint that supports retrieving one or more team members' booking profiles.\n\n* **Devices API:**\n * [ListDevices](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/devices-api\/list-devices) - A new endpoint that supports listing all devices for a given seller (Beta). \n * [GetDevice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/devices-api\/get-device) - A new endpoint that supports retrieving information about a specific device (Beta).\n * [DEVICE_READ](oauth-api\/square-permissions#devices) - A new OAuth scope (permission) for `ListDevices` and `GetDevice` (Beta).\n\n For more information about `ListDevices` and `GetDevice`, see [Terminal Device Monitoring](terminal-api\/terminal-device-monitoring).\n\n* **Inventory API:**\n * [ItemVariationLocationOverrides](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/ItemVariationLocationOverrides) - The `sold_out` and `sold_out_valid_until` fields are updated to GA.\n * [ModifierLocationOverrides](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/ModifierLocationOverrides) - The new `sold_out` field supports seller-settable and app-readable sold-out status. For more information, see [Monitor Sold-out Items](inventory-api\/monitor-sold-out-status-on-item-variation).\n\n* **Webhooks:**\n * [Oauth authorization revoked](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/o-auth-api\/webhooks\/oauth.authorization.revoked) - Moved to [General Availability.](build-basics\/api-lifecycle#general-availability)\n * `is_valid_webhook_event_signature` method. Added for webhook signature validation. For the code sample, see [Webhook event notification validation - Ruby.](webhooks\/step3validate#webhook-event-notification-validation---ruby)\n\n### Documentation updates\n* [Device](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Device) object - Updated the object reference. The `Device` object represents a Square Terminal device, which the Devices API can identify as paired with a point-of-sale application (Beta). The previous `Device` object is now titled [V1Device](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/V1Device).",
        "tags": [
            "Square",
            "Documentation",
            "Bookings API",
            "Devices API",
            "Inventory API",
            "Webhooks",
            "BETA"
        ]
    },
    {
        "id": "1SoulsEDMSLtYKAB2oRdxg",
        "slug": "changelog\/connect-logs\/2023-09-06",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-09-06T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### Documentation updates\n\n* **Locations API:**\n * [TaxIds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TaxIds) object - The `TaxIds` object has always been read-only. Now the entries in the technical reference include the **Read only** flag. \n\n* **Merchants API:**\n * [Merchants API Overview](merchants-api) - The `id` of a particular merchant is only accessible through the Merchants API. It's not visible on the Square Dashboard or the Developer Console.",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "6VvIdQGHl4uTVxBtXshnnx",
        "slug": "changelog\/connect-logs\/2023-08-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-08-16T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Bookings API:**\n * [BulkRetrieveBookings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/bulk-retrieve-bookings) endpoint - New endpoint that supports the retrieval of multiple bookings in one call.\n * [ListBookings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/list-bookings) endpoint - New `customer_id` field that supports the listing of bookings by customer ID. \n\n* **Bookings Custom Attributes API:**\n * [Booking Custom Attributes API](booking-custom-attributes-api\/overview) - Moved to [General Availability.](build-basics\/api-lifecycle#general-availability)\n\n* **Catalog API:**\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) object - New `is_archived` field that indicates whether an item is archived (`true`) or not (`false`). \n * [ArchivedState](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ArchivedState) enum - New enum that supports searching for archived items, non-archived items, or both. \n * `archived_state` query filter - Added to the [SearchCatalogItems](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-items) endpoint to return archived items, non-archived items, or both. \n\n* **Gift Cards API:**\n * [ListGiftCards](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/list-gift-cards) endpoint - Increased the maximum `limit` value from 50 to 200. This change applies to all Square versions.\n\n* **Locations API:**\n * [TaxIds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TaxIds) object - Added the QII (Qualified Invoice Issuer) tax ID used for locations in Japan.\n\n* **Loyalty API:**\n * [LoyaltyPromotionIncentivePointsMultiplierData](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyPromotionIncentivePointsMultiplierData) object - The `POINTS_MULTIPLIER` incentive type now supports decimal multipliers (for example, earn 1.5x points):\n * Added the `multiplier` field, which is a string representation of a decimal. This field replaces `points_multiplier`.\n * Deprecated the `points_multiplier` field. For more information, see [Migration notes.](loyalty-api\/overview#migration-notes)\n\n* **Orders API:**\n\n * [TenderType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TenderType) object - Added `BANK_ACCOUNT`, `BUY_NOW_PAY_LATER`, and `SQUARE_ACCOUNT` values.\n * [Tender](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Tender) object - Added [TenderBankAccountDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TenderBankAccountDetails), [TenderBuyNowPayLaterDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TenderBuyNowPayLaterDetails), and [TenderSquareAccountDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TenderSquareAccountDetails).\n\n* **Payments API:**\n\n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object:\n * Added the `SQUARE_ACCOUNT` value to `source_type`.\n * Added the `square_account_details` field.\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) endpoint - Added the `customer_details` field to support customer-initiated and mail-order\/telephone-order (MOTO) payments.\n\n### Documentation updates\n\n* [Delete Catalog Objects and Query Deleted Objects](catalog-api\/delete-catalog-objects) - New topic that documents how to delete a catalog object and query deleted objects for auditing purposes. \n\n* Reorganized the [Gift Cards](gift-cards\/using-gift-cards-api) section of the documentation and added the following new topics:\n * [Sell Square Gift Cards](gift-cards\/sell-gift-cards)\n * [Reload Square Gift Cards](gift-cards\/reload-gift-cards)\n * [Redeem Square Gift Cards](gift-cards\/redeem-gift-cards)\n * [Retrieve Square Gift Cards and Track Activity](gift-cards\/retrieve-gift-cards-and-activities)\n * [Manage Square Gift Cards on File](gift-cards\/manage-gift-cards-on-file)\n\n* House accounts allow customers to make purchases (up to a predetermined spending limit), and pay the seller for those purchases at a later date. You can use the Payments API to view house account charges, and the Orders API to view items charged to a house account. For more information, see [House Accounts](payments-api\/take-payments\/house-accounts).",
        "tags": [
            "Square",
            "Documentation",
            "Bookings API",
            "Booking Custom Attributes API",
            "Catalog API",
            "Gift Cards API",
            "Locations API",
            "Loyalty API",
            "Orders API",
            "Payments API",
            "DEPRECATED"
        ]
    },
    {
        "id": "7fOnlJmS1YABQZCoEdjLxt",
        "slug": "changelog\/connect-logs\/2023-08-02",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-08-02T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### Documentation updates\n* [Pagination](build-basics\/common-api-patterns\/pagination) \u2013 Clarified that you must maintain the same request body when using cursors in subsequent requests to paginated endpoints.",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "7sDY9JIYumTPdLPjDUbJIR",
        "slug": "changelog\/connect-logs\/2023-07-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-07-20T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Customers API:**\n * The [ListCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/list-customers) and [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoints now optionally return the total number of results for the request:\n * For `ListCustomers`, set the `count` query parameter to `true`. The returned value also represents the total number of customers for the Square seller.\n * For `SearchCustomers`, set the `count` field to `true` in the request body.\n\n When `count` is set to `true` in the request, the response includes a `count` field that contains the total number of customers. This change applies to all Square API versions. However, to access `count` using a Square SDK, you must use a version of the SDK that supports Square API version 2023-07-20 or later.\n\n* **Invoices API:**\n * [InvoiceAcceptedPaymentMethods](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceAcceptedPaymentMethods) object - Added the `cash_app_pay` field, which lets customers make invoice payments using [Cash App](https:\/\/cash.app) (US only). For Square API versions 2021-04-21 and later, Square now accepts `cash_app_pay` in `CreateInvoice` and `UpdateInvoice` requests and includes it in returned invoices. For more information, including SDK version support, see [Cash App Pay.](invoices-api\/overview#cash-app-pay)\n\n* **Terminal API:**\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object - The `deadline_duration` field is now deprecated. Use the [CancelTerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/cancel-terminal-checkout) endpoint instead to cancel pending or in-progress Terminal checkouts when needed. For more information, see [Cancel a Terminal checkout.](terminal-api\/square-terminal-payments#cancel-a-terminal-checkout)\n\n* **Webhooks:** \n * Added a helper method to the PHP SDK for webhook signature validation. For the code sample, see [Webhook event notification validation - PHP.](webhooks\/step3validate#webhook-event-notification-validation---php)\n * The `data.type` field of each webhook event is modified to match the corresponding underlying data object. \n\n### Documentation updates\n* Afterpay monthly payments - Added a maximum payment amount. For more information, see [Afterpay minimums and maximums.](payments-api\/take-payments#afterpay-minimums-and-maximums)",
        "tags": [
            "Square",
            "Documentation",
            "Customers API",
            "Invoices API",
            "Terminal API",
            "Webhooks",
            "DEPRECATED"
        ]
    },
    {
        "id": "2rhLigNsApFyVR3WHbsCqx",
        "slug": "changelog\/connect-logs\/2023-07-06",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-07-06T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Connect V1 Payments API:**\n * The retirement date for the V1 Payments API is extended to July 17, 2023. For more information, see [Migrate from the Connect V1 Payments API](migrate-from-v1\/guides\/v1-payments).\n\n### Documentation updates\n* **Subscriptions API:**\n * [CreateSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/create-subscription) endpoint. The `plan_id` field was marked as `DEPRECATED`. It's now `RETIRED` and removed from public documentation. Use the `plan_variation_id` field instead.",
        "tags": [
            "Documentation",
            "Connect v1",
            "RETIRED"
        ]
    },
    {
        "id": "3uEYNfEF82LGWt5btUDmJX",
        "slug": "changelog\/connect-logs\/2023-06-08",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-06-08T08:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n\n* **Checkout API:** \n * [CheckoutOptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CheckoutOptions) object. Added the following fields:\n * `enable_coupon`. Indicates whether to include the `Add coupon` section for the buyer to provide a Square marketing coupon in the payment form.\n * `enable_loyalty`. Indicates whether to include the `REWARDS` section for the buyer to opt in to loyalty, redeem rewards in the payment form, or both.\n\n For more information, see [Specify checkout options.](checkout-api\/optional-checkout-configurations#specify-checkout-options) \n\n* **GraphQL:** \n\n [Square GraphQL](devtools\/graphql) is moved to [beta.](build-basics\/api-lifecycle#beta) You can now send your queries to the following endpoints:\n * `https:\/\/connect.squareup.com\/public\/graphql` for production queries.\n * `https:\/\/connect.squareupsandbox.com\/public\/graphql` for Sandbox queries.\n\n With this release, Square GraphQL continues to provide more access to Square data. Currently, you can query the following Square graphs:\n * Cards\n * Catalog\n * Customers\n * Inventory\n * Merchants\n * Orders\n * Payments\n * Refunds\n\n* **OAuth API:** \n * [CreateMobileAuthorizationCode](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/mobile-authorization-api\/create-mobile-authorization-code) endpoint. The `error` object is renamed to `errors` in the response. The format of the `errors` object is upgraded to include the `category`, `code`, and `detail` fields.\n\n* **Payouts API:**\n * [Payout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payouts) object. Added the `end_to_end_id` field. The `end_to_end_id` field is a unique ID for each `Payout` object that might also appear on the seller's bank statement. For more information, see [Payout object.](payouts-api\/overview#payout-object)\n * [PayoutEntry](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PayoutEntry) object. Added the following types for a payout entry:\n * `AUTOMATIC_BITCOIN_CONVERSIONS`. Indicates that the portion of each payment withheld by Square was automatically converted into bitcoin using Cash App. The seller manages their bitcoin in their Cash App account.\n * `AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED`. Indicates that a withheld payment, which was scheduled to be converted into bitcoin using Cash App, was deposited back to the Square payments balance.\n * `CREDIT_CARD_REPAYMENT`. Indicates that a repayment toward the outstanding balance on the seller's Square credit card was made.\n * `CREDIT_CARD_REPAYMENT_REVERSED`. Indicates that a repayment toward the outstanding balance on the seller's Square credit card was reversed.\n\n For more information, see [Payout type details.](payouts-api\/list-payout-entries#payout-type-details)\n\n* **Subscriptions API:**\n * The Subscriptions API now allows for itemized subscriptions; sellers can set specific items or categories in their catalog to be subscribable.\n * Added the `CatalogSubscriptionPlanVariation` data type. Subscriptions created with this API version use this object to configure how items are sold in a subscription, rather than the `CatalogSubscriptionPlan`. Subscriptions created prior to this API version continue to work as previously configured using the `CatalogSubscriptionPlan`.\n * `CatalogSubscriptionPlan` object. Added the following properties:\n\t * `subscription_plan_variations`. The list of subscription plan variations available for this plan.\n\t * `eligible_item_ids`. The list of IDs of `CatalogItems` that are eligible for subscription by this plan.\n\t * `eligible_category_ids`. The list of IDs of `CatalogCategories` that are eligible for subscription by this plan.\n\t * `all_items`. Indicates whether all items in the seller's catalog are subscribable. \n * `Subscription` object: \n\t * The new `plan_variation_id` property replaces the `plan_id` property.\n\t * The new `phases` array corresponds to the `phases` of the `CatalogSubscriptionPlanVariation` associated with the subscription.\n\n * `CreateSubscription` endpoint. The `plan_variation_id` property replaces the `plan_id` property.\n * `SwapPlan` endpoint. The `new_plan_variation_id` property replaces the `new_plan_id` property.\n\n* **Team API and Labor API:** \n\n To support the linking of global seller-editable job titles to a team member's default job title and shift job title, a `job_id` is added to two objects. This job ID can't be used to retrieve the global job record. To learn about team member titles and shift job titles, see [Update job assignments.](team\/integration#update-job-assignments)\n * [TeamMemberWage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TeamMemberWage) object. Added the `job_id` field.\n * [ShiftWage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/ShiftWage) object. Added the `job_id` field.\n\n* **Terminal API:**\n * [TerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalAction) object:\n * Added Terminal action types (beta) that launch various custom screen workflows on the Square Terminal.\n * Added the `await_next_action` field to link multiple custom screen workflows.\n * [DismissTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/dismiss-terminal-action) endpoint. A new endpoint that dismisses the \"Please wait...\" screen on the Square Terminal and transitions to the next screen workflow.\n\n* **Webhook Subscriptions API:**\n * The [Webhook Subscriptions API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhook-subscriptions-api) is moved to general availability (GA).\n\n### Documentation updates\n\n* **Payouts API:**\n * Documented descriptions for all [payout types.](payouts-api\/list-payout-entries#payout-type-details)\n\n* **Subscriptions API:**\n * New documentation:\n * [Subscriptions API Overview](subscriptions\/overview) \n * [Subscription Plans and Variations](subscriptions-api\/plans-and-variations) \n * [Manage Subscriptions](subscriptions-api\/manage-subscriptions) \n * [Subscription Actions and Events](subscriptions-api\/actions-events) \n * [Pause, Resume, or Cancel Subscriptions](subscriptions-api\/pause-resume-cancel-subscriptions) \n * [Subscription Billing and Invoices](subscriptions-api\/subscription-billing) \n * [Swap Subscription Plan Variations](subscriptions-api\/swap-plan-variations)\n\n* **Terminal API:**\n * New documentation for custom workflows (beta):\n * [Customize Screen Interactions for Non-Payment Workflows](terminal-api\/advanced-features\/custom-workflows)\n * [Get a Buyer's Confirmation](terminal-api\/advanced-features\/custom-workflows\/confirmation)\n * [Capture a Buyer's Signature](terminal-api\/advanced-features\/custom-workflows\/signature)\n * [Collect a Buyer's Contact Information](terminal-api\/advanced-features\/custom-workflows\/data-collection)\n * [Display Menu Select Options](terminal-api\/advanced-features\/custom-workflows\/menu-select)\n * [Display a QR Code ](terminal-api\/advanced-features\/custom-workflows\/qr-code-display)\n * [Link and Dismiss Terminal Actions](terminal-api\/advanced-features\/custom-workflows\/link-and-dismiss-actions)\n * Updated [Advanced Square Terminal Features](terminal-api\/advanced-features) to mention custom workflows and idle screen customization.\n * Square Terminal now supports customizing the Square Terminal idle screen. For more information about the customization process, see [Customize the Square Terminal Idle Screen](terminal-api\/advanced-features\/customize-idle-screen).",
        "tags": [
            "Square",
            "Documentation",
            "Checkout API",
            "GraphQL",
            "Labor API",
            "OAuth API",
            "Payouts API",
            "Subscriptions API",
            "Team API",
            "Terminal API",
            "Webhook Subscriptions API",
            "BETA"
        ]
    },
    {
        "id": "6IhlcvMdcGfHXntWIo6aEv",
        "slug": "changelog\/connect-logs\/2023-05-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-05-17T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### New API releases\n* **Merchant Custom Attributes API (beta):**\n * The [Merchant Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchant-custom-attributes-api) enables developers to create and manage [custom attributes for merchants](merchant-custom-attributes-api\/overview). \n\n### API updates\n* **Cash Drawer Shifts API:**\n * [CashDrawerShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CashDrawerShift) object. The following fields are renamed:\n * `employee_ids` is now `team_member_ids`\n * `opening_employee_id` is now `opening_team_member_id`\n * `ending_employee_id` is now `ending_team_member_id`\n * `closing_employee_id` is now `closing_team_member_id`\n\n These fields previously referenced `Employee` objects from the retired Employees API. With this update, the fields reference `TeamMember` objects. You don't need to map retired `Employee` objects to their replacement `TeamMember` objects because a `TeamMember` object has the same ID as the `Employee` object that it replaces.\n * [CashDrawerShiftEvent](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CashDrawerShiftEvent) object. The `employee_id` field is renamed to `team_member_id`.\n\n* **Catalog API:**\n * [CatalogModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifier). Added the `location_overrides` field to support location-specific price overrides.\n * [CatalogTax](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogTax) object. Added the `applies_to_product_set_id` field to specify a product set to apply the tax to. The tax is applied to all products in the product set.\n\n* **Inventory API:**\n * [InventoryState](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InventoryState) enum: \n * The new `IN_TRANSIT` value indicates that the associated inventory quantity is in transit from one location to another. `IN_TRANSIT` replaces `IN_TRANSIT_TO`.\n * `IN_TRANSIT_TO` is now deprecated.\n\n* **Invoices API:**\n * [CreateInvoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api\/create-invoice) and [UpdateInvoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api\/update-invoice) endpoints. You can now specify the `bank_account` payment method as an `accepted_payment_method` for all invoices. Previously, this payment method only supported invoices with a single `BALANCE` payment request. This change applies to all Square API versions starting May 17, 2023.\n\n* **Loyalty API:**\n * [AccumulateLoyaltyPoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/accumulate-loyalty-points) and [CalculateLoyaltyPoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/calculate-loyalty-points) endpoints. Square now returns a `400 BAD REQUEST` error if the specified order includes the `returns` field. Square automatically adjusts loyalty points for returns during the refund flow.\n\n* **Point of Sale API:**\n * The Point of Sale API now supports Tap to Pay for Android and iPhone. For more information, see [Point of Sale API Overview.](pos-api\/what-it-does#requirements-and-limitations)\n\n### Documentation updates\n* **Locations API:**\n * [UpdateLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/update-location) endpoint. For added security, the Locations API now enforces a Square policy where a location's `business_name` can be changed no more than three times in a 12-month period.\n * Clarified in the [Locations API documentation](locations-api) that sellers can have up to 300 locations in their Square account. \n\n* **Webhooks:**\n * [Event](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Event) objects. All webhook data and object names have been renamed from `SquareEvent` to `Event`.\u00a0For example, `PaymentUpdatedSquareEvent` has changed to `PaymentUpdatedEvent`.",
        "tags": [
            "Square",
            "Documentation",
            "Cash Drawer Shifts API",
            "Catalog API",
            "Inventory API",
            "Invoices API",
            "Loyalty API",
            "Merchant Custom Attributes API",
            "Point of Sale API",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "5zaRvyvssO62uoPZDxAFZg",
        "slug": "changelog\/connect-logs\/2023-04-19",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-04-19T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **Catalog API:**\n * [CatalogCustomAttributeDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCustomAttributeDefinition) object. The `allowed_object_types` field now supports `MODIFIER` as an option, which enables the [CatalogModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifier) object to support the specified custom attribute.\n\n* **Checkout API:**\n * [PaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PaymentLink) object. Added a new `long_url` field. The `long_url` field shows the long version of URL in addition to the shortened version of the `url` field. \n\n* **Loyalty API:**\n * [SearchLoyaltyAccounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/search-loyalty-accounts) endpoint. The maximum number of results to include in a paged response changed from 30 to 200. This setting is controlled by the `limit` field. The default limit remains 30. This change applies to all Square API versions.\n\n* **OAuth API:**\n * The [RetrieveTokenStatus](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/o-auth-api\/retrieve-token-status) endpoint is moved to [general availability](build-basics\/api-lifecycle) (GA). For more information, see\u00a0[Token Introspection.](\/oauth-api\/token-introspection) \n\n* **Orders API:**\n * [OrderServiceChargeCalculationPhase](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/OrderServiceChargeCalculationPhase) enum. Added two new values for calculating apportioned service charges:\n * `APPORTIONED_PERCENTAGE_PHASE`: the service charge is calculated after discounts, but before any amount-based apportioned service charges and taxes.\n * `APPORTIONED_AMOUNT_PHASE`: the service charge is calculated after any discounts and percentage-based apportioned service charges, and before taxes.\n\n For more information, see [Service charges.](\/orders-api\/how-it-works#service-charges)\n\n* **Terminal API:**\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object. \n - Added support for money tipping, statement description identifier, team member identification, and canceling or completing a payment after a delayed capture duration has elapsed.\n - Removed the `FAILED` read-only status description from the `delay_duration` field. The `CANCELED` and `COMPLETED` status descriptions remain for the `delay_duration` field.",
        "tags": [
            "Square",
            "Catalog API",
            "Checkout API",
            "Loyalty API",
            "OAuth API",
            "Orders API",
            "Terminal API"
        ]
    },
    {
        "id": "2a3Kr0fpc63Yn6nfabbdCJ",
        "slug": "changelog\/connect-logs\/2023-03-15",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-03-15T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### API updates\n* **OAuth API:**\n * The PKCE (Proof Key for Code Exchange) flow is moved to [general availability](build-basics\/api-lifecycle) (GA). For more information, see\u00a0[PKCE flow.](\/oauth-api\/overview#pkce-flow)\n\n### Documentation updates\n\n* Updated the rate limits for using the GraphQL API. For more information, see\u00a0[GraphQL (alpha).](\/devtools\/graphql#rate-limiting)",
        "tags": [
            "Square",
            "Documentation",
            "OAuth API"
        ]
    },
    {
        "id": "2gnYlNf83Qup9asHh0J9sg",
        "slug": "changelog\/connect-logs\/2023-02-01",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-02-01T10:00",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### Documentation updates\n\n* [Define Custom Attributes for Locations](\/location-custom-attributes-api\/custom-attribute-definitions). Clarified that the `version` field can be set to either the current version or -1 (if optimistic concurrency control is not needed) in a call to [UpdateLocationCustomAttributeDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/location-custom-attributes-api\/update-location-custom-attribute-definition).",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "2E9L7LHV4tHjrYdJwFbU9c",
        "slug": "changelog\/connect-logs\/2023-01-19",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2023-01-19T08:00:00Z",
        "summary": "Choose **Details** to find the latest Square API and SDK versions and information about the changes in this release.",
        "details": "### New API releases\n* **Location Custom Attributes API (beta):**\n * The [Location Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/location-custom-attributes-api) enables developers to create and manage [custom attributes for locations](location-custom-attributes-api\/overview). \n\n### API updates\n\n* **Gift Card Activities API:**\n * [GiftCardActivity](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/GiftCardActivity) object. Added the read-only `transfer_balance_to_activity_details` and `transfer_balance_from_activity_details` fields that contain information about `TRANSFER_BALANCE_TO` and `TRANSFER_BALANCE_FROM` activities. Square creates these activities when a buyer transfers money between gift cards linked to their [Square profile](https:\/\/profile.squareup.com).\n\n* **OAuth API:**\n * [Authorize](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api\/authorize) endpoint. Added support for dynamic ports to create a redirect URL for the PKCE flow. For more information, see\u00a0[Use dynamic ports for PKCE redirect URLs.](oauth-api\/create-urls-for-square-authorization#use-dynamic-ports-for-pkce-redirect-urls)\n\n### Documentation updates\n* [Working with Addresses](build-basics\/working-with-addresses). Clarified that addresses are a subtype of objects (such as `Location` or `Customer`) and are not stored independently of these objects. \n* [Keep Customer Records.](customers-api\/use-the-api\/keep-records#delete-a-customer-profile) Described how resources associated with a customer profile are affected when a customer profile is deleted.\n* [Custom Attributes Overview](devtools\/customattributes\/overview). Added locations to the list of APIs supporting custom attributes and included a table with details about data types common to all custom attribute APIs.",
        "tags": [
            "Square",
            "Gift Card Activities API",
            "Location Custom Attributes API",
            "OAuth API",
            "BETA",
            "Documentation"
        ]
    },
    {
        "id": "7xxsIwP0chOZlamxqmdqPI",
        "slug": "changelog\/connect-logs\/2022-12-14",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-12-14T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Customers API:**\n * [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint. The following changes apply:\n * `segment_ids` filter. Added a filter to support searching customers based on their membership in customer segments. For more information, see [Search by segment IDs.](customers-api\/use-the-api\/search-customers#search-by-segment-ids)\n * `custom_attribute` filter and related filter objects. Moved to [general availability](build-basics\/api-lifecycle) (GA).\n* **OAuth API:**\n * The [RetrieveTokenStatus](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api\/retrieve-access-token-status) endpoint (beta) enables token introspection of an [OAuth access token](build-basics\/access-tokens#get-an-oauth-access-token) or an application's [personal access token.](build-basics\/access-tokens#get-a-personal-access-token) For more information, see\u00a0[Token Introspection](oauth-api\/token-introspection).\n* **Refunds API:**\n * Added several [Error](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/error) codes to provide more detailed information about refund attempt failures:\n * `CARD_PRESENCE_REQUIRED`\n * `UNSUPPORTED_SOURCE_TYPE`\n * `UNSUPPORTED_COUNTRY`\n * `UNSUPPORTED_CURRENCY`\n * `CARD_MISMATCH`\n* **Webhooks:**\n * Added a helper method to the Node.js SDK. For more information, see [Webhook event notification validation.](webhooks\/step3validate#webhook-event-notification-validation---nodejs)\n\n### Documentation updates\n\n* [Pagination](build-basics\/common-api-patterns\/pagination). Added a note that the lifespan of a page cursor is 5 minutes.",
        "tags": [
            "Square",
            "Customers API",
            "OAuth API",
            "Refunds API",
            "Webhooks",
            "BETA"
        ]
    },
    {
        "id": "3UbsSAABukmBG3MXjLaPLV",
        "slug": "changelog\/connect-logs\/2022-11-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-11-16T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### New API releases\n* **Booking Custom Attributes API:** (beta)\n * The [Booking Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/booking-custom-attributes-api) enables applications to create and manage custom attributes for bookings. For more information, see [Custom Attributes for Bookings](booking-custom-attributes-api\/overview).\n\n* **Order Custom Attributes API:** (beta)\n * The [Order Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/order-custom-attributes-api) enables applications to create and manage custom attributes for orders. For more information, see [Custom Attributes for Orders](orders-custom-attributes-api\/overview).\n\n### API updates\n* **Catalog API**:\n * [CatalogModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifier) object (beta). The `image_ids` field is replaced by `image_id`. This object no longer supports multiple images.\n\n* **Checkout API:**\n * [CreatePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-payment-link) endpoint. Cash App Pay and Afterpay are no longer supported for [subscription payments](checkout-api\/subscription-plan-checkout). For more information, see [Guidelines and Limitations](checkout-api\/guidelines-and-limitations).\n\n* **Customers API**:\n * [UpdateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/update-customer) endpoint. The following changes apply:\n * The `address` field supports sparse updates.\n * To remove the `address` field, you must set the value to `null` and include the `X-Clear-Null` header in the request.\n\n For more information, see [Migration notes.](customers-api\/what-it-does#migration-notes)\n\n* **Loyalty API:**\n * [LoyaltyPromotion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyPromotion) object. Added the `qualifying_category_ids` and `qualifying_item_variation_ids` fields to support category-based and item-based promotions for `VISIT` and `SPEND` program types. For more information, see [Qualifying items.](loyalty-api\/loyalty-promotions#qualifying-items)\n\n* **Orders API:**\n * Added support for the `DELIVERY` fulfillment type (beta). For more information, see [Manage Order Fulfillments](orders-api\/fulfillments).\n\n* **Terminal API:**\n * [TerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalAction) object (beta). Added the `receipt_options` Terminal action type to support printing and issuing receipts. For more information, see [Print or Issue Receipts for Cash Payments and Previous Transactions](terminal-api\/advanced-features\/issue-receipts).\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object. Application fees, delayed capture, orders and itemizations, and partial authorization are moved to [general availability](build-basics\/api-lifecycle#general-availability) (GA). For more information about setting these payment options for Terminal checkout requests, see [Take Payments with the Terminal API.](terminal-api\/square-terminal-payments)\n * Added support for card dipping to save a card on file (US-based sellers). For more information, see [Save a Card on File with the Terminal API.](terminal-api\/advanced-features\/save-card-on-file)\n\n### SDK Updates\n\n* **SqPaymentForm:**\n * SqPaymentForm was retired on October 31, 2022. Developers must migrate to the Web Payments SDK client-side library. For more information, see [Migrate to the Web Payments SDK](web-payments\/migrate).\n\n### Documentation updates\n\n* **Catalog API**:\n * The [UpsertCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/upsert-catalog-object), [BatchUpsertCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-upsert-catalog-objects), [DeleteCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/delete-catalog-object), and [BatchDeleteCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-delete-catalog-objects) descriptions are updated to include the following previously undocumented behavior: \n * Only one update request (including deletion) is processed at a time per seller account. While a request is being processed, all requests sent to any of these endpoints receive a `429` error response.",
        "tags": [
            "Square",
            "Booking Custom Attributes API",
            "Catalog API",
            "Checkout API",
            "Customers API",
            "Loyalty API",
            "Order Custom Attributes API",
            "Orders API",
            "Terminal API",
            "Square Payment Form",
            "Documentation",
            "BETA",
            "RETIRED"
        ]
    },
    {
        "id": "2vmJkbQpPvLpj9wNSts31W",
        "slug": "changelog\/connect-logs\/2022-10-19",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-10-19T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Customers API:**\n * [CreateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/create-customer) and [UpdateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/update-customer) endpoints. The following changes apply:\n * The `phone_number` provided in the request must be valid.\n * A `birthday` can be specified using `YYYY-MM-DD` or `MM-DD` format\nand is returned in `YYYY-MM-DD` format.\n * String-type fields provided in the request (except `note`) have a maximum length constraint.\n\n * [RetrieveCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/retrieve-customer), [ListCustomers,](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/list-customers) and [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoints. The `birthday` field is returned in `YYYY-MM-DD` format.\n\n For more information about these changes, see [Migration notes.](customers-api\/what-it-does#migration-notes)\n\n* **Invoices API:**\n * [InvoiceAcceptedPaymentMethods](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceAcceptedPaymentMethods) object. Added the `buy_now_pay_later` field, which enables customers to pay invoices using Buy Now Pay Later installment payments. For more information, including requirements and processing limits, see [Buy Now Pay Later payments with Afterpay.](invoices-api\/overview#buy-now-pay-later) In Square versions 2021-04-21 and higher, Square now accepts the `buy_now_pay_later` field in `CreateInvoice` and `UpdateInvoice` requests and includes it in returned invoices.\n\n* **Locations API:**\n * [LocationCapability](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/LocationCapability) object. Added the `UNLINKED_REFUNDS` capability for [unlinked refunds](payments-api\/refund-payments#unlinked-refunds) support.\n\n* **Orders API:**\n\n The following new types and enums are introduced to replace existing types and enums:\n * Types\n * [Fulfillment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Fulfillment) replaces `OrderFulfillment` \n * [FulfillmentFulfillmentEntry](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/FulfillmentFulfillmentEntry) replaces `OrderFulfillmentFulfillmentEntry` \n * [FulfillmentPickupDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/FulfillmentPickupDetails) replaces `OrderFulfillmentPickupDetails` \n * [FulfillmentPickupDetailsCurbsidePickupDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/FulfillmentPickupDetailsCurbsidePickupDetails) replaces `OrderFulfillmentPickupDetailsCurbsidePickupDetails` \n * [FulfillmentRecipient](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/FulfillmentRecipient) replaces `OrderFulfillmentRecipient`\n * [FulfillmentShipmentDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/FulfillmentShipmentDetails) replaces `OrderFulfillmentShipmentDetails`\n * ENUMs\n * [FulfillmentFulfillmentLineitemApplication](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/FulfillmentFulfillmentLineitemApplication) replaces `OrderFulfillmentFulfillmentLineitemApplication` \n * [FulfillmentState](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/FulfillmentState) replaces `OrderFulfillmentState` \n * [FulfillmentPickupDetailsScheduleType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/FulfillmentPickupDetailsScheduleType) replaces `OrderFulfillmentPickupDetailsScheduleType` \n * [FulfillmentType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/FulfillmentType) replaces `OrderFulfillmentType`\n\n* **Payouts API:**\n * [PayoutEntry](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PayoutEntry) object. Added the `type_app_fee_refund_details` and `type_app_fee_revenue_details` fields. These fields show details related to application fee revenue and application fee refunds.\n\n* **Refunds API:**\n * [Refund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Refund) object. Added four fields to support [unlinked refunds,](payments-api\/refund-payments#unlinked-refunds) which allows authorized sellers to refund money to buyers without linking to a prior Square-processed payment:\n * [destination_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds\/refund-payment#request__property-destination_id). The payment card to be refunded.\n * [unlinked](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds\/refund-payment#request__property-unlinked). `True` if the refund is unlinked.\n * [location_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds\/refund-payment#request__property-location_id). The seller location where the refund was issued.\n * [customer_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds\/refund-payment#request__property-customer_id). The customer associated with the card if a refund payment card is saved on file.",
        "tags": [
            "Square",
            "Customers API",
            "Invoices API",
            "Locations API",
            "Orders API",
            "Payouts API",
            "Refunds API"
        ]
    },
    {
        "id": "6tqYlDGyujSKZNWpBYYTM4",
        "slug": "changelog\/connect-logs\/2022-10-05",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-10-05T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n\n* **Disputes API:** \n * [Test the Disputes API](disputes-api\/sandbox-testing). Clarified that test disputes created in the Square Sandbox are not visible in the Developer Dashboard or Seller Dashboard. Test disputes can only be managed with the Disputes API.\n\n* **Refunds API:**\n * [Refund Payments](payments-api\/refund-payments). Documented how long a refund stays in the `PENDING` state.\n\n* **Payments API:**\n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object. When a customer ID is not provided in a `CreatePayment` request, Square might use other payment information to identify a matching customer profile in the Customer Directory and assign the customer ID. If a profile is not found, the API attempts to create an [instant profile.](customers-api\/what-it-does#instant-profiles) If the API cannot create an instant profile, this field remains unset.\n\n* **OAuth API:**\n * [OAuth API Overview](oauth-api\/overview). Renamed this topic to [Connect your Application to a Seller's Account using OAuth](oauth-api\/overview) to clarify that the OAuth API is used by developers to connect to other seller accounts. ",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "4wLCqzBAsUo1FiGT385c7o",
        "slug": "changelog\/connect-logs\/2022-09-22",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-09-22T00:00",
        "summary": "Documentation updates",
        "details": "### Documentation updates\n\n* **Payments API.** Afterpay is now available in Canada. Applications can take [Afterpay payments](payments-api\/take-payments\/afterpay-payments) on behalf of Canadian sellers using the [Checkout API](checkout-api), [Web Payments SDK](web-payments\/add-afterpay), and [Payments API](payments-api\/take-payments). For pricing information, see [Payments Pricing with Square APIs and SDKs](payments-pricing).",
        "tags": [
            "Payments API",
            "Web Payments SDK",
            "Checkout API"
        ]
    },
    {
        "id": "1XOzmLDxMG8AAX5CV8JoZR",
        "slug": "changelog\/connect-logs\/2022-09-21",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-09-21T00:00",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Gift Card Activities API:**\n * [GiftCardActivityAdjustDecrementReason](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/GiftCardActivityAdjustDecrementReason) enumeration. Added the `PURCHASE_WAS_REFUNDED` reason. This reason applies when using an `ADJUST_DECREMENT` activity to decrease the gift card balance after refunding an order that was used to purchase or reload the gift card.\n\n* **Invoices API:**\n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object. Added the `store_payment_method_enabled` field. This field enables customers to choose to save a card on file or bank account on file from the invoice payment page.\n\n* **OAuth API:**\n * [ObtainToken](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api\/obtain-token) endpoint. The following fields are removed from the response: \n * `app_subscription_id`\n * `app_plan_id`\n\n* **Connect V1 APIs:**\n * In the Connect V1 API, some of the deprecated endpoint names conflict with similar names in the Square API. For that reason, the following Connect V1 endpoints have been renamed:\n\n | API | Old endpoints | New endpoints |\n |--------------|--------------|--------------|\n | Payments | ListPayments{% line-break \/%}RetrievePayment |V1ListPayments{% line-break \/%}V1RetrievePayment |\n | Refunds | ListRefunds{% line-break \/%}CreateRefund | V1ListRefunds{% line-break \/%}V1CreateRefund |\n | Settlements | ListSettlements{% line-break \/%}RetrieveSettlement |V1ListSettlements{% line-break \/%}V1RetrieveSettlement |\n | Webhooks | ListWebhooks{% line-break \/%}UpdateWebhooks | V1ListWebhooks{% line-break \/%}V1UpdateWebhooks |\n\n These endpoints are for backward compatibility only. Square strongly discourages using Connect V1 APIs in most cases. \n\n* **Various APIs:**\n * Support for `null` [field clearing](build-basics\/clearing-fields) is now available for the following API objects:\n * `Customer`\n * `Order`\n * `Location`\n * `Invoice`\n * `Subscription`\n * `TeamMember`\n * `Vendor` \n\n### SDKs\n\n* **Square Python SDK:**\n * `is_valid_webhook_event_signature` method. Added for webhooks signature validation. For the code sample, see [Webhook event notification validation - Python.](webhooks\/step3validate#webhook-event-notification-validation---python)\n\n### Documentation updates\n\n* [V2 Webhook Events Reference](webhooks\/v2webhook-events-tech-ref). Added the Permission column to show the permissions required for using each Square API.",
        "tags": [
            "Square",
            "Gift Card Activities API",
            "Invoices API",
            "OAuth API",
            "Connect v1",
            "DEPRECATED",
            "Documentation"
        ]
    },
    {
        "id": "4EBmY0LfAIsxQkFNqlWPIE",
        "slug": "changelog\/connect-logs\/2022-08-23",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-08-23T00:00",
        "summary": "API and documentation updates for Clearpay in the UK.",
        "details": "### API updates\n\n* **Payments API.** Clearpay is now available in the UK. Applications can take [Clearpay payments](payments-api\/take-payments\/afterpay-payments) on behalf of UK sellers using the [Web Payments SDK](web-payments\/add-afterpay) or any of the [in-person payment solutions](in-person-payment-options) and the Payments API. For pricing information, see [Payments Pricing with Square APIs and SDKs](payments-pricing).\n",
        "tags": [
            "Payments API"
        ]
    },
    {
        "id": "5bTFiqszJIEWz4LR7rWoDY",
        "slug": "changelog\/connect-logs\/2022-08-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-08-17T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### New API releases\n\n* **Webhook Subscriptions API (beta).** The\u00a0[Webhook Subscriptions API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhook-subscriptions-api) lets you programmatically manage your webhook subscriptions, including creating, updating, and deleting webhook subscriptions associated with an event. For more information, see [Webhook Subscriptions API Overview.](webhooks\/webhook-subscriptions-api)\n\n### API updates\n\n* **Checkout API:**\n * [CreateCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-checkout)\u00a0endpoint. This endpoint is deprecated and replaced by the [CreatePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-payment-link)\u00a0endpoint. For more information, see\u00a0[Migrate from CreateCheckout to CreatePaymentLink](migrate-from-v1\/guides\/v1-checkout).\n * [CreatePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-payment-link)\u00a0endpoint. The following changes apply:\n * This endpoint now supports adding a shipping fee and an application fee as a checkout option. For more information, see\u00a0[Specify checkout options.](checkout-api\/optional-checkout-configurations#specify-checkout-options)\n * The response now includes a `related_resources` field that contains full order details.\n\n* **Customer Custom Attributes API:**\n * The [Customer Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-custom-attributes-api) has moved to the [general availability](build-basics\/api-lifecycle) (GA) state.\n * [UpsertCustomerCustomAttribute](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customercustom-attributes-api\/upsert-customer-custom-attribute) and [BulkUpsertCustomerCustomAttributes](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customercustom-attributes-api\/bulk-upsert-customer-custom-attributes) endpoints. The absolute value of a `Number`-type custom attribute provided in the request cannot exceed `(2^63-1)\/10^5`, or 92233720368547. This constraint applies to all Square versions.\n * Webhooks. Added new `.owned` and `.visible` webhooks that allow you to receive notifications about changes to all custom attribute definitions and custom attributes owned by your application or visible to your application. The existing webhooks are deprecated and replaced by the new webhooks. For more information, see [Migration notes.](customer-custom-attributes-api\/overview#migration-notes)\n\n* **Customers API:**\n * [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint. This endpoint now supports searching customer profiles based on the value or last updated date of one or more custom attributes. This feature is in beta. For more information, see [Search based on custom attributes.](customers-api\/use-the-api\/search-customers#search-by-custom-attribute)\n\n* **Gift Card Activities API:**\n * [CreateGiftCardActivity](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-card-activities-api\/create-gift-card-activity) endpoint. The `redeem_activity_id` field is now required to create a `REFUND` activity. This requirement applies when custom payment processing applications refund a gift card payment to the same gift card.\n * The recommendation for all third-party applications to use the `REFUND` activity type for all gift card refunds has been revised. Instead, applications that use a custom payment processing system should use the `UNLINKED_ACTIVITY_REFUND` activity to refund cross-tender payments.\n\n* **Locations API:**\n * [Address](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Address) object. The following fields that were previously removed are now restored:\n * `sublocality_2`\n * `sublocality_3`\n * `administrative_district_level_2`\n * `administrative_district_level_3`\n * `first_name`\n * `last_name`\n\n* **Loyalty API:**\n * The Loyalty API now supports creating and managing loyalty promotions. Loyalty promotions enable customers to earn extra loyalty points. For more information, see [Manage Loyalty Promotions](loyalty-api\/loyalty-promotions). This change introduces the following new endpoints:\n * [CreateLoyaltyPromotion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/create-loyalty-promotion)\n * [RetrieveLoyaltyPromotion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/retrieve-loyalty-promotion)\n * [ListLoyaltyPromotions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/list-loyalty-promotions)\n * [CancelLoyaltyPromotion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/cancel-loyalty-promotion) \n * [AccumulateLoyaltyPoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/accumulate-loyalty-points) endpoint. The following changes apply: \n * The `event` field in the response is deprecated and replaced by the `events` field. Starting in Square version 2022-08-17, `event` is no longer returned. For more information, see [Migration notes.](loyalty-api\/overview#migration-notes)\n * The response now includes an `ACCUMULATE_PROMOTION_POINTS` event if the specified order qualifies for promotion points. This event type is only supported for applications that use the Orders API to process orders.\n * [CalculateLoyaltyPoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/calculate-loyalty-points) endpoint. The following changes apply:\n * Added the `loyalty_account_id` field to the request, which determines how promotion points are computed for the specified Square order.\n * Added the `promotion_points` field to the response, which contains the computed promotion points for the specified Square order.\n * [AdjustLoyaltyPoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/adjust-loyalty-points) endpoint. Added the `allow_negative_balance` field, which indicates whether to allow a negative adjustment to result in a negative point balance.\n * Webhooks. Added the `loyalty.promotion.created` and `loyalty.promotion.updated` [webhook events.](loyalty-api\/overview#webhooks)\n\n* **Payments API:**\n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object. For PayPay payments, the `Payment.wallet_details.brand` field value is now set to PAYPAY.\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) endpoint. This endpoint now returns a `PAYMENT_AMOUNT_MISMATCH` error code when the amount provided in the request does not match the expected amount.\n\n* **Terminal API:**\n * PayPay is now available in Japan as a payment source for in-person payments only.\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object. The `payment_type` field now supports the `PayPay` value, which allows the Square Terminal to launch the PayPay checkout screen.\n\n### Documentation updates\n\n* **Terminal API:**\n * [PayPay QR Code Payments.](terminal-api\/international-payment-methods\/paypay-qr-code-payments) Added a topic that explains how to take PayPay payments with the Terminal API.\n * [Test Square APIs in the Sandbox.](devtools\/sandbox\/testing#terminal-api-checkouts) Added a `device_id` that can be used to test PayPay checkout requests in the Square Sandbox.",
        "tags": [
            "Square",
            "Checkout API",
            "Customer Custom Attributes API",
            "Customers API",
            "Gift Card Activities API",
            "Locations API",
            "Loyalty API",
            "Payments API",
            "Terminal API",
            "Webhook Subscriptions API",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "1UBI2soEQB4SRfRauaWxly",
        "slug": "changelog\/connect-logs\/2022-08-03",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-08-03T00:00",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n\n* **Invoices API:**\n\n * Reorganized the Invoices section of the documentation. This change includes adding the following new topics:\n * [Create and Publish Invoices](invoices-api\/create-publish-invoices)\n * [Retrieve, List, or Search Invoices](invoices-api\/retrieve-list-search-invoices)\n * [Update Invoices](invoices-api\/update-invoices)\n * [Cancel or Delete Invoices](invoices-api\/cancel-delete-invoices)\n * [Pay or Refund Invoices](invoices-api\/pay-refund-invoices)\n\n* **Disputes API:**\n * [Disputes Overview](disputes-api\/overview). Added a diagram that outlines the steps of the dispute process. \n * [Test the Disputes API](disputes-api\/sandbox-testing). Reorganized and expanded information about testing the Disputes API in the Square Sandbox.\n * Updated example responses for [Disputes API endpoints](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api) in the Square API Reference. ",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "7nfywMYzTWyCUF1ZYLhMbA",
        "slug": "changelog\/connect-logs\/2022-07-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-07-20T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Catalog API:**\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) object:\n * Added the [description_html](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem#definition__property-description_html) field to support the rich-text description of an item using supported valid HTML elements. \n * Added the [description_plaintext](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem#definition__property-description_plaintext) field to represent the `description_html` text value without HTML formatting tags.\n * Deprecated the [description](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem#definition__property-description) field. \n\n* **Customer Custom Attributes API:**\n * [CustomAttributeDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CustomAttributeDefinition) object. Removed the `source_application` field, which was intended for internal use only.\n\n* **OAuth API:** \n * The [OAuth API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api) now supports the Proof Key for Code Exchange (PKCE) flow (beta) in addition to the Authorization Code flow. The PKCE flow is used for mobile applications and any application with a public client. For more information, see [OAuth API Overview](oauth-api\/overview).\n\n* **Orders API:**\n * [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) object. Added the read-only `net_amount_due_money` field, which represents the amount due on the order.",
        "tags": [
            "Square",
            "Catalog API",
            "Customer Custom Attributes API",
            "OAuth API",
            "Orders API",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "4zl5ekWPJgj6Jbg64bozA3",
        "slug": "changelog\/connect-logs\/2022-06-29",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-06-29T00:00",
        "summary": "Documentation updates",
        "details": "### Documentation updates\n\n* **Cards API:**\n * [Cards API Overview](\/cards-api\/overview). Added an embedded video tutorial that describes using the Cards API. \n\n* **Gift Cards API:**\n * [Gift Cards API Overview.](gift-cards\/using-gift-cards-api#flow-diagram-reloading-a-gift-card-orders-api-integration) Added a diagram that shows the typical application flow for reloading a gift card when using Orders API integration.\n\n* **OAuth API:**\n * [OAuth Best Practices](oauth-api\/best-practices). Added an embedded video tutorial that describes best practices for using OAuth. \n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "4OwOz5o80dRzrg2qeVRhcb",
        "slug": "changelog\/connect-logs\/2022-06-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-06-16T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Bookings API:**\n * [AppointmentSegment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/AppointmentSegment) object. The `service_variation_id` and `service_variation_version` attributes are now optional.\n\n* **Gift Card Activities API:**\n * The [Gift Card Activities API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-card-activities-api) has moved to the [general availability](build-basics\/api-lifecycle) (GA) state.\n\n * [GiftCardActivityRedeem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/GiftCardActivityRedeem) object. Added the `status` field, which indicates the redemption status: `PENDING`, `COMPLETED`, or `CANCELED`. This field is now included in all `REDEEM` activities. Also added the corresponding `GiftCardActivityRedeemStatus` enum.\n\n * [gift_card.activity.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/gift_card.activity.updated) webhook. New [webhook event](gift-cards\/webhooks) invoked when a `REDEEM` activity or `IMPORT` activity is updated.\n\n * [CreateGiftCardActivity](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-card-activities-api\/create-gift-card-activity) endpoint. The `redeem_activity_id` field is now optional for `REFUND` activities, which allows the `REFUND` activity type to be used for all gift card refunds. In addition, cross-tender refunds made from Square Point of Sale or the Square Seller Dashboard are now processed as `REFUND` activities instead of `UNLINKED_ACTIVITY_REFUND` activities. For more information, see [Migration notes.](gift-cards\/using-gift-cards-api#migrate-refund-replaces-unlinked-activity-refund)\n\n* **Gift Cards API:**\n * The [Gift Cards API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api) has moved to the GA state.\n\n * [ListGiftCards](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/list-gift-cards) endpoint. Gift cards returned in the response are now sorted by the `created_at` timestamp in ascending order.\n\n* **Inventory API:**\n * [BatchRetrieveInventoryCounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-counts) endpoint. This endpoint now exposes the `limit` field for applications to set the maximum number of records to return in a page.\n * [BatchRetrieveInventoryChanges](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-changes) endpoint. This endpoint now exposes the `limit` field for applications to set the maximum number of records to return in a page.\n\n* **Payments API:**\n * [Card](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Card) object. This object now includes a new field, `card_co_brand`, which is set if a buyer uses a co-branded card for payment. For example, suppose a seller takes an in-person payment using a Square product such as Square Point of Sale. If the buyer uses Google Pay or Apple Pay that has an Afterpay card attached, the resulting `Payment` object has the `card_details.card.card_co_brand` set to `AFTERPAY`. This additional information allows the seller to distinguish between an Afterpay card from some other card attached to Google Pay or Apple Pay.\n\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/CreatePayment) endpoint. By default, if an authorized payment (see [Delayed Capture of a Card Payment](payments-api\/take-payments\/card-payments\/delayed-capture)) is not in a terminal state (`COMPLETED`, `CANCELED`, or `FAILED`) after the `delay_duration` time period is expired, Square automatically cancels the payment. Now an application can optionally direct Square to complete the authorized payment by setting the `delay_action` field to `COMPLETE` in a `CreatePayment` request. For more information, see [Time threshold.](payments-api\/take-payments\/card-payments\/delayed-capture#time-threshold)\n\n* **Payouts API:**\n * The [Payouts API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payouts-api) has moved to the GA state and replaces the deprecated V1 Settlements API.\n\n* **Terminal API:**\n * [TerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalAction) object. The following changes apply:\n * Added `PING` as a supported Terminal action type.\n * Added the `device_metadata` field to support returning device information from a [CreateTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/CreateTerminalAction) request of the `PING` type. Examples of device information include battery level, operating system version, network connection settings, and other information. \n\n For more information about using the `PING` Terminal action, see [Check Device Information for a Square Terminal.](terminal-api\/advanced-features\/check-device-information)\n\n### Documentation updates\n\n* **V1 Settlements API:**\n * [Migrate from the Square Settlements API.](migrate-from-v1\/guides\/v1-settlements) Added a topic to document the migration from the V1 endpoints of [ListSettlements](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/settlements-api\/v1-list-settlements) and [RetrieveSettlement](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/settlements-api\/v1-retrieve-settlement) to its V2 counterparts of [ListPayouts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payouts-api\/list-payouts), [GetPayout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payouts-api\/get-payout), and [ListPayoutEntries](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payouts-api\/list-payout-entries).\n* **Build Basics:**\n * [International Development Considerations](build-basics\/international-development). Added to summarize the issues and considerations that a developer should be aware of when creating applications for use by sellers in other countries.",
        "tags": [
            "Square",
            "Bookings API",
            "Gift Card Activities API",
            "Gift Cards API",
            "Inventory API",
            "Payments API",
            "Payouts API",
            "Terminal API",
            "Documentation"
        ]
    },
    {
        "id": "3y98PPLXVQi876PNcGXRIe",
        "slug": "changelog\/connect-logs\/2022-06-02",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-06-02T00:00",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n\n* **Gift Cards API:**\n * [Walkthrough 2: Use a Gift Card](gift-cards\/walkthrough-2) topics. Updated to include the application flow for taking a gift card payment using the ID of a gift card on file.\n\n Using a gift card ID as the `source_id` for a `CreatePayment` request is now supported in the Sandbox environment. After the gift card payment is completed, Square updates the gift card balance. Previously, this feature was only supported in production. This is a service-level change that applies to all Square API versions.\n\n* **Terminal API:**\n * Technical reference updates:\n * [CreateTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-action) endpoint. Updated the description to more accurately describe the behavior of the endpoint. Updated the description of the `save_card_options` property as well.\n * [CreateTerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-checkout) endpoint. Added information about the `accept_partial_authorization` field and how the field cannot be set to `true` if an `order_id` is not specified in the response body.\n\n* **Web Payments SDK:**\n * For the latest documentation updates, see the [Web Payments SDK changelog.](changelog\/webpaymentsdk\/2022-06-02)\n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "5fTnBgUU8IKr8FQIejK1B2",
        "slug": "changelog\/connect-logs\/2022-05-12",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-05-12T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### New API releases\n* **Customer Custom Attributes API:** (beta)\n\n * The [Customer Custom Attributes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-custom-attributes-api) enables applications to create and manage custom attributes for customer profiles. For more information, see [Custom Attributes for Customer Profiles.](customer-custom-attributes-api\/overview)\n\n### API updates\n\n* **Bookings API:**\n\n * The [Bookings API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api) has moved to the [general availability](build-basics\/api-lifecycle) (GA) state.\n * The Bookings API now supports the integration of applications with a seller's paid Square Appointments subscription. For more information, see [Integration with paid subscription plans.](bookings-api\/what-it-is#integration-with-paid-subscription-plans)\n\n* **Checkout API:**\n\n * The [Checkout API](checkout-api) is updated with several [new features,](checkout-api#checkout-api-highlights-1) including the following new endpoints:\n * [CreatePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-payment-link)\n * [UpdatePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/update-payment-link)\n * [DeletePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/delete-payment-link)\n * [ListPaymentLinks](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/list-payment-links)\n * [RetrievePaymentLink](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/retrieve-payment-link)\n\n These endpoints are publicly available to all developers as part of an [early access program (EAP).](checkout-api#early-access-program-for-square-online-apis) You should use the new `CreatePaymentLink` endpoint in place of the previously released [CreateCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/checkout-api\/create-checkout) endpoint. \n\n* **Gift Cards API:**\n\n * [CreateGiftCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/create-gift-card) endpoint. This endpoint now supports creating a gift card with a custom GAN. As part of this change, the `gan_source` field in the `GiftCard` object is now writable. To specify a custom GAN, include the `gan_source` and `gan` fields in the request. For more information, see [Custom GANs.](gift-cards\/using-gift-cards-api#custom-gans)\n\n* **Locations API:**\n\n * The [CreateLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/create-location) and [UpdateLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/update-location) endpoints have moved to the GA state.\n\n* **Payments API:**\n\n * The Payments API now supports [Cash App](https:\/\/cash.app\/) payments as a payment source. An application using the Web Payments SDK can take Cash App information from a buyer and generate a payment token. The application can then call [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) to charge the payment token. Cash App payments are supported only in the United States, so only buyers in the United States can choose Cash App as a payment option. For more information, see [Cash App Payments](payments-api\/take-payments\/cash-app-payments). \n\n* **Terminal API:**\n\n * The [Terminal API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api) now supports additional options for taking payments in a checkout request. These options are in beta and available only in the United States. For more information, see [Additional options for payments in a checkout.](terminal-api\/square-terminal-payments#additional-options-for-payments-in-a-checkout)\n * The Terminal API has new endpoints in beta called Terminal actions, which are available in the United States, Canada, and Australia. The Terminal API includes the following new endpoints: \n * [CreateTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-action)\n * [SearchTerminalActions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/search-terminal-actions)\n * [GetTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/get-terminal-action)\n * [CancelTerminalAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/cancel-terminal-action)\n\n These new endpoints are used for saving cards on file with the Terminal API. For more information, see [Save a card on file with the Terminal API.](terminal-api\/advanced-features\/save-card-on-file)\n\n * New webhooks for Terminal actions:\n * [terminal.action.created](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/terminal.action.created)\n * [terminal.action.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/terminal.action.updated)\n * New test IDs for Terminal actions. For a list of these new test IDs, see [Terminal API (actions).](devtools\/sandbox\/testing#terminal-api-actions)\n\n### Documentation updates\n\n* **Custom attributes:**\n * [Custom Attributes Overview.](devtools\/customattributes\/overview) New topic about using custom attributes (beta).\n\n* **GraphQL:**\n * [GraphQL Overview.](devtools\/graphql) New topic about using GraphQL (alpha) with Square APIs.\n * [GraphQL Explorer.](devtools\/graphqlexplorer) New topic that describes how to use GraphQL Explorer (alpha) with Square APIs. ",
        "tags": [
            "Square",
            "Bookings API",
            "Checkout API",
            "Custom Attributes",
            "Customer Custom Attributes API",
            "Gift Cards API",
            "GraphQL",
            "Locations API",
            "Payments API",
            "Terminal API",
            "Documentation",
            "BETA"
        ]
    },
    {
        "id": "4DFqVIob76d3dCod5dbxR1",
        "slug": "changelog\/connect-logs\/2022-04-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-04-20T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### New API releases\n\n* **Payouts API:** (beta)\n * The Payouts API supports getting a list of deposits and withdrawals from a seller's bank accounts. This API replaces the legacy V1 Settlements API. For more information, see [Payouts API Overview](payouts-api\/overview).\n\n### API updates\n\n* **Catalog API:**\n * [BatchRetrieveCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-retrieve-catalog-objects) endpoint. Added the `include_deleted_objects` field to support returning deleted catalog objects. \n * [CatalogModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifier) object. Added the `image_ids` field to support multiple images for a catalog modifier.\n * [CatalogItemVariation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemVariation) object. Added the `sellable` field to indicate whether an item variation is sellable. \n\n* **Inventory API:**\n * [ItemVariationLocationOverrides](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/ItemVariationLocationOverrides) object. Added the `sold_out` and `sold_out_valid_until` fields to support monitoring the sold-out status of an item variation in the inventory.\n\n* **Orders API:**\n * [OrderLineItemModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemModifier) object. Added the `quantity` field to support specifying a quantity for a line item modifier in an order. For more information, see [Create Orders](orders-api\/create-orders).\n\n* **Terminal API:**\n * [DeviceCheckoutOptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/DeviceCheckoutOptions) object. Added the `collect_signature` field to display the signature screen during a Terminal checkout. The Square Terminal T2 software must be version 5.13 or later to enable this option. This option is available only for US and Canada sellers.\n\n### Documentation updates\n\n* **Square SDKs:**\n * **[Node.js SDK](sdks\/nodejs).** The SDK documentation is revised and now includes a quickstart and other details for developers to get started using the Square Node.js SDK.\n * **[Python SDK](sdks\/python).** The SDK documentation is revised and now includes a quickstart and other details for developers to get started using the Square Python SDK.\n\n* **Terminal API:**\n * The Terminal API documentation is updated with steps to enable signature collection when taking a payment. For more information, see [Take a payment with a signature.](terminal-api\/square-terminal-payments#take-a-payment-with-a-signature)",
        "tags": [
            "Square",
            "Catalog API",
            "Inventory API",
            "Orders API",
            "Payouts API",
            "Terminal API",
            "BETA"
        ]
    },
    {
        "id": "7jVdlPMz0dDTKnDR29f7Op",
        "slug": "changelog\/connect-logs\/2022-04-06",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-04-06T00:00",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n* [Move OAuth from the Sandbox to Production](oauth-api\/movetoprod). Added this topic about moving an application that uses OAuth from Sandbox to production.\n* [Move Webhook Event Notifications to Production](webhooks\/movetoprod). Added this topic about receiving webhook event notifications when you move our application from the Square Sandbox to production.\n\n* [Payments Pricing with Square APIs and SDKs](payments-pricing). Updated to correct the payment pricing for the Subscriptions API in France, Spain, and the United States.\n\n* **Subscriptions API:**\n * [Subscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Subscription) object. Updated the description to indicate that the `invoice_ids` returned for a subscription are ordered with the newest invoice listed first.\n * [Update subscriptions.](subscriptions-api\/overview#update-subscriptions) Revised this section and removed statements that `version` is required when calling the `UpdateSubscription` endpoint. \n * [ListSubscriptionEvents](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/list-subscription-events). Added event examples to the sample response. \n\n* [Frontend and Backend Development](build-basics\/frontend-backend-development). Revised the content to reflect the available Square SDKs and the context in which to use them. Accordingly, repurposed the [Square SDKs](sdks) topic to only explain the available server-side Square SDKs.\n* [In-App Payments SDK Quickstart](in-app-payments-sdk\/quick-start). Revised the Quickstart by consolidating topics into client and server sections for easier navigation and improved steps.",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "2nriIYWaBs1tYl8UXsIjyC",
        "slug": "changelog\/connect-logs\/2022-03-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-03-16T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### New API releases\n\n* **[Vendors API](vendors-api\/manage-vendors-in-apps): (beta)**\n * The initial release to support managing suppliers to a Square seller using the Square API.\n\n### API updates\n\n* **Customers API:**\n\n The following changes apply. For more information, see [Migration notes.](customers-api\/what-it-does#migration-notes)\n * [CreateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/create-customer) and [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoints. Requests with unrecognized fields are now rejected. \n * [CreateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/create-customer) and [UpdateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/update-customer) endpoints. Requests with an invalid phone number or email address now return specific error codes.\n\n* **Customer Groups API:**\n\n The following changes apply. For more information, see [Migration notes.](customer-groups-api\/what-it-does#migration-notes)\n * [CreateCustomerGroup](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api\/create-customer-group) endpoint. Requests that reuse an idempotency key from a previous request now return the response from the original request. \n * [CreateCustomerGroup](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api\/create-customer-group) and [UpdateCustomerGroup](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api\/update-customer-group) endpoints. Requests with unrecognized fields are now rejected. \n\n* **Subscriptions API:**\n * The [Subscriptions API](subscriptions\/overview) is now available in France and Spain. \n\n### Documentation updates\n\n* **Loyalty API:**\n * Reorganized the Loyalty section of the documentation. This change includes the addition of the following new topics:\n * [Retrieve a Loyalty Program](loyalty-api\/loyalty-programs)\n * [Create and Retrieve Loyalty Accounts](loyalty-api\/loyalty-accounts)\n * [Manage Loyalty Points](loyalty-api\/loyalty-points)\n * [Manage Loyalty Rewards](loyalty-api\/loyalty-rewards)\n * [Search for Balance-Changing Loyalty Events](loyalty-api\/loyalty-events)\n\n* **Subscriptions API:**\n * [Manage Subscriptions](subscriptions-api\/overview). Added a link to the [seller transaction fees for card payments](payments-pricing\/#card-payments) and a note explaining that subscription charges incur these fees.\n\n* **App Marketplace:**\n * [App Marketplace API Usage Requirements.](app-marketplace\/requirements) Updated this topic and API-specific topics to reflect current best practices for partner applications in the App Marketplace.",
        "tags": [
            "Square",
            "Customers API",
            "Customer Groups API",
            "Subscriptions API",
            "Vendors API",
            "BETA"
        ]
    },
    {
        "id": "6bw45ADpuLEopHLQiu0h22",
        "slug": "changelog\/connect-logs\/2022-03-02",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-03-02T00:00",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n\n* **Square SDKs:**\n * **[PHP SDK.](sdks\/php)** The SDK documentation is revised and now includes a quickstart and other details for developers to get started using the Square PHP SDK.\n * **[Ruby SDK.](sdks\/ruby)** The SDK documentation is revised and now includes a quickstart and other details for developers to get started using the Square Ruby SDK.\n\n* **Locations API:**\n * `business_name`. Clarified that a location's `business_name` is customer-facing and present on receipts.\n * [CreateLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/create-location), [UpdateLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/update-location), and [ListLocations](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/list-locations) endpoints. Unified the example responses for these endpoints. \n\n* **Merchants API:** \n * [main description.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchants-api) Updated in the Technical Reference to explain that a merchant is a grouping of seller locations into one organization.\n\n* **Orders API:** \n * [Manage Order Fulfillments.](orders-api\/fulfillments) Added a new topic to explain how to use the Orders API to manage fulfillments.\n\n* **Webhooks:** \n * [Webhook event notification authentication example.](webhooks\/step3validate) Added a code example for authenticating a webhook event notification using C#.\n\n* **General:**\nThe following documentation updates apply to all Square APIs. \n * [Pagination.](build-basics\/common-api-patterns\/pagination) Clarified that no cursor is allowed for the initial call to a paginated endpoint.\n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "79xGdMSYoOaWb0XbZOEW9w",
        "slug": "changelog\/connect-logs\/2022-02-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-02-16T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n* **Inventory API:**\n * [InventoryAdjustment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InventoryAdjustment), [InventoryPhysicalCount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InventoryPhysicalCount), and [InventoryTransfer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InventoryTransfer) objects. Added the `team_member_id` attribute to reference a seller's employee who is responsible for making the respective inventory changes.\n\n* **Orders API:** \n * [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) object. After an order with a fulfillment is created, a seller can optionally split the fulfillment using Square products, such as the Seller Dashboard, the Point of Sale application, and Square Online websites. Until now, applications using the Orders API could could view all the fulfillments but could not determine which line item belong to which fulfillment. The Orders API now supports viewing and managing these fulfillments. [OrderFulfillment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderFulfillment) objects returned in the `Order.fulfillments` field now contain new `entries` and `line_item_application` fields to enable applications to view which line items belong to which fulfillments. Applications can call [RetrieveOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/retrieve-order) to access an order and view fulfillments. Applications can also use [UpdateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/update-order) to update a specific order fulfillment.\n\n* **Subscriptions API:** \n * If a payload includes an invalid or unrecognized field name, it is rejected and returns an `INVALID_REQUEST_ERROR`.\n\n* **Payments API:**\n * [Afterpay Payments.](payments-api\/take-payments\/afterpay-payments) The Payments API now supports Afterpay as a payment source. Applications using the Web Payments SDK can [take Afterpay payment information](web-payments\/add-afterpay) from buyers and generate a payment token. Applications can then call `CreatePayment` to charge the payment token. Afterpay support is now available in the United States and Australia.\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) endpoint. Developers can now use this endpoint to record $0 payments of the CASH and EXTERNAL types. For example, suppose you create an order for $20 and apply a $20 discount. You then need to make a $0 payment to set the order state to COMPLETED. Prior to this release, developers used the Orders API (`PayOrder` endpoint) to take $0 payments. For more information, see [Orders integration.](payments-api\/additional-payment-considerations#orders-integration)\n\n* **Locations API:**\n * [OAuthPermission](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/OAuthPermission) enum. Added the `MERCHANT_PROFILE_WRITE` permission required by the `CreateLocation` endpoint.\n * [TaxIds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TaxIds) object. Added the NIF (Numero de Identificacion Fiscal) tax ID (beta) used for locations in Spain. \n\n* **Loyalty API:**\n * [LoyaltyAccount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccount) object. The `enrolled_at` field is now writable in a `CreateLoyaltyAccount` request. For more information, see [LoyaltyAccount object.](loyalty-api\/overview#loyaltyaccount-object)\n\n This field can be set using any Square API version that supports the `CreateLoyaltyAccount` endpoint. Starting on February 16, 2022, Square populates any undefined `enrolled_at` field with the timestamp of when the buyer first earned points or created a reward.\n\n### Documentation updates\n* [Merchants API Overview.](merchants-api) Clarified the use of endpoints and the relationship between `Merchant` and `Location` objects. \n* [Working with Addresses.](build-basics\/working-with-addresses) Added information about addresses in Spain.",
        "tags": [
            "Square",
            "Payments API",
            "Web Payments SDK",
            "Locations API",
            "Subscriptions API",
            "Orders API",
            "Loyalty API",
            "Inventory API",
            "Documentation",
            "BETA"
        ]
    },
    {
        "id": "2HNt88IOaZY3OWN0mkEU6t",
        "slug": "changelog\/connect-logs\/2022-02-02",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-02-02T00:00",
        "summary": "API and documentation updates",
        "details": "### Documentation updates\n\n* [Build Basics.](buildbasics) Reorganized and updated the content that existed in two separate locations in the table of contents (Build Basics and Working with APIs). The Build Basics section now provides the following topics:\n * [Versioning in Square APIs](build-basics\/versioning-overview)\n * [Access Tokens and Other Square Credentials](build-basics\/access-tokens)\n * [General Development Considerations](build-basics\/general-considerations)\n * [Common Data Types](build-basics\/common-data-types)\n * [Common Square API Patterns](build-basics\/common-api-patterns)\n * [Square API Lifecycle](build-basics\/api-lifecycle)",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "55LIxST1t350bikWRivPEq",
        "slug": "changelog\/connect-logs\/2022-01-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2022-01-20T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n* **Bookings API:**\n * Enabled seller-level permissions to support seller-level access and management of bookings to give sellers and their staff more control and flexibility to create and manage bookings. For more information, see [Seller-level and buyer-level permissions.](\/bookings-api\/what-it-is#seller-level-and-buyer-level-permissions) \n * [BookingCreatorDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/BookingCreatorDetails) object. Added to support seller-level access to booking creator details.\n * [AppointmentSegment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/AppointmentSegment) object. Added the following attributes:\n * `intermission_minutes`\n * `any_team_member`\n * `resource_ids`\n * [Booking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Booking) object. Added the following attributes:\n * `transition_time_minutes`\n * `all_day`\n * `location_type`\n * `creator_details`\n * `source`\n * [Booking.BookingSource](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/BookingBookingSource) enum. Added the enum.\n * [BookingCreatorDetails.CreatorType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/BookingCreatorDetailsCreatorType) enum. Added the enum.\n * [OAuthPermission](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/OAuthPermission) enum. Added the following fields:\n * `APPOINTMENTS_ALL_READ`\n * `APPOINTMENTS_ALL_WRITE`\n\n* **Catalog API:** \n * [CatalogDiscount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogDiscount) object. Added the following attribute:\n * `maximum_amount_money`\n\n* **Locations API:**\n * [Address](https:\/\/developer.squareup.com\/reference\/square\/objects\/Address) object. The following fields have been marked as internal to remove them from the public documentation:\n * `sublocality_2`\n * `sublocality_3`\n * `administrative_district_level_2`\n * `administrative_district_level_3`\n * `first_name`\n * `last_name`\n * `organization`\n\n* **Loyalty API:**\n * [LoyaltyProgramAccrualRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyProgramAccrualRule) object. Retired the following type-specific fields:\n * `catalog_object_id`\n * `excluded_category_ids`\n * `excluded_item_variation_ids`\n * `spend_amount_money`\n * `visit_minimum_amount_money`\n\n These fields are replaced by fields in the new `LoyaltyProgramAccrualRuleCategoryData`, `LoyaltyProgramAccrualRuleItemVariationData`, `LoyaltyProgramAccrualRuleSpendData`, and `LoyaltyProgramAccrualRuleVisitData` objects. For more information, see [Migration notes.](loyalty-api\/overview#migrate-LoyaltyProgramAccrualRule-subtypes)\n\n * `tax_mode` field. Added this field to the new `LoyaltyProgramAccrualRuleSpendData` and `LoyaltyProgramAccrualRuleVisitData` objects. This field specifies how tax is treated when calculating the purchase amount used for loyalty points accrual. Also added the corresponding `LoyaltyProgramAccrualRuleTaxMode` enum.\n\n* **Merchants API:**\n * [Merchant](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Merchant) object. Added the following attribute:\n * `created_at`. A timestamp field that specifies the time the merchant is created. \n\n### Documentation updates\n* [Locations API.](locations-api) Made major documentation changes to clarify details about the main location, added new sections about permissions and images, and moved information about the location language code to the [Language Preferences for Applications](\/build-basics\/language-preferences) topic. \n* [Working with Addresses.](build-basics\/working-with-addresses) Added a new topic, which describes the address format used by Square for various APIs.\n\n* **Terminal API:**\n * Updated the API descriptions in the technical reference to note how long `TerminalCheckout` and `TerminalRefunds` are available, which is 30 days.\n",
        "tags": [
            "Square",
            "Loyalty API",
            "Locations API",
            "Merchants API",
            "Catalog API",
            "Bookings API",
            "RETIRED"
        ]
    },
    {
        "id": "1wlHmYsdFSUHZi5nBpYdoV",
        "slug": "changelog\/connect-logs\/2021-12-15",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-12-15T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "### API updates\n\n* **Invoices API:**\n * The Invoices API now supports seller accounts in France. For more information, see [International availability and considerations.](invoices-api\/overview#international-availability-invoices)\n * France only: [`Invoice`](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object. Added a new `payment_conditions` field, which contains payment terms and conditions that are displayed on the invoice. This field is available only for sellers in France. For more information, see [Payment conditions field.](invoices-api\/overview#payment-conditions)\n\n Square version 2021-12-15 or later is required to set this field, but it is returned in `ListInvoices` and `RetrieveInvoice` requests for all Square versions.\n\n* **Cards API:**\n * Added the `CARD_DECLINED_VERIFICATION_REQUIRED` error code to the list of error codes returned by [CreateCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cards-api\/CreateCard). \n* **Catalog API:**\n * [CreateCatalogImage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/create-catalog-image) endpoint:\n * Updated the endpoint to support attaching multiple images to a [CatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogObject) instance. \n * Added the `is_primary` option to let the caller choose to attach an image as the primary image on the object for display with the Square Point of Sale application and other first-party Square products. For more information, see [Upload and Attach Images.](\/catalog-api\/upload-and-attach-images)\n * [CatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogObject) object:\n * Retired the `image_id` field (used to hold a single image object attached to an image-supporting object of the `ITEM`, `ITEM_VARIATION`, `CATEGORY`, or `MODIFIER_LIST` type) in Square API version 2021-12-15 and later, which supports the attachment of multiple images. The `image_id` field is still supported in Square API versions prior to 2021-12-15. For more information, see [Work with Images: Overview.](\/catalog-api\/cookbook\/create-catalog-image#overview)\n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem), [CatalogItemVariation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemVariation), [CatalogCategory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCategory), or [CatalogModifierList](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifierList) object:\n * Added the `image_ids` list to hold IDs of the attached image objects. The first element of the `image_ids` list refers to the primary image attached to the catalog object. For more information, see [Work with Images: Overview.](\/catalog-api\/cookbook\/create-catalog-image#overview)\n * [UpdateCatalogImage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/update-catalog-image) endpoint:\n * Added the endpoint to support replacing the image file encapsulated by an existing [CatalogImage](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogImage) object. For more information, see [Replace the image file of a CatalogImage object.](\/catalog-api\/manage-images#replace-the-image-file-of-a-catalogimage-object)\n\n * [CatalogPricingRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule) object:\n * Added the [minimum_order_subtotal_money](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule#definition__property-minimum_order_subtotal_money) field to require that the minimum order subtotal be reached before the pricing rule can be applied. \n\n### Documentation updates\n* [Developer Tools.](devtools\/overview) Added this top-level node. This node describes tools such as the Sandbox, API Logs, and Webhooks.\n",
        "tags": [
            "Square",
            "Invoices API",
            "Catalog API",
            "Cards API",
            "RETIRED"
        ]
    },
    {
        "id": "4lMsAKwV8iriBInPg0lIDU",
        "slug": "changelog\/connect-logs\/2021-11-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-11-17T00:00",
        "summary": "API and documentation updates",
        "details": "## API updates\n\n* **Cards API:** \n * [Card](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/card) object. Added the [Card.merchant_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Card#definition__property-merchant_id) field to identify the Square seller that stored the payment card on file. \n * [Cards API webhooks](\/webhooks\/v2webhook-events-tech-ref#cards-api). Added a [Card](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Card) object to the response bodies of all Cards API webhooks. The `Card` is added as a child of the `data.object` field in all webhook responses.\n\n* **Bookings API:** \n * [ListBookings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/list-bookings) endpoint. Added to support browsing a collection of bookings of a seller. For more information, see [Use the Bookings API: list bookings.](bookings-api\/use-the-api#list-bookings) \n\n* **Subscriptions API:** \n * [Actions.](subscriptions-api\/overview#subscriptions-actions-overview) Added a new actions framework representing scheduled, future changes to subscriptions. \n * [PauseSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/pause-subscription) endpoint. Added to support temporarily pausing a subscription. Calling this endpoint schedules a new `PAUSE` action.\n * [SwapPlan](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/swap-plan) endpoint. Added to support changing the subscription plan associated with a single customer. Calling this endpoint schedules a new `SWAP_PLAN` action.\n * [DeleteSubscriptionAction](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/delete-subscription-action) endpoint. Added to support deleting a scheduled action.\n * [ResumeSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/resume-subscription) endpoint. Updated to support resuming a paused subscription. Calling this endpoint schedules a new `RESUME` action. \n * [CancelSubscription](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/cancel-subscription) endpoint. Updated to schedule a new `CANCEL` action.\n * [SearchSubscriptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/search-subscriptions) endpoint. Added an optional `include` body parameter. Pass the value `actions` to the parameter to return all [actions](subscriptions-api\/overview#subscriptions-actions-overview) associated with the subscriptions.\n\n## Documentation Update\n\n* **Migration Guides.**\n * [Migrate from the Connect V1 Refunds API.](migrate-from-v1\/guides\/v1-refunds) The topic is updated to include information to migrate from the v1 ListRefunds endpoint to the appropriate Square API counterparts. \n * [Migrate from the Connect V1 Payments API.](migrate-from-v1\/guides\/v1-payments) The topic provides developers information to migrate from the Connect V1 Payments API to the appropriate Square API counterparts. \n\n Code that relies on these V1 API endpoints must be updated to avoid breaking when these APIs reach retirement.\n\n* **API Logs**\nAdded content for the new [API Logs](api-logs\/overview) feature which allows developers to view the summary, request, and response for Square API calls.",
        "tags": [
            "Square",
            "Cards API",
            "Bookings API",
            "Subscriptions API"
        ]
    },
    {
        "id": "1xGUcBQ7PhnWeTtbOgOSr0",
        "slug": "changelog\/connect-logs\/2021-10-20",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-10-20T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## API updates\n* **Transactions API.** Three previously deprecated endpoints (`ListRefunds`, `Charge`, and `CreateRefund`) in the [Transactions API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/transactions-api) are removed from Square API version 2021-10-20 and later. These endpoints will work if you are using Square API versions prior to 2021-10-20. However, these endpoints will eventually be retired from all Square versions. \n\n * Instead of the Transactions API `Charge` endpoint, use the Payments API [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) endpoint.\n * Instead of the Transactions API `CreateRefund` endpoint, use the Refunds API [RefundPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/refund-payment) endpoint.\n * Instead of the Transactions API `ListRefunds` endpoint, use the Refunds API [ListPaymentRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/list-payment-refunds) endpoint. \n\n* **Payments API:** \n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) object.\n * Added the [device_details](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-device_details) read-only field to view details of the device used to take a payment. This `Payment`-level field provides device information for all types of payments. Previously, device details were only available for card payments (`Payment.card_details.device_details`), which is now deprecated.\n * Added the [team_member_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-team_member_id) field that applications can use to view the ID of the [TeamMember](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TeamMember) associated with the payment. Use this field instead of the `Payment.employee_id` field, which is now deprecated. \n * Added the [application_details](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-application_details) read-only field to view details of the application that took the payment. \n\n * These `Payment` fields have moved to the [general availability](build-basics\/api-lifecycle) (GA) state:[tip_money](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-tip_money), [delay_duration](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-delay_duration), [delay_action](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-delay_action), [delayed_until](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-delayed_until), and [statement_description_identifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-statement_description_identifier).\n\n * The [ACH Bank Transfer Payments](payments-api\/take-payments\/ach-payments) feature has moved to the GA state. Accordingly, the [bank_account_details](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment#definition__property-bank_account_details) field (and its [BankAccountPaymentDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/BankAccountPaymentDetails) type) are moved to the GA state. \n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) endpoint. \n * Added the [team_member_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment#request__property-team_member_id) request field to record the ID of the team member associated with the payment.\n * The [accept_partial_authorization](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment#request__property-accept_partial_authorization) and [tip_money](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment#request__property-tip_money) request fields have moved to the GA state.\n * [CompletePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/complete-payment) endpoint. Added the [version_token](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/complete-payment#request__property-version_token) request field to support optimistic concurrency. For more information, see [Delayed capture of a card payment.](payments-api\/take-payments\/card-payments#delayed-capture-of-a-card-payment) \n\n* **Refunds API:**\n * [PaymentRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PaymentRefund) object.\n * Added the [team_member_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/PaymentRefund#definition__property-team_member_id) field that applications can use to view the ID of the `TeamMember` associated with the refund.\n\n * [RefundPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment) endpoint. \n * Added the [team_member_id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment#request__property-team_member_id) request field to record the ID of the team member associated with the refund. \n * Added the [payment_version_token](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/refund-payment##request__property-payment_version_token) request field to support optimistic concurrency. For more information, see [Refund Payment.](payments-api\/refund-payments#optimistic-concurrency)\n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object. Added a new `tax_ids` field of the [CustomerTaxIds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CustomerTaxIds) type, which can contain the EU VAT ID of the customer. This field is available only for customers of sellers in France, Ireland, or the United Kingdom. For more information, see [Customer tax IDs.](\/customers-api\/what-it-does#customer-tax-ids)\n\n * [UpdateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/update-customer) endpoint. The Customers API now returns a `400 BAD_REQUEST` error if the request body does not contain any fields. For earlier Square versions, the Customers API will continue to return a `200 OK` response along with the customer profile. For more information, see [Migration notes.](\/customers-api\/what-it-does#migration-notes)\n\n* **Invoices API:**\n * [InvoiceRecipient](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceRecipient) object. Added a new, read-only `tax_ids` field of the [InvoiceRecipientTaxIds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceRecipientTaxIds) type, which can contain the EU VAT ID of the invoice recipient. This field is available only for customers of sellers in Ireland or the United Kingdom. If defined, `tax_ids` is returned for all Square API versions. For more information, see [Invoice recipient tax IDs.](\/invoices-api\/overview#recipient-tax-ids)\n * In the Sandbox environment, Square now emails the invoice to the invoice recipient after the invoice is published.\n\n* **Catalog API:**\n * [CatalogSubscriptionPlan.name](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogSubscriptionPlan#definition__property-name) can be updated after the subscription plan is created. The change is retroactively applicable to prior versions of the Square API.\n\n* **Subscriptions API:**\n * The new [SubscriptionSource](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/SubscriptionSource) data type is introduced to encapsulate the source where a subscription is created. The new `SubscriptionSource.name` value is propagated to the `Order.source` attribute when an order is made on the subscription. The new feature is retroactively applicable to prior versions of the Square API.\n * The new [Subscription.source](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Subscription#definition__property-source) attribute is introduced to indicate the source where the subscription was created. This new feature is retroactively applicable to prior versions of the Square API. \n * The new [SearchSubscriptionsFilter.source_names](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/SearchSubscriptionsFilter#definition__property-source_names) query expression is introduced to enable searching for subscriptions by the subscription source name. This new feature is retroactively applicable to prior versions of the Square API.",
        "tags": [
            "Square",
            "Payments API",
            "Transactions API",
            "Customers API",
            "Invoices API",
            "Subscriptions API",
            "Catalog API",
            "Refunds API",
            "DEPRECATED"
        ]
    },
    {
        "id": "1gweuGXgPhbiuamGSGPxiY",
        "slug": "changelog\/connect-logs\/2021-09-15",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-09-15T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## API updates\n\n* **Invoices API:** \n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object. Added a new, optional `sale_or_service_date` field used to specify the date of the sale or the date that the service is rendered. If specified, this date is displayed on the invoice.\n\n* **Orders API:**\n * [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/create-order). The endpoint now supports creating temporary, draft orders. For more information, see [Create a draft order.](orders-api\/create-orders#create-a-draft-order)\n * [CloneOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/clone-order). The Orders API supports this new endpoint to clone an existing order. For more information, see [Clone an order.](orders-api\/create-orders#clone-an-order)\n * These fields have moved to the [general availability (GA)](build-basics\/api-lifecycle#general-availability) state: [OrderLineItem.item_type](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItem#definition__property-item_type), [OrderServiceCharge.type](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderServiceCharge#definition__property-type), and `catalog_version` field on every order type that contains this field.\n\n* **Team API:**\n * [SearchTeamMembersFilter](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/SearchTeamMembersFilter) object now has an `is_owner` field that when set, causes a team member search to return only the seller who owns a Square account.\n\n* **Terminal API:**\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object. The `customer_id` field is now GA. \n\n## Documentation updates\n* **OAuth API:**\n * Revised API descriptions for the ObtainToken and Authorize endpoints. Clarified that the Authorize endpoint is not a callable API but is used to direct the seller to the Square authorization page. For more information about the Authorize endpoint, see [Create the Redirect URL and Square Authorization Page URL.](oauth-api\/create-urls-for-square-authorization)",
        "tags": [
            "Square",
            "Invoices API",
            "Orders API",
            "Team API",
            "Terminal API"
        ]
    },
    {
        "id": "5QZCtjXX8BXBSBIsr7evqr",
        "slug": "changelog\/connect-logs\/2021-09-01",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-09-01T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## Documentation updates\n* Revised the OAuth API documentation to make it more concise and to clarify requirements. Updated topics include [OAuth Overview,](oauth-api\/overview) [OAuth Walkthrough: Authorization Using a Test Account,](oauth-api\/walkthrough) and [OAuth Best Practices.](oauth-api\/best-practices) New topics include [Create the Redirect URL and Square Authorization Page URL,](oauth-api\/create-urls-for-square-authorization)\n[Receive Seller Authorization and Manage Seller OAuth Tokens,](oauth-api\/receive-and-manage-tokens) and \n[Refresh, Revoke, and Limit the Scope of OAuth Tokens.](oauth-api\/refresh-revoke-limit-scope)\n\n* [Get Started.](square-get-started) Revised the Get Started topic to align with the developer onboarding experience in the Developer Dashboard.\n* [Update Payments.](payments-api\/update-payments) Added information to the [General considerations](payments-api\/update-payments#general-considerations) section for added clarity. ",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "5OCi2mYhuCFZKNCy1xOaV3",
        "slug": "changelog\/connect-logs\/2021-08-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-08-18T00:00",
        "summary": "API and documentation updates",
        "details": "## API updates \n\n* **Customers API:**\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object. The `version` field has moved to the [general availability](\/build-basics\/api-lifecycle#general-availability) (GA) state. This field represents the current version of the customer profile and enables optimistic concurrency control. For more information, see [Customer profile versions and optimistic concurrency support.](\/customers-api\/what-it-does#customer-profile-versions-and-optimistic-concurrency-support) \n * [ListCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/list-customers) endpoint. The new, optional `limit` query parameter can be used to specify the maximum number of results in a paginated response.\n\n* **Customer Groups API:**\n * [ListCustomerGroups](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api\/list-customer-groups) endpoint. The new, optional `limit` query parameter can be used to specify the maximum number of results in a paginated response.\n\n* **Customer Segments API:**\n * [ListCustomerSegments](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-segments-api\/list-customer-segments) endpoint. The new, optional `limit` query parameter can be used to specify the maximum number of results in a paginated response.\n\n* **Invoices API:**\n * Square Invoices Plus is a monthly subscription plan that allows access to premium invoice features. After Invoices Plus is launched in September 2021, a subscription will be required to create invoices with custom fields and installment payments. For more information, including how to handle new errors, see [Premium features available with Invoices Plus.](\/invoices-api\/overview#invoices-plus-subscription)\n\n* **Loyalty API:**\n * [LoyaltyAccount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccount) object. Added a new `expiring_point_deadlines` field that specifies when points in the account balance are scheduled to expire. This field contains a list of [LoyaltyAccountExpiringPointDeadline](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccountExpiringPointDeadline) objects. For more information, see [Expiring points.](\/loyalty-api\/overview#expiring-points)\n\n## Documentation updates\n\n* [App Marketplace.](app-marketplace) Added the following topics:\n * [How to apply.](app-marketplace#how-to-apply) Documented the process to list an application on the Square App Marketplace.\n * [App Marketplace API Usage Requirements.](app-marketplace\/requirements) Added a topic that describes a set of API usage requirements and recommendations for partner applications. \n\n* [Automatic communications from Square about invoices.](\/invoices-api\/overview#automatic-communication-from-square-to-customers) Documented the invoice-related communications sent from Square to customers and sellers. \n\n* [Snippets best practices.](\/snippets-api\/overview#best-practices) Documented best practices and additional requirements for snippets and applications that integrate with the Snippets API.",
        "tags": [
            "Square",
            "Customers API",
            "Invoices API",
            "Loyalty API"
        ]
    },
    {
        "id": "3I7YGPXPzBsPqJZGfDGSXp",
        "slug": "changelog\/connect-logs\/2021-08-04",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-08-04T00:00",
        "summary": "API and documentation updates",
        "details": "## Documentation updates\n\n* **Orders API.** Added the [Retrieve catalog attributes of an order line item](orders-api\/manage-orders\/retrieve-orders#retrieve-catalog-attributes-of-an-order-line-item) section to the [Retrieve Orders](orders-api\/manage-orders\/retrieve-orders) topic.\n\n* **Build Basics.** Added [Language Preferences for Applications to Communicate.](build-basics\/language-preferences) This topic describes how applications that integrate the Square API might accommodate individual language preferences in communications with sellers and buyers.\n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "6KFn73v1jE70Mh6Szsvj3n",
        "slug": "changelog\/connect-logs\/2021-07-21",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-07-21T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "\n## API updates\n* **Orders API:**\n * [OrderServiceCharge](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderServiceCharge) object. Added a new `type` field that identifies the service charge type.\n * [OrderQuantityUnit](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderQuantityUnit), [OrderLineItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItem), [OrderLineItemDiscount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemDiscount), [OrderLineItemModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemModifier), [OrderLineItemTax](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemTax), [OrderServiceCharge](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderServiceCharge), [OrderReturnLineItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnLineItem), [OrderReturnLineItemModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnLineItemModifier), [OrderReturnServiceCharge](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnServiceCharge), [OrderReturnTax](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnTax), and [OrderReturnDiscount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderReturnDiscount) objects. Added a new `catalog_version` field.\n\n* **Locations API:**\n * [Location](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Location) object. Added a new `tax_ids` field of the `TaxIds` type. In the current implementation, sellers in Ireland and France can configure tax IDs during the onboarding process. They can also provide the information later by updating the location information in the Seller Dashboard. These tax IDs appear in this field.\n\n* **Loyalty API:**\n * As of July 15, 2021, the country in which the seller\u2019s Square account is activated determines whether Square uses pretax or post-tax purchase amounts to calculate accrued points. This change supports consumption tax models, such as value-added tax (VAT). Previously, point accrual was based on pretax purchase amounts only. This change does not affect the existing point balance of loyalty accounts. For more information, see [Availability of Square Loyalty.](\/loyalty-api\/overview#loyalty-market-availability)\n\n* **Payments API:**\n * [UpdatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/update-payment). The endpoint has moved to the [general availability](\/build-basics\/api-lifecycle) (GA) state. Also, you can now update gift card payments (similar to card, cash, and external payments).\n\n* **Subscriptions API:**\n * The [Subscriptions API](\/subscriptions-api\/overview) has moved to the [general availability](\/build-basics\/api-lifecycle) (GA) state.\n * [CatalogSubscriptionPlan](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogSubscriptionPlan) object. The `name` and `price` are now write-once fields. You specify these values at the time of creating a plan. After the plan is created, these fields cannot be updated. This makes a subscription plan immutable.\n\n* **Inventory API:**\n * [RetrieveInventoryTransfer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/retrieve-inventory-transfer). This new endpoint is introduced to support the retrieval of inventory transfer.\n * [RetrieveInventoryChanges](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/retrieve-inventory-changes). This endpoint is deprecated. Its support ends when it is retired in about 12 months.\n * The following endpoints have updated URLs to conform to the standard REST API convention. For more information about migrating deprecated URLs to updated URLs in your application, see [Inventory API: Migrate to Updated API Entities:](\/inventory-api\/migrate-to-updated-api-entities)\n * [RetrieveInventoryAdjustment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/retrieve-inventory-adjustment)\n * [BatchChangeInventory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-change-inventory)\n * [BatchRetrieveInventoryChanges](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-changes)\n * [BatchRetrieveInventoryCounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-counts)\n * [RetrieveInventoryPhysicalCount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/retrieve-inventory-physical-count)\n\n## SDK updates\n* **Square Java SDK:**\n\nThe [Square Java SDK](\/sdks\/java) now lets you customize `HttpClient` by creating an `okhttpclient` instance and setting it in `HttpClientConfiguration` to override the default behavior.\n\n* **Square .NET SDK:**\n\nThe [Square .NET SDK](\/sdks\/dotnet) now lets you customize `HttpClient` by creating an `HttpClientInstance` object and setting it in `HttpClientConfiguration` to override the default behavior.\n\n* **Square Python SDK:**\n\nThe [Square Python SDK](\/sdks\/python) now requires Python 3.7 or later, if Python 3 is used. With Python 2, the minimum version remains at 2.7.\n\n## Documentation updates\n * **Webhooks.** Revised the steps and descriptions for creating and using webhooks. For more information, see [Webhooks Overview.](\/webhooks\/overview)",
        "tags": [
            "Square",
            "Loyalty API",
            "Inventory API",
            "Subscriptions API",
            "Payments API",
            "Locations API",
            "Orders API",
            "Documentation",
            "DEPRECATED"
        ]
    },
    {
        "id": "7pI19TRYXG2hQ7gQVfSX7O",
        "slug": "changelog\/connect-logs\/2021-07-08",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-07-08T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "\n## API updates\n\n\n* **Catalog API:**\n * [CatalogMeasurementUnit](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogMeasurementUnit) becomes GA.\n * [CustomAttributeFilter](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CustomAttributeFilter) becomes GA.\n * [Range](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Range) becomes GA.\n * [SearchCatalogItems](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-items) becomes GA.\n\n* **Common Types:**\n * [MeasurementUnit](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/MeasurementUnit) becomes GA.\n * [MeasurementUnitArea](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitArea) becomes GA.\n * [MeasurementUnitCustom](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/MeasurementUnitCustom) becomes GA.\n * [MeasurementUnitGeneric](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitGeneric) becomes GA.\n * [MeasurementUnitLength](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitLength) becomes GA.\n * [MeasurementUnitTime](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitTime) becomes GA.\n * [MeasurementUnitUnitType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitUnitType) becomes GA.\n * [MeasurementUnitVolume](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitVolume) becomes GA.\n * [MeasurementUnitWeight](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/MeasurementUnitWeight) becomes GA.\n * [SearchCatalogItemsRequestStockLevel](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/SearchCatalogItemsRequestStockLevel) becomes GA.\n\n\n* **Errors:**\n * [ErrorCategory.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ErrorCategory) New value, [MERCHANT_SUBSCRIPTION_ERROR](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ErrorCategory#value-MERCHANT_SUBSCRIPTION_ERROR).\n * [ErrorCode.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ErrorCode) New value, [MERCHANT_SUBSCRIPTION_NOT_FOUND](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/ErrorCode#value-MERCHANT_SUBSCRIPTION_NOT_FOUND).",
        "tags": [
            "Square",
            "Catalog API"
        ]
    },
    {
        "id": "4KnYSTuN1c5y6s9qe1OvhM",
        "slug": "changelog\/connect-logs\/2021-06-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-06-16T00:00",
        "summary": "API and documentation updates",
        "details": "## New API releases\n* **Gift Cards API and Gift Card Activities API.** Gift card support is integrated in the [Square Seller Dashboard](https:\/\/squareup.com\/dashboard\/) and the [Square Point of Sale](https:\/\/squareup.com\/us\/en\/point-of-sale) application. Sellers can sell, redeem, track, and reload Square gift cards. Now developers can use the [Gift Cards API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api) and the [Gift Card Activities API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-card-activities-api) to integrate Square gift cards into third-party applications. For more information, see [Gift Cards API Overview.](gift-cards\/using-gift-cards-api)\n\n* **Cards API.** The [Cards API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cards-api) replaces the deprecated `CreateCustomerCard` and `DeleteCustomerCard` endpoints and lets an application save a customer payment card on file along with other card management operations. For more information, see [Cards API Overview.](cards-api\/overview) \n\n## API updates\n* **Catalog API:**\n * [CatalogPricingRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule). Support of the [customer group discount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule#definition__property-customer_group_ids_any) becomes GA. For more information, see [CreateCustomerGroupDiscounts.](\/catalog-api\/configure-customer-group-discounts)\n * [CatalogItemVariation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemVariation). Offers Beta support of the [stockable](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemVariation#definition__property-stockable) and [stockable_conversion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItemVariation#definition__property-stockable_conversion) attributes to enable sales of a product in multiple measurement units. \n * [UpsertCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/upsert-catalog-object) and [BatchUpsertCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-upsert-catalog-objects). Support creating an item with stockable and non-stockable variations with a specified stock conversion between the two. For more information, see [Enable Stock Conversion.](\/inventory-api\/enable-stock-conversion)\n * [UpsertCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/upsert-catalog-object) and [BatchUpsertCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-upsert-catalog-objects). Require that an item be created with at least one variation. Otherwise, an `INVALID_REQUEST` error is returned. \n\n* **Customers API:**\n * Using the Customers API to manage cards on file is deprecated:\n * The [CreateCustomerCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/create-customer-card) endpoint is deprecated and replaced by the [CreateCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cards-api\/create-card) and [LinkCustomerToGiftCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/link-customer-to-gift-card) endpoints.\n * The [DeleteCustomerCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/delete-customer-card) endpoint is deprecated and replaced by the [DisableCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cards-api\/disable-card) and [UnlinkCustomerFromGiftCard](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/unlink-customer-from-gift-card) endpoints.\n * The `cards` field in the [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object is deprecated and replaced by the following endpoints:\n * [ListCards](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cards-api\/list-cards) to retrieve credit and debit cards on file.\n * [ListGiftCards](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/gift-cards-api\/list-gift-cards) to retrieve gift cards on file. \n\n For more information, see [Migrate to the Cards API and Gift Cards API.](customers-api\/use-the-api\/integrate-with-other-services#migrate-customer-cards)\n\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object. In the `cards` field, the IDs for gift cards now have a `gftc:` prefix followed by the card number. This is a service-level change that applies to all Square API versions.\n\n* **Disputes API:** \n * The Disputes API is now GA. \n * `RemoveDisputeEvidence`. Renamed to [DeleteDisputeEvidence](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api\/deletedisputeevidence).\n * [CreateDisputeEvidenceFile.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api\/CreateDisputeEvidenceFile) The URL is changed from `\/v2\/disputes\/{dispute_id}\/evidence_file` to `\/v2\/disputes\/{dispute_id}\/evidence-files`.\n * [CreateDisputeEvidenceText.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api\/CreateDisputeEvidenceText) The URL is changed from `\/v2\/disputes\/{dispute_id}\/evidence_text` to `\/v2\/disputes\/{dispute_id}\/evidence-text`.\n * [ListDisputeEvidence.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api\/ListDisputeEvidence) The endpoint now returns a pagination cursor and accepts a pagination cursor in requests.\n * `DISPUTES_READ` and `DISPUTES_WRITE` permissions are required for all Disputes API endpoints instead of `PAYMENTS_READ` and `PAYMENTS_WRITE`.\n * [DisputeEvidence.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/DisputeEvidence) The `evidence_id` field is deprecated and replaced by the `id` field.\n * The `dispute.state.changed` webhook is renamed to `dispute.state.updated`.\n * [Dispute](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Dispute) object. The following breaking changes are made: \n * The `dispute_id` field is deprecated and replaced by the `id` field.\n * The `reported_date` field is deprecated and replaced by the `reported_at` field.\n * The `evidence_ids` field is deprecated with no replacement.\n\n For more information about the GA release of the Disputes API, see [Disputes Overview.](disputes-api\/overview) \n\n* **Inventory API:**\n * [CatalogStockConversion](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogStockConversion) (Beta). Enables selling a product in multiple measurement units and lets Square sellers manage inventory counts of the product's stockable and a non-stockable variations in a self-consistent manner. For more information, see [Enable Stock Conversion.](inventory-api\/enable-stock-conversion)\n\n* **Invoices API:**\n * [CreateInvoice.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api\/create-invoice) The `location_id` field is now optional and defaults to the location ID of the associated order. If specified in the request, the value must match the location ID of the associated order. This is a service-level change that applies to all Square API versions.\n\n* **Loyalty API:**\n * [LoyaltyProgramAccrualRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyProgramAccrualRule) object. New `excluded_category_ids` and `excluded_item_variation_ids` fields that represent any categories and items that are excluded from accruing points in spend-based loyalty programs.\n\n* **Subscriptions API:**\n * [Subscription.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Subscription) The `paid_until_date` field is renamed to `charge_through_date`.\n * [UpdateSubscription.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/update-subscription) The `version` field is now optional because it can update only the latest version of a subscription.\n\n * [CreateSubscription.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/create-subscription) The `idempotency_key` field is now optional in the request. If you do not provide it, each `CreateSubscription` assumes a unique (never used before) value and creates a subscription for each call.\n\n## Documentation updates\n* [Order fee structure.](payments-pricing#orders-api-fee-structure) Documented the transaction fee related to using the Orders API with a non-Square payments provider.",
        "tags": [
            "Square",
            "Cards API",
            "Catalog API",
            "Customers API",
            "Disputes API",
            "Gift Card Activities API",
            "Gift Cards API",
            "Inventory API",
            "Invoices API",
            "Loyalty API",
            "Subscriptions API",
            "BETA",
            "DEPRECATED",
            "Documentation"
        ]
    },
    {
        "id": "U1CO7PNdIPgP7j2G2dpXY",
        "slug": "changelog\/connect-logs\/2021-05-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-05-18T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## New region support\nSquare APIs and SDKs are now available in Ireland. For Ireland-specific payment pricing, supported payment methods, and bank account information, see the following topics:\n\n* [Payments Pricing with Square APIs and SDKs](payments-pricing)\n* [Supported Payment Methods by Country](payment-card-support-by-country)\n* [Bank Accounts API](bank-accounts-api)\n\n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "55YiPGSpRqBx4c2otyfYrf",
        "slug": "changelog\/connect-logs\/2021-05-13",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-05-13T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## New API releases\n\n* **Sites API.** The\u00a0[Sites API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/sites-api) lets you retrieve basic details about the Square Online sites that belong to a Square seller. For more information, see [Sites API Overview.](sites-api\/overview)\n\n* **Snippets API.** The\u00a0[Snippets API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/snippets-api) lets you manage snippets that provide custom functionality on Square Online sites. A snippet is a script that is injected into all pages on a site, except for checkout pages. For more information, see [Snippets API Overview.](snippets-api\/overview)\n\n!!!info\nThe Sites API and Snippets API are publicly available to all developers as part of an early access program (EAP).\u00a0For more information, see [Early access program for Square Online APIs.](online-api#early-access-program-for-square-online-apis)\n!!!\n\n## API updates\n\n* **Payments API:**\n * [CreatePayment.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) The `CreatePayment` endpoint now supports ACH Bank Transfer payments. For more information, see [ACH Bank Transfer Payment.](payments-api\/take-payments\/ach-payments)\n\n* **Loyalty API:**\n * The\u00a0[Loyalty API](\/loyalty-api\/overview) has moved to the\u00a0[general availability](\/build-basics\/api-lifecycle#general-availability)\u00a0(GA) state.\n\n * The [ListLoyaltyPrograms](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/list-loyalty-programs) endpoint is deprecated. It is replaced by calling the [RetrieveLoyaltyProgram](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/retrieve-loyalty-program)\u00a0endpoint with the `main` keyword.\n\n * [LoyaltyAccount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccount)\u00a0object. The `mappings`\u00a0field is retired and replaced by the `mapping` field. \n\n * [LoyaltyAccountMapping](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccountMapping)\u00a0object. The\u00a0`type`\u00a0and\u00a0`value`\u00a0fields are retired and replaced by the `phone_number` field. \n\n For more information, see [Migration notes.](loyalty-api\/overview#migration-notes)\n\n* **V1 APIs deprecated.** V1 Payments and V1 Settlements APIs are now deprecated. For information about these APIs, see [Deprecated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/deprecated).\n\n## Documentation updates\n* **Getting Started.** Added a step that shows how to use the API Logs to examine a transaction. For more information, see [Step 4: View the transaction in the API Logs (beta).](get-started#step-4-view-the-transaction-in-the-api-logs-beta)\n* All Orders API content in the Technical Reference is now edited for grammar and consistency.",
        "tags": [
            "Square",
            "Sites API",
            "Snippets API",
            "Loyalty API",
            "Payments API",
            "Connect v1",
            "Documentation",
            "DEPRECATED",
            "RETIRED"
        ]
    },
    {
        "id": "3Ih5UCKnJpGHAzHrTHBLj5",
        "slug": "changelog\/connect-logs\/2021-04-21",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-04-21T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "## Existing API updates\n\n* **Subscriptions API:** \n * [ResumeSubscription.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/resume-subscription) This new endpoint enables applications to resume [deactivated subscriptions.](subscriptions-api\/overview#deactivated-subscriptions) After a subscription is created, there are events that can make a subscription non-billable, causing Square to deactivate the subscription. A seller can also resume deactivated subscriptions in the Seller Dashboard. Applications can call [ListSubscriptionEvents](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api\/list-subscription-events) to determine why Square deactivated a subscription.\n\n* **Customers API:**\n\n * [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object:\n * New `version` field (beta). This field represents the current version of the customer profile. You can include it in your `UpdateCustomer` and `DeleteCustomer` requests to enable optimistic concurrency. For more information, see [Customer profile versions and optimistic concurrency support.](customers-api\/what-it-does#customer-profile-versions-and-optimistic-concurrency-support) \n * The `groups` field and corresponding `CustomerGroupInfo` object are retired.\n\n * [Customer webhooks](\/customers-api\/use-the-api\/customer-webhooks) have moved to the [general availability](build-basics\/api-lifecycle#general-availability) (GA) state. Event notifications now include the `version` field (beta).\n\n* **Invoices API:**\n\n * The [Invoices API](\/invoices-api\/overview) has moved to the GA state.\n\n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object:\n * A new required `accepted_payment_methods` field that defines the methods of payment that customers can use to pay an invoice on the Square-hosted invoice page. Valid values are defined in the new [InvoiceAcceptedPaymentMethods](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceAcceptedPaymentMethods) enum. For more information, see the [migration notes.](invoices-api\/overview#migration-notes)\n * A new `subscription_id` field, which is included in invoices created for subscription billing.\n\n* **Loyalty API:** (beta)\n\n * [RetrieveLoyaltyProgram](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/retrieve-loyalty-program) endpoint. This new endpoint accepts a program ID or the `main` keyword and returns the loyalty program in a seller's account. For more information, see [Retrieve a loyalty program.](loyalty-api\/overview#retrieve-loyalty-program) This endpoint is preferred over the `ListLoyaltyPrograms` endpoint.\n\n * Introduced a new mapping implementation for loyalty accounts:\n * [LoyaltyAccount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccount) object. Added the `mapping` field (of type `LoyaltyAccountMapping`), which is used to associate the loyalty account with a buyer. This field is recommended over the `mappings` field.\n * [LoyaltyAccountMapping](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyAccountMapping) object. Added the `phone_number` field to represent a phone number mapping. This field is recommended over the `type` and `value` fields.\n\n * A new [loyalty.program.created](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/loyalty.program.created) webhook. Square now publishes an event notification when a loyalty program is created in the Square Seller Dashboard.\n\n* **Inventory API:** \n * [InventoryChange](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InventoryChange) can now have its own measurement unit.\n\n* **Catalog API:** \n * [CatalogItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogItem) introduces the `sort_name` attribute that can take Japanese writing scripts to sort items by. When it is unspecified, the regular `name` attribute is used for sorting.\n * [CatalogPricingRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule) has the new `customer_group_ids_any` attribute included to support automatic application of discounts to specified product set purchased by members of any of the customer groups identified by the `customer_group_ids_any` attribute values.\n* **Team API:**\n * New [Team webhooks](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api\/webhooks): `team_member.created`, `team_member.updated`, and `team_member.wage_setting.updated` to notify on created and updated team members and wage settings. \n\n## SDKs \n* **Connect Node.js SDK:** (retired)\n * The Connect Node.js SDK is retired and replaced by the [Square Node.js SDK.](https:\/\/github.com\/square\/square-nodejs-sdk) For migration information, see [Connect Node.js SDK README.](https:\/\/github.com\/square\/connect-nodejs-sdk\/blob\/master\/README.md)\n",
        "tags": [
            "Square",
            "Customers API",
            "Invoices API",
            "Loyalty API",
            "Inventory API",
            "Catalog API",
            "Subscriptions API",
            "Team API",
            "BETA",
            "RETIRED"
        ]
    },
    {
        "id": "6Ro0QNIEIZSRc41oeiwAX0",
        "slug": "changelog\/connect-logs\/2021-04-07",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-04-07T08:00:00Z",
        "summary": "API and documentation updates",
        "details": "\n## API updates\n* **Locations API:**\n * A seller [Location](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Location) now supports a new capability, AUTOMATIC_TRANSFERS. Square includes this property in the location `capabilities` field when a location is configured (using the Seller Dashboard) to automatically transfer a Square balance to an external bank account.\n\n\n## Documentation updates\n* **Orders API:**\n * [Calculate Order.](orders-api\/create-orders#calculate-order) Content is added to explain how to use the [CalculateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/calculate-order) endpoint.\n",
        "tags": [
            "Square",
            "Locations API"
        ]
    },
    {
        "id": "Mw00peSd1N0Znf9y1VSA8",
        "slug": "changelog\/connect-logs\/2021-03-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-03-17T01:00",
        "summary": "Square API versioned release 2021-03-17",
        "details": "\n## Existing API updates\n\n* **Payments API:**\n * [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment). Until now, the `CreatePayment` endpoint supported only taking card payments. In this release, the API now supports cash and external payments. For more information, see [Take Payments.](payments-api\/take-payments)\n * [UpdatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/update-payment). This new endpoint enables developers to change the payment amount and tip amount after a payment is created. For more information, see [Update Payments.](payments-api\/update-payments)\n \n* **Invoices API:**\n * [InvoiceDeliveryMethod](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceDeliveryMethod) enum. Added the read-only `SMS` value. \n * [InvoiceRequestMethod](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceRequestMethod)\u00a0enum (deprecated). Added the read-only `SMS`, `SMS_CHARGE_CARD_ON_FILE`, and `SMS_CHARGE_BANK_ON_FILE` values for backward compatibility. \n \n These values direct Square to send invoices and receipts to customers using SMS (text message). SMS settings can be configured from first-party Square applications only; they cannot be configured from the Invoices API. Square does not send invoice reminders when using SMS to communicate with customers.\n\n\n* **Terminal API:**\n * [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout). Previously, `TerminalCheckout` only supported tapped, dipped, or swiped credit cards. It now supports manual card entry and e-money. Added the `payment_type` field to denote a request for a manually entered payment card or an e-money payment.\n * [CheckoutOptionsPaymentType.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/CheckoutOptionsPaymentType) A new enum for the Terminal checkout payment types that can be requested.\n * [E-money support](\/terminal-api\/e-money-payments) is now available for Terminal checkout requests in Japan.\n\n\n## SDKs\n* **Square Java SDK:**\n * Updated the OkHttp dependency to version 4.9.0.\n * Fixed a `NullPointerException` when passing an empty order ID to the `UpdateOrder` method.\n\n## Documentation updates\n\n* **Multi-language code examples.** Previously, various topics showed only cURL examples for the REST API operations. These topics now show examples in multiple languages. You can use the language drop-down list to choose a language.\n \n* [When to Use Connect V1.](build-basics\/using-connect-v1) Content is revised to reflect the most current information about when to use the Connect V1 API.",
        "tags": [
            "Square",
            "Invoices API",
            "Terminal API",
            "Payments API",
            "Documentation"
        ]
    },
    {
        "id": "6KkiQdVWBzguqtKIDZH0Wa",
        "slug": "changelog\/connect-logs\/2021-02-26",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-02-26T10:00",
        "summary": "Square API version 2021-02-26",
        "details": "## Existing API updates\n\n* **Customers API:**\n\n * [New webhooks](customers-api\/use-the-api\/customer-webhooks) (beta). Square now sends notifications for the following events:\n * [customer.created](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/customer.created)\n * [customer.deleted](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/customer.deleted)\n * [customer.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/customer.updated)\n\n* **Orders API:** \n * [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/create-order). Removed the `location_id` field from the request. It was an unused field.\n\n* **Payments API:** \n * [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment). This type now returns the `card_payment_timeline` [(CardPaymentTimeline](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CardPaymentTimeline)) as part of the `card_details` field.\n\n* **v1 Items API:**\n * The following endpoints are [retired:](build-basics\/api-lifecycle)\n * `AdjustInventory`: Use the Square Inventory API [BatchChangeInventory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-change-inventory) endpoint. \n * `ListInventory`: Use the Square Inventory API [BatchRetrieveInventoryCounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-counts) endpoint. \n\n* **v1 Employees.Timecards:**\n * The following endpoints are retired:\n * `CreateTimecard`: Use the Square Labor API [CreateShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/labor-api\/create-shift) endpoint. \n * `DeleteTimecard`: Use the Square Labor API [DeleteShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/labor-api\/delete-shift) endpoint. \n * `ListTimecards`: Use the Square Labor API [SearchShifts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/labor-api\/search-shifts) endpoint. \n * `RetrieveTimecards`: Use the Square Labor API [GetShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/labor-api\/get-shift) endpoint. \n * `UpdateTimecard`: Use the Square Labor API [UpdateShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/labor-api\/update-shift) endpoint. \n * `ListTimecardEvents`: No direct replacement. To learn about replacing the v1 functionality, see the [migration guide.](migrate-from-v1\/guides\/v1-timecards#endpoints) \n\n* **v1 Employees.CashDrawers:**\n * The following endpoints are retired:\n * `ListCashDrawerShifts`: Use the Square CashDrawerShifts API [ListCashDrawerShifts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cash-drawers-api\/list-cash-drawer-shifts) endpoint. \n * `RetrieveCashDrawerShift`: Use the Square CashDrawerShifts API [RetrieveCashDrawerShift](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cash-drawers-api\/retrieve-cash-drawer-shift) endpoint. \n* **v1 Transactions.BankAccounts:**\n * The following endpoints are retired:\n * `ListBankAccounts`: Use the Square Bank Accounts API [ListBankAccounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bank-accounts-api\/list-bank-accounts) endpoint. \n * `RetrieveBankAccount`: Use the Square Bank Accounts API [GetBankAccount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bank-accounts-api\/get-bank-account) endpoint. \n\n## SDKs\n\n* **All Square SDKs:**\n\n By default, all SDKs send requests to Square's production (https:\/\/connect.squareup.com) or sandbox (https:\/\/connect.squareupsandbox.com) hosts based on the client's `environment` parameter.\n\n You now have the option to use a custom URL instead. To use a custom URL, follow the example for your language to set the `environment` parameter to `custom` and the `customUrl` parameter to your URL:\n\n - Java\n\n ```java\n new SquareClient.Builder()\n .environment(Environment.CUSTOM)\n .customUrl(\"https:\/\/example.com\")\n ```\n\n - .NET\n\n ```csharp\n new Square.SquareClient.Builder()\n .Environment(Environment.Custom)\n .CustomUrl(\"https:\/\/example.com\")\n ```\n\n - Node.js\n\n ```javascript\n new Client({\n environment: Environment.Custom,\n customUrl: 'https:\/\/example.com'\n });\n ```\n\n - PHP\n\n ```php\n new Square\\SquareClient([\n 'environment' => Environment::CUSTOM,\n 'customUrl' => 'https:\/\/example.com',\n ]);\n ```\n\n - Python\n\n ```python\n Client(\n environment = 'custom',\n custom_url = 'https:\/\/example.com',)\n ```\n\n - Ruby\n\n ```ruby\n Square::Client.new(\n environment: 'custom',\n custom_url: 'https:\/\/example.com'\n );\n ```\n\n* **Square .NET SDK:**\n\n Square has overridden the `Equals` and `GetHashCode` methods for models:\n\n * In the `Equals` override, Square has implemented a field-level comparison.\n * The Square `GetHashCode` override now ensures that hashes are deterministic and unique for each object.\n\n* **Square Node.js SDK:**\n\n Endpoints that return 64-bit integers now return a `BigInt` object instead of a `Number` object. \n\n* **Connect Node.js SDK:** (deprecated) \n\n The deprecated Connect Node.js SDK is in the security [maintenance state.](build-basics\/api-lifecycle#maintenance) It will not receive any bug fixes or API updates from the Square version 2021-02-26 release. However, the SDK will receive support and security patches until it is retired (end of life) in the second quarter of 2021. For more information, including steps for migrating to the [Square Node.js SDK,](https:\/\/github.com\/square\/square-nodejs-sdk) see the [Connect SDK README.](https:\/\/github.com\/square\/connect-nodejs-sdk\/blob\/master\/README.md)\n\n## Documentation updates\n* **Catalog API:**\n * [Update Catalog Objects.](catalog-api\/update-catalog-objects) Provides programming guidance to update catalog objects.\n\n* **Inventory API:**\n * [List or retrieve inventory.](migrate-from-v1\/guides\/v1-items#list-or-retrieve-inventory) Migrate the retired v1 endpoint of `ListInventory` to the v2 endpoint of `BatchRetrieveInventoryCounts`. Compare and contrast the programming patterns between the v1 endpoint of `ListInventory` and its v2 counterparts of [BatchRetrieveInventoryCounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-retrieve-inventory-counts) or [RetrieveInventoryCount](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/retrieve-inventory-count). \n * [Adjust or change inventory.](migrate-from-v1\/guides\/v1-items#adjust-or-change-inventory) Migrate the retired v1 endpoint of `AdjustInventory` to the v2 endpoint of `BatchChangeInventory`. Compare and contrast the programming patterns between the v1 endpoint of `AdjustInventory` and its v2 counterparts of [BatchChangeInventory](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api\/batch-change-inventory).\n\n* **Get Started topic.** Revised the [Get Started](get-started) experience. In addition to clarifications, it now includes the use of the Square Sandbox and API Explorer. These are the tools and environments developers use to explore Square APIs.",
        "tags": [
            "Square",
            "Customers API",
            "Orders API",
            "Payments API",
            "Connect v1",
            "Documentation",
            "BETA",
            "DEPRECATED",
            "RETIRED"
        ]
    },
    {
        "id": "2ard69RjkW3OXf8vks43H3",
        "slug": "changelog\/connect-logs\/2021-01-21",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2021-01-21T00:00",
        "summary": "Documentation Changes",
        "details": "## Existing API updates\n\n* **Invoices API:** (beta)\n\n The `InvoicePaymentRequest.request_method` field is deprecated, and its current options are separated into two new fields that better represent their scope: \n * `Invoice.delivery_method` specifies how Square should send invoices, reminders, and receipts to the customer. \n * `InvoicePaymentRequest.automatic_payment_source` specifies the payment method for an automatic payment.\n\n As part of this change, the [InvoiceDeliveryMethod](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceDeliveryMethod) and [InvoiceAutomaticPaymentSource](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceAutomaticPaymentSource) enums are added and the `InvoiceRequestMethod` enum is deprecated.\n\n The Invoices API will continue to accept `request_method`\u00a0in create and update requests until the field is retired, but starting in this version, `request_method` is not included in returned `Invoice` objects. For more information, see the [migration notes.](\/invoices-api\/overview#migrate-InvoicePaymentRequest.request_method)\n \n\n* **Locations API:**\n * The [Locations.MCC](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Location#definition__property-mcc) field is now updatable (beta). You can use the `UpdateLocation` endpoint to update the merchant category code (MCC) associated with a seller location. For more information, see [Initialize a merchant category code.](\/locations-api#initialize-a-merchant-category-code)\n\n\n\n\n## SDKs\n* **Connect Node.js SDK:** (deprecated) \n\n The deprecated Connect Node.js SDK is in the security [maintenance state.](build-basics\/api-lifecycle#maintenance) It will not receive any bug fixes or API updates from the Square version 2021-01-21 release. However, the SDK will receive support and security patches until it is retired (EOL) in Q2, 2021. For more information, including steps for migrating to the [Square Node.js SDK,](https:\/\/github.com\/square\/square-nodejs-sdk) see the [Connect SDK README.](https:\/\/github.com\/square\/connect-nodejs-sdk\/blob\/master\/README.md)\n \n## Documentation updates\n* **Catalog API:**\n * The [Use Item Options to Manage Item Variations](catalog-api\/item-options-migration) topic is added. It demonstrates how item variations are usually used and how item options can be used to enable random access to item variations.\n\n* **Inventory API:**\n * The [Inventory API](inventory-api\/what-it-does) content is updated. It provides clearer guidance about how to use the API, with a task-oriented TOC and improved code examples.\n",
        "tags": [
            "Square",
            "Invoices API",
            "Locations API",
            "Documentation",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "69iOMKewrz0RmX9edBqTEs",
        "slug": "changelog\/connect-logs\/2020-12-16",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-12-16T00:00",
        "summary": "Documentation Changes",
        "details": "## Existing API updates\n\n* **Orders API:** \n * [OrderLineItemPricingBlocklists.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemPricingBlocklists) You can explicitly specify taxes and discounts in an order or automatically apply preconfigured taxes and discounts to an order. In addition, you can now block applying these taxes and discounts to a specific [OrderLineItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItem) in an [order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order). You add the `pricing_blocklists` attribute to individual line items and specify the `blocked_discounts` and `blocked_taxes` that you do not want to apply. For more information, see [Apply Taxes and Discounts.](orders-api\/apply-taxes-and-discounts) For example walkthroughs, see [Automatically Apply Discounts](orders-api\/apply-taxes-and-discounts\/auto-apply-discounts) and [Automatically Apply Taxes.](orders-api\/apply-taxes-and-discounts\/auto-apply-taxes)\n * [OrderPricingOptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderPricingOptions). Previously, the `pricing_options` field in an [order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) supported only `auto_apply_discounts` to enable the automatic application of preconfigured discounts. Now it also supports `auto_apply_taxes` to enable the automatic application of preconfigured taxes. For more information, see [Automatically apply preconfigured catalog taxes or discounts.](orders-api\/apply-taxes-and-discounts#automatically-apply-preconfigured-catalog-taxes-or-discounts)\n\n * [OrderLineItemTax](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderLineItemTax). It now includes the new `auto_applied` field. It indicates whether the tax was automatically applied using a preconfigured [CatalogTax](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogTax). \n\n\n* **Bookings API:**\n * The [CancelBooking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/cancel-booking) endpoint supports canceling an accepted or pending booking. \n * The [booking.created](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/booking.created) webhook event notifies when a new booking is created by calling the [CreateBooking](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api\/cancel-booking) endpoint.\n * The [booking.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/booking.updated) webhook event notifies when an existing booking is updated.\n\n* **Catalog API:**\n * [ListCatalog](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/list-catalog), [RetrieveCatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/retrieve-catalog-object), and [BatchRetrieveCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-retrieve-catalog-objects) now support the `catalog_version` filter to return catalog objects of the specified version.\n \n* **Customers API:**\n * [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint. The `email_address`, `group_ids`, `phone_number`, and `reference_id` query filters are now generally available (GA).\n * The [AddGroupToCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/add-group-to-customer) endpoint is now GA.\n * The [RemoveGroupFromCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/remove-group-from-customer) endpoint is now GA.\n * The [Customer Groups](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api) API is now GA.\n * The [Customer Segments](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-segments-api) API is now GA.\n\n\n* **Invoices API:** (beta)\n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object. Added the `custom_fields` field, which contains up to two customer-facing, seller-defined fields to display on the invoice. For more information, see [Custom fields.](\/invoices-api\/overview#custom-fields) \n As part of this change, the following objects are added: \n * [InvoiceCustomField](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/InvoiceCustomField) object\n * [InvoiceCustomFieldPlacement](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceCustomFieldPlacement) enum\n * [InvoiceRequestMethod](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceRequestMethod) enum. Added the read-only CHARGE_BANK_ON_FILE value, which represents a bank transfer automatic payment method for a recurring invoice.\n\n\n* **Loyalty API:** (beta)\n * [LoyaltyProgramRewardTier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyProgramRewardTier) object. The `definition` field in this type is deprecated and replaced by the new `pricing_rule_reference` field. You can use `pricing_rule_reference` fields to retrieve catalog objects that define the discount details for the reward tier. For more information, see [Get discount details for a reward tier.](\/loyalty-api\/overview#get-discount-details-for-a-reward-tier) \n As part of this change, the following objects are deprecated: \n * [LoyaltyProgramRewardDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/LoyaltyProgramRewardDefinition) object\n * [LoyaltyProgramRewardDefinitionScope](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/LoyaltyProgramRewardDefinitionScope) enum \n * [LoyaltyProgramRewardDefinitionType](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/LoyaltyProgramRewardDefinitionType) enum\n\n## New SDK release\n* **Square Node.js SDK:** \n\n The new [Square Node.js SDK](https:\/\/github.com\/square\/square-nodejs-sdk) is now GA and replaces the deprecated Connect Node.js SDK. The Connect Node.js SDK entered the security maintenance phase on 2020-12-16. For migration information, see the [Connect SDK README.](https:\/\/github.com\/square\/connect-nodejs-sdk\/blob\/master\/README.md)\n \n \n## Documentation updates\n\n* [Get Right-Sized Permissions with Down-Scoped OAuth Tokens.](oauth-api\/cookbook\/downscoped-access) This new OAuth API topic shows how to get an additional reduced-scope OAuth token with a 24-hour expiration by using the refresh token from the Square account authorization OAuth flow.",
        "tags": [
            "Square",
            "Customers API",
            "Loyalty API",
            "Invoices API",
            "Orders API",
            "Catalog API",
            "Bookings API",
            "Documentation",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "3oy38hh2mFZbwDSChB73Qd",
        "slug": "changelog\/connect-logs\/2020-12-02",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-12-02T00:00",
        "summary": "Documentation Changes",
        "details": "## Documentation updates\n\n* [Payments Pricing with Square APIs and SDKs.](\/payments-pricing#pricing-for-handling-online-and-in-app-payments) Online payment pricing for UK sellers has changed.\n* [Localize In-App Payments.](\/in-app-payments\/localize-ios) Updated the topic to include information about testing localization in development using an Android emulator.\n* [Square Payment Form Walkthrough.](\/payment-form\/payment-form-walkthrough) Updated the topic to link to the [Order-Ahead Sample Application](orders-api\/quick-start) that shows a complete eCommerce example that uses the Square payment form.\n",
        "tags": [
            "Square",
            "In-App Payments SDK",
            "Square Payment Form"
        ]
    },
    {
        "id": "1rdghQ6UsQNBuvxqCmqQUM",
        "slug": "changelog\/connect-logs\/2020-11-18",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-11-18T00:00",
        "summary": "Documentation and API Changes",
        "details": "## New API releases\n\n* **Bookings API** (beta). The Bookings API lets you create applications to set up and manage bookings for appointments of fixed duration in which selected staff members of a Square seller provide specified services in supported locations for particular customers. \n * For an overview, see [Manage Bookings for Square Sellers.](bookings-api\/what-it-is)\n * For technical reference, see [Bookings API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bookings-api).\n\n## Existing API updates\n\n* **Payments API:** \n * [Payment.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) The object now includes the `risk_evaluation` field to identify the Square-assigned risk level associated with the payment. Sellers can use this information to provide the goods and services or refund the payment.\n\n## New SDK release\n* **New Square Node.js SDK (beta)** \n\n The new [Square Node.js SDK](https:\/\/github.com\/square\/square-nodejs-sdk) is available in beta and will eventually replace the deprecated Connect Node.js SDK. For migration information, see the [Connect SDK README.](https:\/\/github.com\/square\/connect-nodejs-sdk\/blob\/master\/README.md) The following topics are updated to use the new SDK:\n * [Walkthrough: Integrate Square Payments in a Website](payment-form\/payment-form-walkthrough)\n * [Verify the Buyer When Using a Payment Token for an Online Payment](payment-form\/cookbook\/verify-buyer-on-card-charge)\n * [Create a Gift Card Payment Endpoint](payment-form\/gift-cards\/part-2)\n\n## Documentation updates\n\n* The Testing topics are moved from the end of the table of contents to the top, in the Home section under [Testing your Application.](testing-your-app)\n* [Pay for Orders.](orders-api\/pay-for-orders) The topic is revised to add clarity for when to use the Payments API and Orders API to pay for an order. The [Orders integration](payments-api\/take-payments#orders-integration) section for the Payments API is simplified accordingly.",
        "tags": [
            "Square",
            "Bookings API",
            "Payments API",
            "Orders API",
            "Documentation",
            "BETA"
        ]
    },
    {
        "id": "2zjR9APeFDNkbrRXxuPLwN",
        "slug": "changelog\/connect-logs\/2020-10-28",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-10-28T00:00",
        "summary": "Documentation and API Changes",
        "details": "\n## Existing API updates\n\n* **Terminal API.** New endpoints to enable sellers in Canada refund Interac payments.\n * New endpoints:\n\n * [CreateTerminalRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/create-terminal-refund)\n * [GetTerminalRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/get-terminal-refund)\n * [CancelTerminalRefund](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/cancel-terminal-refund)\n * [SearchTerminalRefunds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api\/search-terminal-refunds)\n\n * New webhooks:\n * `terminal.refund.created`. Notification of a new Terminal refund request.\n * `terminal.refund.updated`. Notification that a Terminal refund request state is changed.\n\n * New topic [Refund Interac Payments.](\/terminal-api\/square-terminal-refunds). Describes how to refund Interac payments.\n\n* **Loyalty API (beta):** \n * [SearchLoyaltyAccounts.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/search-loyalty-accounts) The endpoint supports a new query parameter to search by customer ID.\n\n* **Locations API:** \n * [Location](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Location) object. Has a new read-only field,[full_format_logo_url](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Location#definition__property-full_format_logo_url), which provides URL of a full-format logo image for the location. \n * [Webhooks.](\/webhooks-api\/subscribe-to-events#locations) The Locations API now supports notifications for when a location is created and when a location is updated.\n\n* **Orders API:** \n * [RetrieveOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/retrieve-order), new endpoint.\n\n* **Invoices API (beta):**\n * [Invoice](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice) object. The [payment_requests](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Invoice#definition__property-payment_requests) field can now contain up to 13 payment requests, with a maximum of 12 `INSTALLMENT` request types. This is a service-level change that applies to all Square API versions. For more information, see [Payment requests.](\/invoices-api\/overview#payment-requests)",
        "tags": [
            "Square",
            "Locations API",
            "Terminal API",
            "Loyalty API",
            "Invoices API",
            "Orders API",
            "BETA"
        ]
    },
    {
        "id": "4VKsLJNyXyQB4jyXGjUBXq",
        "slug": "changelog\/connect-logs\/2020-10-14",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-10-14T00:00",
        "summary": "Documentation and API updates",
        "details": "## Existing API updates \n\n* **Terminal API.** The Terminal API is now Generally Available (GA).\n* **Point of Sale API.** E-money payment support, which is currently available in Japan for Square Point of Sale, is now available for the Point of Sale API. \n\n * [Take E-money Payments.](\/pos-api\/cookbook\/electronic-payments) Added new topic.\n * [Supported Payment Methods by Country.](\/payment-card-support-by-country) Added E-money sources.\n * [Payments Pricing with Square APIs and SDKs.](\/payments-pricing) Updated topic to include E-money pricing.\n \n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "12beSULgAXrI2bUY8tgfrf",
        "slug": "changelog\/connect-logs\/2020-09-23",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-09-23T00:00",
        "summary": "Documentation and API updates",
        "details": "## Existing API updates \n* Invoices API (beta)\n * [InvoiceStatus](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/enums\/InvoiceStatus) enum. Added the `PAYMENT_PENDING` value. Previously, the Invoices API returned a `PAID` or `PARTIALLY_PAID` status for invoices in a payment pending state. Now, the Invoices API returns a `PAYMENT_PENDING` status for all invoices in a payment pending state, including those previously returned as `PAID` or `PARTIALLY_PAID`.\n\n* Payments API \n * [ListPayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/list-payments). The endpoint now supports the `limit` parameter.\n \n* Refunds API\n * [ListPaymentRefunds](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/refunds-api\/list-payment-refunds). The endpoint now supports the `limit` parameter.\n\n* [DeviceDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/DeviceDetails#definition__property-device_installation_id). The object now includes the `device_installation_id` field.\n\n## Existing SDK updates\n* PHP SDK\n * File upload endpoints now handle requests with an unset `mime-type` field.\n\n## Documentation updates\n* [Payment status.](payments-api\/take-payments#payment-status) Added details about the `Payment.status` changes and how the status relates to the seller receiving the funds.\n* [Refund status.](payments-api\/refund-payments#refund-status) Added details about the `PaymentRefund.status` changes and how the status relates to the cardholder receiving the funds.\n* [CreateRefund errors.](payments-api\/error-codes#createrefund-errors) Added documentation for the `REFUND_DECLINED` error code.",
        "tags": [
            "Square",
            "Invoices API",
            "Payments API",
            "Refunds API",
            "Documentation",
            "BETA"
        ]
    },
    {
        "id": "4zKMbzAuog5r8fyg6fOdLY",
        "slug": "changelog\/connect-logs\/2020-09-09",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-09-09T00:00",
        "summary": "Documentation and API updates",
        "details": "## Documentation updates\nThis is a documentation-only release. There are no API changes.\n\n* [Test Square APIs with API Explorer](\/testing\/api-explorer)\u00a0added. This topic describes API Explorer features and how to use API Explorer to build and send requests to Square APIs.\n* [Create a Catalog Image.](\/catalog-api\/cookbook\/create-catalog-image) This topic is updated to clarify how to upload an image file to a catalog and attach an uploaded image to a new or existing item.\n* [Payment minimums.](payments-api\/take-payments#payment-minimums) Documented the minimum amount that `CreatePayment` accepts in each supported region.\n* [Square payment form.](payment-form\/overview) Scoped reorganization of the payment form table of contents to improve topic discoverability.\n\n",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "5SS41D84SpUQ3UvozsKi1a",
        "slug": "changelog\/connect-logs\/2020-08-26",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-08-26T00:00",
        "summary": "Documentation and API updates",
        "details": "## Existing API updates\n\n* Orders API\n * [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) object. The `total_tip_money` field is now GA.\n * [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/create-order), [UpdateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/update-order), and [BatchRetrieveOrders](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/batch-retrieve-orders). These APIs now support merchant-scoped endpoints (for example, the `CreateOrder` endpoint `POST \/v2\/orders`). The location-scoped variants of these endpoints (for example, the `CreateOrder` endpoint `POST \/v2\/locations\/{location_id}\/orders`) continue to work, but these endpoints are now deprecated. You should use the merchant-scoped endpoints (you provide the location information in the request body).\n* Labor API\n\t* [Migrate from Employees to Team Members.](labor-api\/migrate-to-teams) The Employees API is now deprecated in this release. Accordingly, update references to the `Shift.employee_id` field to the `Shift.team_member_id` field of the Labor API.\n\n* v2 Employees API (deprecated)\n\t* [Migrate from the Square Employees API.](team\/migrate-from-v2-employees) The v2 Employees API is now deprecated. This topic provides information to migrate to the Team API.\n* v1 Employees API (deprecated)\n\t* [Migrate from the v1 Employees API.](migrate-from-v1\/guides\/v1-employees) The v1 Employees API is now deprecated. This topic provides information to migrate to the Team API. \n\n* v1 Reporting API is retired.\n\n## Documentation updates\n\n* Point of Sale API\n\t* [Build on iOS.](pos-api\/build-on-ios) Corrected the Swift example code in step 7.\n* Team API\n\t* [Team API Overview.](team\/overview) Documented the limitation related to creating a team member in the Square Sandbox.\n",
        "tags": [
            "Square",
            "Labor API",
            "Orders API",
            "Employees API",
            "Documentation",
            "DEPRECATED",
            "RETIRED"
        ]
    },
    {
        "id": "86dS4pxpRvy19R2xnSGX8",
        "slug": "changelog\/connect-logs\/2020-08-12",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-08-12T00:00",
        "summary": "Documentation and API updates",
        "details": "## API releases\n\n* Subscriptions API (beta):\n * For an overview, see [Square Subscriptions.](subscriptions\/overview)\n * For technical reference, see [Subscriptions API.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/subscriptions-api)\n\n\n## Existing API updates\n\n* Catalog API\n\t* [CatalogSubscriptionPlan](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogSubscriptionPlan) (beta). This catalog type is added in support of the Subscriptions API. Subscription plans are stored as catalog object of the `SUBSCRIPTION_PLAN` type. For more information, see [Set Up and Manage a Subscription Plan.](subscriptions-api\/setup-plan)\n\n\n\n## Documentation updates\n\n* Locations API\n\t* [About the main location.](locations-api#about-the-main-location) Added clarifying information about the main location concept.\n* OAuth API\n\t* [Migrate to the Square API OAuth Flow.](\/oauth-api\/migrate-to-square-oauth-flow) Added a new topic to document migration from a v1 location-scoped OAuth access token to the Square seller-scoped OAuth access token.\n* Payment Form SDK\n * Renamed the Add a Masterpass Button topic to [Add a Secure Remote Commerce Button.](\/payment-form\/add-digital-wallets\/masterpass) Updated the instructions to add a Secure Remote Commerce button to replace a legacy Masterpass button.\n * [Payment form technical reference.](\/api\/paymentform) Updated the reference to show code examples for adding a Secure Remote Commerce button.\n \n\n\n",
        "tags": [
            "Square",
            "Subscriptions API",
            "Catalog API",
            "Documentation",
            "BETA"
        ]
    },
    {
        "id": "732jfF862kbPUKu3Jsu73a",
        "slug": "changelog\/connect-logs\/2020-07-22",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-07-22T00:00",
        "summary": "Documentation and API updates",
        "details": "## API releases\n\n* Invoices API (beta):\n * For an overview, see [Manage Invoices Using the Invoices API](invoices-api\/overview).\n * For technical reference, see [Invoices API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/invoices-api).\n\n## Existing API updates\n\n* **Deprecation: The Reporting API will be retired on 2020-08-26.** Please [migrate to the Payments API](\/payments-api\/migrate-from-transactions-api#example-5-multiparty-payment) immediately if you need multi-party payment reporting.\n\n\n* Catalog API\n\t* [SearchCatalogItems](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-items). You can now call the new search endpoint to [search for catalog items or item variations](\/catalog-api\/search-catalog-items), with simplified programming experiences, using one or more of the supported query filters, including the custom attribute value filter.\n* Locations API\n * [Locations API Overview](locations-api). Introduced the \"main\" location concept. \n * [RetrieveLocation](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/locations-api\/retrieve-location). You can now specify \"main\" as the location ID to retrieve the main location information.\n\n* Merchants API\n * [RetrieveMerchant](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchants-api\/retrieve-merchant) and [ListMerchants](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchants-api\/retrieve-merchant). These endpoints now return a new field, `main_location_id`.\n\n* Orders API \n * [PricingOptions](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order#definition__property-pricing_options). You can now enable the `auto_apply_discounts` of the options to have rule-based discounts automatically applied to an [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) object that is preconfigured with a [pricing rule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule). \n\n* [Inventory API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/inventory-api)\n\t* Replaced the 500 error for \"max string length exceeded\" with a max length error message. A max length attribute is added to string type fields.\n\n* Terminal API (beta)\n\t* [TerminalCheckout](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/TerminalCheckout) object. The `TerminalCheckoutCancelReason` field is renamed to `ActionCancelReason`.\n\n## Documentation updates\n\n* Catalog API\n\t* [Search a Catalog](\/catalog-api\/search-catalog). Added new topics to provide actionable guides to using the existing [SearchCatalogObjects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-objects) endpoint, in addition to the [SearchCatalogItems](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/search-catalog-items) endpoint.\n\n* Orders API\n\t* [Create Orders](\/orders-api\/create-orders). Updated existing content with the new pricing option for the automatic application of rule-based discounts. \n\n\n",
        "tags": [
            "Square",
            "Catalog API",
            "Inventory API",
            "Locations API",
            "Merchants API",
            "Orders API",
            "Terminal API",
            "Invoices API",
            "Documentation",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "6ALiiG7IWdpm3CgzamTYEd",
        "slug": "changelog\/connect-logs\/2020-07-08",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-07-08T00:00",
        "summary": "Documentation additions and updates. No API changes",
        "details": "## Documentation Updates\nThis is a documentation-only release. There are no API changes.\n\n* [Localize In-App Payments for iOS](\/in-app-payments\/localize-ios) added. This topic provides a procedure for updating an Xcode project to localize an In-App Payments SDK application for the regions supported by Square.\n* Digital wallets (Apple Pay and Google Pay) are now supported in Canada. For more information, see [Payment Card Support by Country.](\/payment-card-support-by-country#digital-wallets)\n* [Point of Sale API - Build on iOS.](\/pos-api\/build-on-ios#step-7-add-code-to-receive-data-from-the-square-point-of-sale-application) The Swift code example is corrected to the `try` asynchronous method call.\n* [Payment form - PaymentRequestObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/paymentform#paymentform-paymentrequestobjects). Clarified the descriptions of the `CountryCode` and `CurrencyCode` fields.",
        "tags": [
            "Documentation"
        ]
    },
    {
        "id": "2CJaFQTayKtSl5Ww56zMg8",
        "slug": "changelog\/connect-logs\/2020-06-25",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-06-25T00:00",
        "summary": "Documentation and API updates",
        "details": "## New API release\n\n* **Team API generally available (GA)** \n * For an overview, see [Team API Overview](\/team\/overview).\n * For technical reference, see [Team API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/team-api).\n\n## Existing API updates\n\n* **Catalog API**\n * [Pricing](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule) is now GA. It allows an application to configure catalog item pricing rules for the specified discounts to apply automatically. \n \n\n* **Payments API**\n * The [CardPaymentDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CardPaymentDetails) type now supports a new field, [refund_requires_card_presence](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CardPaymentDetails#definition__property-refund_requires_card_presence). When set to true, the payment card must be physically present to refund a payment. \n\n\n## Documentation updates\n\n* Added a new [Statement Descriptions](payments-api\/take-payments#statement-descriptions) section. In a `CreatePayment` request, you can optionally specify `statement_description_identifier`. This section explains what Square does with this identifier in constructing statement descriptions that it sends to banks. The section also explains related caveats.\n* Retired the Legacy Sandbox. The Legacy Sandbox documentation is no longer available. To learn about the new Square Sandbox, see [Test in the Sandbox](\/testing\/sandbox).\n* [Sandbox Test Values](\/testing\/test-values). Added Square Gift Card test values.\n* Updated the content for [custom_attribute_values](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogObject#definition__property-custom_attribute_values) of [CatalogObject](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogObject).",
        "tags": [
            "Square",
            "Catalog API",
            "Payments API",
            "Team API"
        ]
    },
    {
        "id": "7LBlWwAS1J6sWFf8Kkye8U",
        "slug": "changelog\/connect-logs\/2020-06-10",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-06-10T00:00",
        "summary": "Documentation and API updates",
        "details": "## Documentation updates\n\n* **Catalog API:** \n * [Configure Automatic Discounts](\/catalog-api\/cookbook\/auto-apply-discounts) and subtopics. Replaced deprecated Connect PHP SDK code examples with new cURL examples and improved instructions. \n * [Design a Catalog.](\/catalog-api\/design-a-catalog#pricing-rules) Added a [Pricing Rules](\/catalog-api\/design-a-catalog#pricing-rules) discussion to highlight the [CatalogPricingRule](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule) object.\n* **Customers API.** [Use the Customers API](\/customers-api\/use-the-api\/get-started) and subtopics. Replaced deprecated Connect PHP SDK code examples with new cURL examples and improved instructions.\n* **Labor API.** [What It Does](\/labor-api\/what-it-does) and subtopics. Removed deprecated Connect PHP SDK code examples. \n* **Payments API and Refunds API.** MaxLength attribute for string type fields is documented in the technical reference. ",
        "tags": [
            "Catalog API",
            "Customers API",
            "Labor API",
            "Payments API",
            "Refunds API",
            "Square"
        ]
    },
    {
        "id": "LAcWSArl4YMWNAyvrxejt",
        "slug": "changelog\/connect-logs\/2020-05-28",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-05-28T00:00",
        "summary": "Documentation and API updates",
        "details": "## API releases\n\n* Loyalty API (beta):\n * For an overview, see [Loyalty Program Overview.](loyalty\/overview)\n * For technical reference, see [Loyalty API.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api)\n\n## Existing API updates\n\n* **Orders API**\n * [CalculateOrder (beta)](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/calculate-order) endpoint. Use the endpoint to calculate adjustments (for example, taxes and discounts) to an order for preview purposes. In response, the endpoint returns the order showing the calculated totals. You can use this endpoint with an existing order or an order that has not been created. \n\n The endpoint does not update an existing order. It only returns a calculated view of the order that you provided in the request. To create or update an order, use the [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/create-order) and [UpdateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/orders-api\/update-order) endpoints, respectively.\n\n * [Order](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Order) type. Two fields are added in support of the Loyalty API integration. For more information, see [Deferred reward creation.](\/loyalty-api\/overview#deferred-reward-creation) For an example, see [Redeem Points.](\/loyalty-api\/walkthrough1\/redeem-points)\n * `Order.rewards` represents rewards added to an order by calling the [CreateLoyaltyReward](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/loyalty-api\/create-loyalty-reward) endpoint. \n * `Order.discount.reward_ids` indicates that a discount is the result of the specified rewards that were added to an order using the `CreateLoyaltyReward` endpoint.\n\n* **Customers API**\n\t* The [Search Customers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint supports search by email address, phone number, and reference ID with the following additional query filters:\n\t\t* The [email_address query filter](customers-api\/cookbook\/search-customers#search-by-email-address) (beta) supports an [exact](customers-api\/cookbook\/search-customers#exact-search-by-email-address) or [fuzzy](customers-api\/cookbook\/search-customers#fuzzy-search-by-email-address) search for customer profiles by their email addresses.\n\t\t* The [phone_number query filter](customers-api\/cookbook\/search-customers#search-by-phone-number) (beta) supports an [exact](customers-api\/cookbook\/search-customers#exact-search-by-phone-number) or [fuzzy](customers-api\/cookbook\/search-customers#fuzzy-search-by-phone-number) search for customer profiles by their phone numbers.\n\t\t* The [reference_id query filter](customers-api\/cookbook\/search-customers#search-by-reference-id) (beta) supports an [exact](customers-api\/cookbook\/search-customers#exact-search-by-reference-id) or [fuzzy](customers-api\/cookbook\/search-customers#fuzzy-search-by-reference-id) search for customer profiles by their reference IDs.\n\t* The [created_at](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-created_at), [updated_at](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-updated_at), and [id](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-id) attributes on the [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/customer) resource are updated to be optional. As a result, they no longer are required input parameters when you call the Square SDKs to create a `Customer` object. You might need to update the dependent SDKs to the latest version to mediate breaking your existing code.\n\n## Square Webhooks\n\n* [Square Webhooks](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks) (formerly v2 Webhooks). The status is changed from beta to general availability (GA).\n* [v1 Webhooks.](webhooks-api\/v1-tech-ref) The v1 Inventory and Timecards webhooks are now deprecated and replaced by [inventory.count.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/inventory.count.updated) and [labor.shift.updated](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/webhooks\/labor.shift.updated).\n\n## Documentation updates\n* [OAuth Permissions Reference.](\/oauth-api\/square-permissions) Documented a missing permission: `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS`.\n* [API Lifecycle.](\/build-basics\/api-lifecycle) Added a deprecation schedule for the deprecated Orders API fields.\n* [Create catalog image.](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/create-catalog-image) Improved the example by showing the response body.",
        "tags": [
            "Square",
            "Customers API",
            "Orders API",
            "Loyalty API",
            "Documentation",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "wYYZVilsnWL4oIrRzqENx",
        "slug": "changelog\/connect-logs\/2020-05-13",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-05-13T00:00",
        "summary": "Documentation and API updates",
        "details": "## API Updates\n\n\n* Incrementally adding `MaxLength` attributes to string type fields. Some of these updates are included in this release.\n* Added a description to each value for the `Country` and `Currency` ENUMs.\n\n## Documentation Updates\n\n* [Take Payments and Collect Fees](payments-api\/take-payments-and-collect-fees). Added information about limits on collecting app fee and tax reporting. \n\n* [Retrieve a Customer Profile.](\/customers-api\/what-it-does#retrieving-a-customer-profile-by-id) Added guidance to clarify the updated behavior of the [retrieve customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/retrieve-customer) endpoint with a premerged `customer_id` value to return the merged customer profile of a new `customer_id` value. \n\n* [Use the Customers API](\/customers-api\/build-with-customers). Corrected the code example.\n \n* [Webhooks API - Validate Notifications](\/webhooks-api\/validate-notifications). Added a warning about potential timing attacks and guidance to prevent such attacks. Added clarity to the guidance about webhook signatures.\n\t \n* [Add the Masterpass Button](\/payment-form\/add-digital-wallets\/masterpass). Improved the Masterpass example code to match current JavaScript patterns and added a warning that Masterpass is disabled for payment forms.\n \n* [SqPaymentForm.Configuration Fields.](\/api\/paymentform#datatype-inputTargetobject) Corrected the `SqPaymentForm` technical reference to show the `inputTarget` object has an `inputStyle` field.\n \n* [Add the Apple Pay on the Web Button](\/payment-form\/add-digital-wallets\/apple-pay):\n * Added CSS code to apply a visual style to the Apple Pay button as suggested in Apple Pay documentation.\n * A shipping address is no longer required by Apple Pay. Accordingly, we updated the example code to remove the related error message.\n* [Walkthrough: Integrate Square Payments in a Website](\/payment-form\/payment-form-walkthrough). Addressed a bug in the JavaScript example code.\n* [Square SDK and Mobile Samples](\/sample-apps). In the Mobile samples section, we added links to the POS API (Android and iOS) GitHub examples. \n\n",
        "tags": [
            "Square"
        ]
    },
    {
        "id": "71zWGvUBN4YygcSDyDz0h7",
        "slug": "changelog\/connect-logs\/2020-04-22",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-04-22",
        "summary": "Square API updated to add new endpoints for Square Terminal and customer functionality",
        "details": "## API releases\n* **Terminal API.** The new Terminal API lets a custom third-party POS app integrate with the Square Terminal to send terminal checkout requests to collect payments.\n * For an overview, see [Overview](terminal-api\/overview).\n * For technical reference, see [Terminal API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/terminal-api).\n\n* **Devices API.** The new Devices API lets a custom third-party POS app generate a code used to sign in to a Square Terminal to create a pairing that lets the POS app send terminal checkout requests. For technical reference, see [Devices API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/devices-api).\n\n* **Customer Groups API (beta).** The new Customer Groups API (Beta) enables full CRUD management of customer groups, including the ability to list, retrieve, create, update, and delete customer groups. Previously, this functionality was only available through the Square dashboard and point-of-sale product interfaces. \n * For an overview, see [Overview](customer-groups-api\/what-it-does) \n * For technical reference, see [Customer Groups](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-groups-api). \n\n* **Customer Segments API (beta).** The new Customer Segments API (Beta) lets you list and retrieve customer segment (also called smart groups) information. Coupled with the new `segment_ids` field on the customer resource, this API lets you better understand and track the customer segments to which a customer belongs.\n * For an overview, see [Overview](customer-segments-api\/what-it-does) \n * For technical reference, see [Customer Segments]( https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customer-segments-api). \n\n* **New webhooks.** v2 Webhooks (beta) now supports webhooks for the following APIs:\n * Orders API. `order.created`, `order.updated`, and `order.fulfillment.updated`\n * Terminal API. `terminal.checkout.created` and `terminal.checkout.updated`\n * Devices API. `device.code.paired`\n\n For more information, see [Subscribe to Events](webhooks-api\/subscribe-to-events).\n\n## Existing API updates\n* **Customers API**\n\t* [AddGroupToCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/add-group-to-customer) endpoint. Added to add customer memberships to a customer group. \n\t* [RemoveGroupFromCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/remove-group-from-customer) endpoint. Added to remove customer memberships from a customer group.\n\t* [Customer](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer) object. Updated as follows:\n\t\t* [`group_ids`](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-group_ids) field. Added to designate groups the customer is in.\n\t\t* [`segment_ids`](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-segment_ids) field. Added to designate segments the customer is in. \n\t\t* [`groups`](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Customer#definition__property-groups) field. Deprecated to be replaced by `group_ids` and `segment_ids`. It remains supported for one year from this release.\n\t* [CustomerQuery](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CustomerQuery) object's `filter` parameter. Updated as follows: \n\t\t* `group_ids` filter. Added to search for customers based on whether they belong to any, all, or none of the specified groups.\n\n* **Orders API**\n * [OrderFulfillmentPickupDetails](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/OrderFulfillmentPickupDetails) type updated to support curbside pickup:\n * `is_curbside_pickup`. This Boolean field indicates curbside pickup.\n * `CurbsidePickupDetails`. This type provides supporting information for curbside pickup, including a buyer description (for example, \"buyer is in a red car\") and a timestamp when the buyer arrived for the pickup.\n\n* **OAuth API**\n * [RevokeToken](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api\/revoke-token) endpoint. Added a new field called [revoke_only_access_token](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/oauth-api\/revoke-token#request__property-revoke_only_access_token). This field allows a client to revoke an access token but leave the parent authorization active.\n\n* **Catalog API**\n * [CatalogQuickAmountsSettings](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogQuickAmountsSettings) type. Added to support predefined custom payment amounts in the Square Register checkout dialog box.\n * ENUM`CatalogItemProductType`. The ENUM value `GIFT_CARD` is now deprecated.\n\n* **Payments API.** See [Take Payments and Collect Fees](payments-api\/take-payments-and-collect-fees) for updated information about permission requirements, Square reporting of the application fee collected by an app, and how to collect fees internationally. \n\n## Payment Form\n\n* **UK Digital Wallet support (beta).** The Apple Pay and Google Pay digital wallets are now supported by the `SqPaymentForm` JavaScript library for payments in the United Kingdom for GBP transactions. \n",
        "tags": [
            "Square",
            "Catalog API",
            "Customer Groups API",
            "Customer Segments API",
            "Customers API",
            "Devices API",
            "OAuth API",
            "Orders API",
            "Payments API",
            "Terminal API",
            "Webhooks",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "7vnDlu4EHU1ZNsI3RaEZPD",
        "slug": "changelog\/connect-logs\/2020-03-25",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-03-25",
        "summary": "Square API updated to to improve error reporting and delayed capture on payments.",
        "details": "## Existing API updates\n* **Square API platform**. The Square API Technical Reference now lists all possible error codes for each API endpoint.\n* **[Payments API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api).** In support of the existing [Delayed capture](payments-api\/take-payments) for payments, the following fields are added to the [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Payment) type:\n * `delay_duration`. In a [CreatePayment](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/payments-api\/create-payment) request, you can set `autocomplete` to false to get payment approval but not charge the payment source. You can now add this field to specify a time period to complete (or cancel) the payment. For more information, see [Delay capture](payments-api\/take-payments).\n * `delay_action`. Defines the action that Square takes on the payment when the `delay_duration` elapses. In this release, the API supports only the cancel payment action.\n * `delayed_until`. Provides the date and time on Square servers when Square applies `delay_action` on the payment.\n \n* **[Merchants API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchants-api)**. Fixed an error in the [ListMerchants](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/merchants-api\/list-merchants) example response.\n\n* **[Catalog API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api)**. Added [CatalogCustomAttributeDefinition](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCustomAttributeDefinition) (Beta) and [CatalogCustomAttributeValue](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogCustomAttributeValue) (Beta) to store additional information about a `ITEM` or `ITEM_VARIATION` object.\n\n",
        "tags": [
            "Square",
            "Payments API",
            "Merchants API",
            "BETA"
        ]
    },
    {
        "id": "1ggIFKlvlPlM52m0KzTcRR",
        "slug": "changelog\/connect-logs\/2020-02-26",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-02-26",
        "summary": "Square API updated with new Disputes and Bank Accounts endpoints. Connect v1 updated with several Connect v1 endpoints deprecated.",
        "details": "## API releases\n* **Disputes API (Beta)**\n * For an overview, see [Overview](disputes-api\/overview)\n * For technical reference, see [Disputes API](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/disputes-api). \n\n* **Bank Accounts API (GA)** \n * For an overview, see [Overview](bank-accounts-api)\n * For technical reference, see [Bank Account](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bank-accounts-api) \n* **Cash Drawer Shifts API (GA)**\n * For an overview, see [Use the Cash Drawer Shifts API](cashdrawershift-api\/reporting)\n * For a technical reference, see [Cash Drawers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cash-drawers-api) \n* **New webhooks** &mdash; Webhooks now supports webhooks for the Payments API, Disputes API, and Bank Accounts API. For more information, see [Subscribe to Events](webhooks-api\/subscribe-to-events). \n\n## Existing API updates\n* **Catalog API** \n * [Batch upsert catalog objects](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/catalog-api\/batch-upsert-catalog-objects) endpoint &mdash; The `batches` field is now required and the array must have at least one element. \n * [CatalogModifier](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifier) &mdash; Two fields added:\n * `ordinal` to support custom ordering in a modifier list \n * `modifier_list_id` to reference the parent modifier list\n * [CatalogModifierList](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogModifierList) &mdash; New field added: `ordinal` to support custom ordering in a list of **CatalogModifierList** objects.\n\n* **Customers API changes**\n * [SearchCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/customers-api\/search-customers) endpoint &mdash; `limit` size reduced from 1000 to 100 to improve the endpoint performance. \n\n* **Orders API changes**\n * [CreateOrderRequest](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/createorderrequest) &mdash; Previously these request fields were deprecated: `line_items`, `taxes`, `discounts`. These fields are no longer available. Instead you now use the `Order` object in the request. For example, `Order.line_items`, `Order.taxes`, and `Order.discounts`.\n * [OrderLineItem](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/orderlineitem) type &mdash; There are two changes:\n * The `taxes` field that was previously deprecated is no longer available. Instead, you now use the `OrderLineItem.applied_taxes` field. This also now requires that you set the `OrderLineItemTax.scope` field. \n * The `discounts` field that was previously deprecated is no longer available. Instead, you now use the `OrderLineItem.applied_discounts` field. This also now requires that you set the `OrderLineItemDiscount.scope` field. \n\n* **Shared object updates**\n * **[Card](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/Card) object** &mdash; New fields added: `card_type`, `prepaid_type`. Currently, only the Payments API responses populate these fields. \n\n## V1 Deprecations\nThe following V1 APIs are now deprecated:\n* **Cash Drawers API**\n * For migrating to Square API, see [Migrate from Connect v1 CashDrawerShifts API\n](migrate-from-v1\/guides\/v1-cashdrawershifts)\n * For technical reference, see [Cash Drawers](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/cash-drawers-api) \n\n* **Bank Accounts API**\n * For migrating to Square API, see [Migrate from Connect v1 BankAccounts API](migrate-from-v1\/guides\/v1-bankaccounts)\n * For technical reference, see [Bank Accounts](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/bank-accounts-api)\n\n* **Time Cards API**\n * For migrating to Square API, see [Migrate from Connect v1 Timecards API\n](migrate-from-v1\/guides\/v1-timecards)\n * For technical reference, see [Time Cards](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/Labor-api) \n",
        "tags": [
            "Square",
            "Bank Accounts API",
            "Cash Drawer Shifts API",
            "Catalog API",
            "Checkout API",
            "Customers API",
            "Disputes API",
            "Orders API",
            "Webhooks",
            "BETA",
            "DEPRECATED",
            "Connect v1"
        ]
    },
    {
        "id": "2Ds5BEKGYutEieUlPRNnPK",
        "slug": "changelog\/connect-logs\/2020-02-12",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-02-12",
        "summary": "Square API technical reference documentation update.",
        "details": "**Documentation Changes**\n\n* Minor updates for Payments API descriptions\n* Deprecation & retirement dates added for Transactions API endpoints",
        "tags": [
            "Connect v2",
            "Transactions API",
            "Payments API"
        ]
    },
    {
        "id": "3WddMujdtpzhXM4lhWNCSh",
        "slug": "changelog\/connect-logs\/2020-01-22",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2020-01-22",
        "summary": "Connect v2 API support for is_owner field in Employee, the new SQUARE_CAPITAL_CARD payment card type.",
        "details": "* New field: The **Employee** object now has an `is_owner` field.\n\n* New field: The **Card** enumeration has a new `SQUARE_CAPITAL_CARD` enum value to support a Square one-time Installments payment.\n\n* New request body field constraint: The __Refund__ Payment request now requires a payment_id.",
        "tags": [
            "Connect v2",
            "Employees API",
            "Refunds API"
        ]
    },
    {
        "id": "3dc6f49plcidrJwGESuLmh",
        "slug": "changelog\/connect-logs\/2019-12-17",
        "linkBack": "changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-12-17",
        "summary": "v2 Payment API, new fields. Beta release of v2 CashDrawerShift API.",
        "details": "* __GA release:__ `receipt_url` and `receipt_number` fields are added to the [Payment](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#type-payment) type. \n* __Beta release:__ [CashDrawerShiftAPI](cashdrawershift-api\/reporting). Adds cash drawer activity reporting capability for businesses that use a Square POS device paired with a cash drawer. ",
        "tags": [
            "Connect v2",
            "Cash Drawer Shifts API",
            "BETA"
        ]
    },
    {
        "id": "aIpN6g9V9TdOv4pAILIt1",
        "slug": "changelog\/connect-logs\/2019-12-11",
        "linkBack": "\/changelog\/connect",
        "changelogType": "Connect SDK",
        "changelogDate": "2019-12-11",
        "summary": "Added `DeviceDetail` type to Payments API",
        "details": "**GA Release:** `DeviceDetail` type added. The `GetPayment` and `ListPayments` endpoints include these details on card-present payments taken via Square hardware and mobile applications.",
        "tags": [
            "Payments API"
        ]
    },
    {
        "id": "5qYSB6WQHrezD4uLObQEyq",
        "slug": "changelog\/connect-logs\/2019-11-20",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-11-20",
        "summary": "v1Items, v1Locations, v1Batching APIs deprecated and scheduled for retirement.",
        "details": "!!!important\nSquare has begun the retirement process for Connect v1 APIs. See the [Connect v1 Retirement](\/migrate-from-v1) information page for details.\n!!!\n\n* __GA releases:__ modify_tax_basis field to Discounts, v2 Sandbox\n* __BETA releases:__ Shifts API webhooks for Labor shift created, updated, deleted, CreateLocation endpoint, and the ability to customize statement description in Payments API.\n* **Deprecated functionality**: v1Items API is fully deprecated in favor of the Catalog and Inventory APIs. See the [v1Items Migration](\/migrate-from-v1\/guides\/v1-items) guide for more information.\n* **Deprecated functionality**: v1Locations API is fully deprecated in favor of the Locations API. See the [v1Locations Migration](\/migrate-from-v1\/guides\/v1-locations) guide for more information.\n* **Deprecated functionality**: v1Batching API is fully deprecated. See the [v1Batching migration information](\/migrate-from-v1\/general-guidance#v1-batching) for more information.\n\n",
        "tags": [
            "Connect v1",
            "DEPRECATED",
            "Labor API",
            "Locations API"
        ]
    },
    {
        "id": "1LdwLWYlzLlDCjUsOuowdT",
        "slug": "changelog\/connect-logs\/2019-11-13",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-11-13",
        "summary": "Payment Form library updated to improve unsupported payment method error reporting",
        "details": " ",
        "tags": [
            "Square Payment Form"
        ]
    },
    {
        "id": "74FzvqTNpWqfwk62SILj43",
        "slug": "changelog\/connect-logs\/2019-10-23",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-10-23",
        "summary": "Released new Merchants API endpoint and support for exclusion strategies with Catalog API pricing rules.",
        "details": "**BETA RELEASE**: The Catalog API now supports the `ExcludeStrategy` option for [`PricingRule`](https:\/\/developer.{{SQUARE_DOMAIN}}\/reference\/square\/objects\/CatalogPricingRule). You can now set a pricing rule to exclude the most expensive or least expensive items from a discount. \n\n**GA RELEASE**: The Merchants API now supports ListMerchants endpoint. For more information, see [Merchants API Overview](\/merchants-api).",
        "tags": [
            "Connect v2",
            "Catalog API",
            "Merchants API"
        ]
    },
    {
        "id": "249fnHMnVKzwHyWTkav5QG",
        "slug": "changelog\/connect-logs\/2019-09-25",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-09-25",
        "summary": "New Merchants API, two new endpoints for Locations API, and additional fields in the Payments API related types.",
        "details": "* **GA release**: New Merchant API. Supports RetrieveMerchant endpoint. We recommend you use this V2 endpoint to retrieve merchant information that v1\/me endpoint provides.\n\n* **GA release**: The `Card` type includes a new field (`bin`). Also, the Payments API now populates the `cardholder_name` field of the `Card` type.\n\n* **GA release**: The `CardPaymentDetails` type now supports new fields (`verification_results`, `statement_description`, and `verification_method`). Also, the Payments API now populates the `application_identifier`, `application_name`, and `application_cryptogram` fields of the `CardPaymentDetails` type.\n\n* **GA release**: The `Payment` type now includes a new field, (`employee_id`). It is the employee to whom the payment is attributed to in the point of sale.\n\n* **GA release**: The Catalog API now has a CatalogVersionUpdated webhook, which sends a notification whenever a merchant's catalog is updated.\n\n* **Beta release**: New endpoints (RetrieveLocation, UpdateLocation) added to the Locations API.\n\n* **Beta release**: New field (`mcc`) added to the Location type. This field is added to bring parity with the `business_type` field returned by the v1\/me endpoint.\n* **Beta release:** Metadata support added for the Orders API.\n \n",
        "tags": [
            "Locations API",
            "Payments API",
            "Catalog API"
        ]
    },
    {
        "id": "HXYvSQwK8tS7EBxXfyHZL",
        "slug": "changelog\/connect-logs\/2019-08-15",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-08-15",
        "summary": "Transactions API deprecation, GA release of Payments and Refunds API, BETA & GA updates to Orders API, new Locations API endpoint, Sandbox v2 available as a BETA release, Square Gift Card support in Square payment form, and changes to the `Money` entity.",
        "details": "* **Deprecation**: Transactions API and Reporting API\n * The Transactions API is fully deprecated in favor of the new Payments API and Refunds API functionality.\n * The Reporting API is fully deprecated in favor of the new Orders API functionality.\n* **GA release**: Payments API\n * New endpoints: CreatePayment, GetPayment, ListPayments, CompletePayment, CancelPaymentByIdempotencyKey, and CancelPayment\n * New datatypes: Payment, ProcessingFee, CardPaymentDetails, BalancePaymentDetails\n* **GA release**: Refunds API\n * New endpoints: RefundPayment, GetPaymentRefund, and ListPaymentRefunds.\n * New datatypes: PaymentRefund\n* **GA release**: Orders API\n * Pickup Fulfillments moves from BETA to GA.\n * SearchOrders endpoint moves from BETA to GA.\n * ServiceCharges moves from BETA to GA.\n * Increased functionality: Order objects can be paid with payments made with the Payments API.\n* **BETA release**: Orders API\n * New endpoint: Orders.UpdateOrder &mdash; use the UpdateOrder endpoint to update existing orders.\n * New functionality: Use the PayOrder endpoint to pay orders with multiple payments or pay zero total orders.\n * New functionality: Create Shipment type fulfillments. \n* **BETA release**: Square Sandbox v2 &mdash; all v2 Square APIs except Labor API and Employees API are supported in the sandbox beta.\n* **BETA release**: Square Gift Card support in Payments API, Orders API.\n* **Changed functionality**: Monetary amounts in v2 Square APIs can now be negative. Previously, amounts could only be positive. Existing `Money` fields will stay positive-only and new fields that can hold negative values will explicitly document the meaning of a negative or positive amount in the documentation.\n\n\n\n!!!important\n**Known Orders API Beta Feature Issues** \n\n* If the `customer_id` or `tender` field for an order is updated through the Seller dashboard, the order will not be updated and will continue to show the original customer information. \n* The `customer_id` on a tender in an order may not match the customer shown in the Dashboard.\n* Tenders returned with Orders may not have the most up-to-date `processing_fee_money` information. The most up-to-date data can be found by searching for the related tender ID through the Payments API.\n!!!\n",
        "tags": [
            "Connect v2",
            "Locations API",
            "Orders API",
            "Payments API",
            "Refunds API",
            "Transactions API",
            "BETA",
            "DEPRECATED"
        ]
    },
    {
        "id": "3Ch9qYjGdNbaLUsfTfWHRP",
        "slug": "changelog\/connect-logs\/2019-07-24",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-07-24",
        "summary": "**BETA LAUNCH** Item options for catalog items",
        "details": "* **BETA releases**:\n * Catalog API: supports item options with datatypes and enums for item options and item option values. \n",
        "tags": [
            "Connect v2",
            "Catalog API",
            "BETA"
        ]
    },
    {
        "id": "4MFW3Pg1GuPLvEtuwG7SHx",
        "slug": "changelog\/connect-logs\/2019-06-12",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-06-12",
        "summary": "v2 Webhooks released, BETA releases for Orders and Catalog APIs, source info in orders, Strong Customer Authentication in Square Payment Form, and expanded business information in ListLocations.",
        "details": "* **New product**: v2 Webhooks\n * Configure and subscribe to webhooks directly from the Application Dashboard.\n * Support is currently limited to the Inventory API, which supports notifications whenever the quantity of an inventory item is changed.\n* **BETA releases**:\n * Orders API: supports service charges with a new field and datatype.\n * Catalog API: supports measurement units for item variation quantities with a new field and datatype.\n* **New functionality**: `Order` entities &mdash; now include a `source` field that contains details on where the order originated.\n* **Improved functionality**: ListLocations &mdash; Expanded business information available through the Locations API, including business hours, contact email, social media handles, and longitude\/latitude for physical locations.\n* **New field** in Transactions API Charge request body\nAdded the `verification_token` field to the body of the Charge request for sending the string token returned by the **SqPaymentForm.verifyBuyer** function in support of Strong Customer Authentication.",
        "tags": [
            "Connect v2",
            "Catalog API",
            "Inventory API",
            "Locations API",
            "Orders API",
            "Transactions API",
            "Webhooks",
            "BETA"
        ]
    },
    {
        "id": "IsKKkK42DAISB4ow3BJ0L",
        "slug": "changelog\/connect-logs\/2019-05-08",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-05-08",
        "summary": "New location information in the Locations API and beta releases for Inventory and Order APIs.",
        "details": "* **BETA release**: Orders API\n * **New endpoint**: SearchOrders &mdash; search orders created through the Orders API **or** Square Point of Sale using relevant criteria such as date, source, or state.\n * **Improved functionality**: Order.LineItem.quantity &mdash; supports fractional quantities in Orders.\n * **New functionality**: Return information &mdash; Orders now encapsulate information about returns with the `Order.returns` field and `OrderReturn` datatype.\n * **New functionality**: Payment (tender) and refund information &mdash; Orders now encapsulate payment details with the `Order.tenders` field and refund details with the `Order.refunds` field.\n * **Improved functionality**: Read historical transactions as Orders &mdash; itemization and transaction data are now fully contained in all `Order` objects (new **and** existing). With this change, `Order` objects functionally replace Connect v2 `Transaction` objects as all sales, itemized returns and exchanges are available for retrieval as orders, regardless of whether they were created through the Point of Sale or the Connect APIs.\n * **New functionality**: Additional details about Orders &mdash; Orders now include information about the order state (e.g., open, completed), auditing timestamps (e.g., creation, update, closure), and summary information related to payment.\n * **Renamed property**: The `Order.status` property is renamed to `Order.state`\n* **BETA release**: Inventory API\n * **Improved functionality**: Fractional quantities in inventory counts &mdash; The Inventory API now supports fractional quantities for computed (`Inventory.InventoryCount.quantity`) and physical counts (`Inventory.InventoryPhysicalCount.quantity`).\n* **New functionality**: Business hours information &mdash; `Location` objects now include details about the business hours for the location under `Location.business_hours`.\n\n!!!important\nExisting Orders integrations must be updated to handle decimal quantities as of `Square-Version` 2019-05-08. Applications pinned to previous versions will return `1` as the quantity and the item name will include the true fractional quantity info.\n!!!",
        "tags": [
            "Connect v2",
            "Inventory API",
            "Locations API",
            "Orders API",
            "BETA"
        ]
    },
    {
        "id": "5mzlNkXNjgurq7csnk3P0Q",
        "slug": "changelog\/connect-logs\/2019-04-24",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-04-24",
        "summary": "Capture contact information for employees and brand information for Connect v1 credit card objects.",
        "details": "* **New functionality**: Employees API (Connect v2) &mdash; New fields to capture contact info for employee profiles.\n* **Improved functionality**: `V1Tender.CardBrand` &mdash; New Connect v1 enum to represent brand information for credit cards.",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Employees API"
        ]
    },
    {
        "id": "0RaOPuHXpPn4ehr7Kzbj3",
        "slug": "changelog\/connect-logs\/2019-04-10",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-04-10",
        "summary": "New source information for Orders objects and better linking between v2 Catalog objects and v1 data types.",
        "details": "* **Improved functionality**: Connect v2 Catalog IDs in Connect v1 objects &mdash; The following Connect v1 data types now include a `v2_id` field that makes it easier to link information from Connect v1 endpoints to related Connect v2 Catalog objects:\n * V1Discount\n * V1Fee\n * V1Item\n * V1ModifierList\n * V1ModifierOption\n * V1Variation\n* **New functionality**: Orders source beta &mdash; The Connect v2 Orders object now includes a [OrderSource](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#type-ordersource) field (`source`) that encapsulates the origination details of an order.\n",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Catalog API",
            "Orders API"
        ]
    },
    {
        "id": "2Y3JrFYkjFJyM7EITXclRE",
        "slug": "changelog\/connect-logs\/2019-03-27",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-03-27",
        "summary": "New catalog image endpoint for Catalog API and deprecation of the `image_url` field in `CatalogItem`.",
        "details": "* **New endpoint**: Catalog.CreateCatalogImage &mdash; The Connect v2 Catalog API now includes a [CreateCatalogImage](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#endpoint-catalog-createcatalogimage) endpoint that developers can use to upload images for use in their product catalog.\n* **Retired**: `CatalogItem.image_url` &mdash; The `image_url` field in `CatalogItem` is retired in favor of a richer `CatalogImage` data type. Image information is now set, and returned, at the `CatalogObject` level.\n\n!!!important\nDue to image-handling limitations, the CreateCatalogImage endpoint is not supported in the SDKs and is only accessible through REST calls.\n!!!\n",
        "tags": [
            "Connect v2",
            "Catalog API",
            "RETIRED"
        ]
    },
    {
        "id": "2szoxau57J2zwiSIuJDWPe",
        "slug": "changelog\/connect-logs\/2019-03-13",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-03-13",
        "summary": "Release of Connect v2 Labor API and a barebones v2 Employees API.",
        "details": "* **New API**: Labor API &mdash; The new [Labor API](\/labor-api\/how-it-works) now includes functionality that gives a Square account the ability to track and retrieve employee labor hours including multiple hourly wage rates per employee, work shift break tracking, and standardized break templates. See the [Connect v2 Technical Reference](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#navsection-labor) for more information.\n* **New API**: Employees API &mdash; The Employees API includes the ability to list employees for a Square account and retrieve a single employee by ID. See the [Connect v2 Technical Reference](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#navsection-employees) for more information.",
        "tags": [
            "Connect v2",
            "Employees API",
            "Labor API"
        ]
    },
    {
        "id": "1dubHazTOaNa1qgpBpYmZi",
        "slug": "changelog\/connect-logs\/2019-02-13",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2019-02-13",
        "summary": "Order fulfillment BETA, general improvements to CreateOrder, and a new HTTP error code.",
        "details": "* **New functionality**: Orders.CreateOrder &mdash; The [Orders API](\/orders-api\/what-it-does) now includes beta functionality that supports in-person fulfillment through Square Point of Sale for orders placed online. See the [Connect v2 Technical Reference](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#navsection-orders) for more information.\n* **Improved functionality**: Orders.CreateOrder &mdash; Requests to the [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#endpoint-orders-createorder) endpoint now group order details under a single body parameter (`order`) rather than distributing it across multiple body parameters.\n* **Improved functionality**: Orders.CreateOrder &mdash; Requests to the [CreateOrder](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#endpoint-orders-createorder) endpoint now preserve the structure of order-level price adjustments in the response when converting them to scoped, line-item price adjustments. Previously, the response object did not preserve the original order-level price-adjustment objects.\n* **New functionality**: All v2 APIs &mdash; Square Connect APIs now return `NOT ACCEPTABLE` when the targeted endpoint does not understand headers passed in the client request. For example, requesting an unsupported language with the `Accept-Language` request header.",
        "tags": [
            "Connect v2",
            "Orders API",
            "BETA"
        ]
    },
    {
        "id": "4DAGxhHJh3QkFauYab0cgN",
        "slug": "changelog\/connect-logs\/2018-12-12",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-12-12",
        "summary": "Increased return set for ListCustomers.",
        "details": "* **New functionality**: Customers.ListCustomers &mdash; Requests to the [ListCustomers](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#endpoint-customers-listcustomers) endpoint now returns all available customer profiles. Previously, ListCustomers only returned customer profiles explicitly created through the Customers API or Square Point of Sale.\n",
        "tags": [
            "Connect v2",
            "Customers API"
        ]
    },
    {
        "id": "5sBJFiY1ByCH3nVaC3mEGO",
        "slug": "changelog\/connect-logs\/2018-12-05",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-12-05",
        "summary": "Idempotency support for customer creation to avoid unintended duplication.",
        "details": "* **New field**: Customers.CreateCustomer supports `idempotency_key` &mdash; Requests to the [CreateCustomer](https:\/\/developer.{{SQUARE_DOMAIN}}\/docs\/api\/connect\/v2#endpoint-customers-createcustomer) endpoint now include a `idempotency_key` field to ensure idempotent creation of new profiles.\n",
        "tags": [
            "Connect v2",
            "Customers API"
        ]
    },
    {
        "id": "4PaEvJiHx85tvploIk81gr",
        "slug": "changelog\/connect-logs\/2018-09-18",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-09-18",
        "summary": "New Inventory API and birthday support for customer profiles.",
        "details": "* **New API**: Inventory API &mdash; The Connect v2 Inventory API replaces the Connect v1 Inventory API and introduces new functionality:\n * Moving item variations quantities through predefined states (e.g., from `IN_STOCK` to `WASTE`).\n * Viewing the inventory adjustment history for an item variation.\n * Batch inventory adjustments and information retrieval.\n* **New field**: `Customer` supports `birthday` &mdash; Customer profiles now include a `birthday` field. Dates are recorded in RFC-3339 format and can be set through the CreateCustomer and UpdateCustomer endpoints.",
        "tags": [
            "Connect v2",
            "Customers API",
            "Inventory API"
        ]
    },
    {
        "id": "3tzpIr3fRwXcFBJH0zLAYj",
        "slug": "changelog\/connect-logs\/2018-07-12",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-07-12",
        "summary": "Versioning for Connect v2 AP: new Square-Version API header",
        "details": "\nSquare API versions (`Square-Version`) track changes in the evolution of Connect\nv2 APIs. The `Square-Version` naming scheme is `YYYY-MM-DD`, which indicates\nthe date the version was released. Connect v1 APIs are not versioned. Square\ncontinues to support Connect v1, but future releases will focus on improving\nConnect v2 functionality.\n\nBy default, new Square applications are pinned to the version current at the\ntime the application was created in the Square Application Dashboard. Pinning an\napplication sets the default `Square-Version` for the application. The default\n`Square-Version` of an application can be reviewed and updated at any time on\nthe settings pages for the application.\n\nDue to string limitations for `VERSIONINFO` in Windows OS, versioning for the\n.NET Connect SDK follows as strict numeric iteration. Make sure to check the\ncompatible SDK version in the most recent changelog to determine SDK\ncompatibility.\n",
        "tags": [
            "Connect v2"
        ]
    },
    {
        "id": "64h0krbiqHZ0cX1J0hOKNA",
        "slug": "changelog\/connect-logs\/2018-06-28",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-06-28",
        "summary": "We have added search functionality to the Connect v2 Customer API.",
        "details": "* **New endpoint**: Customers.SearchCustomers &mdash; retrieves groups of customer profiles based on a related characteristic. For example, retrieving all customers created in the past 24 hours.\n* **New field**: `Customer` supports `creation_source` &mdash; The creation source exposes the process that created a customer profile. For example, if a customer is created using the API, the creation source will be `THIRD_PARTY`.\n* **New functionality**: Instant Profiles are now exposed in the following endpoints: `RetrieveCustomer`, `SearchCustomers`, `UpdateCustomer`, `DeleteCustomer`.\n* **Bug fix**: Fix SDK request property `adjustment_type` in V1 Adjust Inventory.\n",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Customers API"
        ]
    },
    {
        "id": "70mN6KS12l2NG1FOkknbwL",
        "slug": "changelog\/connect-logs\/2018-05-24",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-05-24",
        "summary": "We have added sorting functionality to the Connect v2 Customer API, updated the Connect v1 Payments API to include information about surcharges, and made improvements to the Item data type.",
        "details": "* **New functionality**: Customers.ListCustomers endpoint supports sorting &mdash;\n The endpoint provides the ability to sort customers by their creation date using the `sort_field` and `sort_order` parameters.\n* **New functionality**: V1Transactions (Payments) supports surcharges &mdash;\n The endpoint now returns information about surcharges applied to payments. The new functionality introduces the following new data types:\n* **New datatype**: SurchargeMoney &mdash;\n The total of all surcharges applied to the payment.\n* **New datatype**: Surcharges &mdash;\n A list of all surcharges associated with the payment.\n* **New datatype**: Surcharge &mdash;\n A surcharge that is applied to the payment. One example of a surcharge is auto-gratuity, which is a fixed-rate surcharge applied to every payment, often based on party size.\n* **New functionality**: V1Item has 2 new fields &mdash;\n The Connect v1 datatype `Item` now includes a `category_id` property to indicate if an item can be added to pickup orders from the merchant's online store and `available_for_pickup` to indicate the item category (if any).\n",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Customers API"
        ]
    },
    {
        "id": "3gAeaPI8ZUsRMyhTyx8IwA",
        "slug": "changelog\/connect-logs\/2018-04-09",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2018-04-09",
        "summary": "Refunds v1 API and Transactions v2 API now include information about in-person exchanges. Exchange functionality is launching as a phased rollout with full account coverage expected by the end of April 2018.",
        "details": "* **New functionality**: V1Refunds.List &mdash;\n Responses may contain more results than the limit when refunds are made simultaneously to multiple tenders in a payment, or when refunds are generated to account for the value of returned goods in an exchange.\n* **New functionality**: V1Payment datatype &mdash;\n The value of all refunds on a payment may exceed the value of all tenders, because a merchant can choose to refund money to a tender after accepting some good for exchange.\n* **New functionality**: V1Refund datatype supports exchanges &mdash;\n `V1Refund` includes a new field, `is_exchange`, to indicate if the object represents an exchange-based refund.\n* **New functionality**: V1Tender datatype supports exchanges &mdash;\n `V1Tender` includes a new field, `is_exchange`, to indicate if the tender represents the value of goods returned in an exchange, rather than actual money paid.\n* **New functionality**: Transactions.ListTransactions supports exchanges &mdash;\n The endpoint now returns transactions that include payment information from exchanges. This endpoint was previously unable to return exchange-related transaction objects.\n* **New functionality**: Transactions.ListRefunds supports exchanges &mdash;\n The endpoint now returns refunds that include information from returns and exchanges. This endpoint was previously unable to return exchange-related refund objects.\n",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Transactions API"
        ]
    },
    {
        "id": "5Eo2RDi5TECGiNzGys1EoL",
        "slug": "changelog\/connect-logs\/2017-11-10",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-11-10",
        "summary": "New fields added to datatypes for Catalog API, Locations API, and Transactions API.",
        "details": "* **New field**: `CatalogItemVariation` supports `ordinal`.\n* **New field**: `Location` supports `website_url`.\n* **New field**: `Tender` supports `tip_money`.\n* **New functionality**: `V1PageCell` fields `object_type` and `placeholder_type` were changed from lists to single values in to better mirror the true data model.\n",
        "tags": [
            "Connect v1",
            "Connect v2",
            "Catalog API",
            "Locations API",
            "Transactions API"
        ]
    },
    {
        "id": "2tVwhllslnvHyohli5PPa6",
        "slug": "changelog\/connect-logs\/2017-11-02",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-11-02",
        "summary": "Developers and platform building on Square Payment Form or Checkout API can now monetize a portion of those transactions.",
        "details": "Developers and platform building on Square Payment Form or Checkout API can now monetize a portion of those transactions. This is the first step in bringing economic empowerment not just to Square sellers but also Developers building with Square APIs. The release is accompanied by a new SDK (2.5) release in all supported languages.\n\n* **New field**: Transactions.Charge supports `additional_recipients` &mdash;\n represents an additional recipient (other than the merchant) receiving a\n portion of this tender.\n* **New endpoint**: Reporting.AdditionalRecipientReceivables &mdash;\n returns a list of receivables (across all source locations) representing\n monies credited to the given location ID by another Square account using the\n `additional_recipients` field in a transaction.\n* **New endpoint**: Reporting.AdditionalRecipientReceivablesRefunds &mdash;\n returns a list of refunded transactions (across all source locations) related\n to monies credited to the given location ID by another Square account using\n the `additional_recipients` field in a transaction.\n",
        "tags": [
            "Connect v2",
            "Square Payment Form",
            "Transactions API"
        ]
    },
    {
        "id": "2qfMxpIilFQuVtw012Cfa9",
        "slug": "changelog\/connect-logs\/2017-10-30",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-10-30",
        "summary": "Square Payment Form now accepts MasterCard Masterpass payments. MasterPass is a free digital wallet designed to make online shopping easier by storing all of your payment and shipping information in one convenient location.",
        "details": " ",
        "tags": [
            "Connect v2"
        ]
    },
    {
        "id": "6M9qKag9oVdXbZ4VuuYfW0",
        "slug": "changelog\/connect-logs\/2017-09-27",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-09-27",
        "summary": "Square Payment Form and Checkout API now accept Apple Pay on the Web payments from customers using the Safari browser.",
        "details": "Square Payment Form and Checkout API now accept Apple Pay on the Web payments from customers using the Safari browser. Web Apple Pay is a cleaner way to accept mobile web payments from iPhone users. Consumers are increasingly making purchases on their mobile devices and we want to make it as easy and seamless as possible to provide that optimized checkout experience.\n\n* **New functionality**: Checkout API supports Apple Pay on the Web &mdash; Support for Apple Pay on the Web is built into the Checkout UI and is automatically enabled for anyone using the Checkout API. **Note**: Apple Pay on the Web is not currently supported in Sandbox.\n",
        "tags": [
            "Connect v2",
            "Checkout API"
        ]
    },
    {
        "id": "5w4cNqPHgR7VirROnHFBGE",
        "slug": "changelog\/connect-logs\/2017-09-13",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-09-13",
        "summary": "Updates to ListLocations, Charge, and Orders API.",
        "details": "* **New functionality**: Locations.ListLocations &mdash; returns fields that were previously only available with the v1 List Locations endpoint. This should enable most developers to migrate their solutions off of the v1 Locations API.\n* **New endpoint**: Orders.CreateOrder &mdash; creates an itemized order which can be referenced in messages to the Charge endpoint.\n* **New endpoint**: Orders.BatchRetrieveOrders &mdash; retrieves order objects referenced in one or more transactions based on the provided `order_id`. At this point, BatchRetrieveOrders only returns information on paid orders made through Square eCommerce APIs (Transactions, Checkout).\n* **New field**: Transactions.Charge supports `order_id` &mdash; the ID of an order object associated with the transaction.\n",
        "tags": [
            "Transactions API",
            "Locations API",
            "Orders API",
            "Connect v2"
        ]
    },
    {
        "id": "2U0yHAw7nv5vGB6RQ9ajPV",
        "slug": "changelog\/connect-logs\/2017-08-22",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-08-22",
        "summary": "As part of our work to close gaps between the Connect V1 and Connect V2 APIs, the v2 List Locations endpoint now returns fields that were previously only available with the v1 List Locations endpoint.",
        "details": "* **New functionality**: Locations.ListLocations &mdash; now returns the following information, which can be set in the Square Dashboard. This should enable most developers to migrate their solutions off of the v1 Locations API.\n * `business_name`: the business name of the location.\n * `country`: the country of operation for the location.\n * `currency`: the transaction currency for the location.\n * `language_code`: the language configured for the location.\n * `merchant_id`: the internal Square ID of the merchant that owns the location.\n * `name`: the nickname of the location.\n * `phone_number`: the phone number of the location.\n",
        "tags": [
            "Locations API",
            "Connect v2"
        ]
    },
    {
        "id": "5AfkJ5l0xb5AvEUOl9MIwK",
        "slug": "changelog\/connect-logs\/2017-06-22",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-06-22",
        "summary": "General availability of a new eCommerce API, Checkout API, and relaxed postal code requirements for Square Payment Form for merchants based in Japan and Australia.",
        "details": "* **New API**: Checkout API &mdash; After a few months of Beta testing, Square Checkout API is now generally available. The Checkout API lets developers accept online payments using a checkout UI hosted on Square servers. The Checkout UI currently supports US-English only and, while it is not strictly required, we strongly recommend using Checkout API in conjunction with SSL certification. Checkout API and UI features:\n * Itemized transactions, including explicit tax and discounts.\n * International shipping.\n * Address localization of the checkout form. Additionally, the UI automatically loads (or omits) the billing postal code field based on the country associated the merchant account. Postal code filtering is handled automatically by the UI and does not require a code change to activate.\n * Integration with Square Dashboard for reviewing transactions.\n",
        "tags": [
            "Checkout API"
        ]
    },
    {
        "id": "1GE8shCvIzgcVNXo1ucJ1h",
        "slug": "changelog\/connect-logs\/2017-05-23",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2017-05-23",
        "summary": "Catalog API released for Connect v2.",
        "details": "* **New API**: Catalog API &mdash; Square Catalog API replaces the Item Management V1 API. With this new release, developers can manage their product catalog in a faster and more scalable fashion. The Catalog API moves from a per-location management approach to a per-seller approach, eliminating the need to manage a separate catalog for each location. It also simplifies large catalog management by introducing bulk operations.",
        "tags": [
            "Catalog API",
            "Connect v2"
        ]
    },
    {
        "id": "2ooxulRWZ8uL36EiyjD9Er",
        "slug": "changelog\/connect-logs\/2016-03-30",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2016-03-30",
        "summary": "Square Point of Sale API and Version 2 of the Square Connect API are now generally available.",
        "details": "* Version 2 of the Square Connect API (Connect v2) is now available. Connect v2 provides the following new features:\n * Accepting eCommerce payments from a webpage with a secure, customizable web form.\n * Managing customer data for online buyers, including cards on file.\n* The Square Point of Sale API is also now generally available. The Point of Sale API lets you deep-link into Square Point of Sale from an iOS native or web app to process in-person payments with Square.\n\n\n## Availability\n\nCurrently, Square APIs are available only to developers in the United States and Canada. We are working to make them available in additional countries soon.\n\n\n## Pricing\n\n* For online (eCommerce) payments accepted with Connect v2, the Square processing fee is 2.9% + 30 cents. This is the only fee assessed by Square for the transaction.\n* For in-person payments accepted via Square Point of Sale with the Point of Sale API, standard Square fees apply. See [this article](https:\/\/{{SQUARE_DOMAIN}}\/help\/article\/5068) for details of Square's fees.\n\n\n## Do I need to create a new Connect API application to use Connect v2 endpoints?\n\nOnly if you created your application on the Application Dashboard before 16 February 2016. Applications created on or after 16 February can use Connect v2 endpoints.\n\nIf you created your application before 16 February, create a new application in the [Application Dashboard](https:\/\/developer.{{SQUARE_DOMAIN}}\/apps).\n\n\n## Do I need to switch my existing application over to use Connect v2 instead of Connect v1?\n\nNo. In fact, a significant number of Connect v1 endpoints are not yet available in v2. An application can communicate with endpoints from both versions.\n\n\n## Which conventions from v1 carry over to v2?\n\n* **Endpoint base URL**. All Connect API endpoints are hosted from `https:\/\/connect.squareup.com`.\n* **Parameter formats**. GET and DELETE requests expect parameters in the query string of the URL, whereas POST and PUT requests expect them in the body of the request.\n* **OAuth API endpoints**. OAuth API endpoints are unchanged, as is the format for the `Authorization` header you provide in your requests.\n* **Required headers**. All Connect API endpoints require the following headers:\n ```bash \n Authorization: Bearer YOUR_ACCESS_TOKEN\n Content-Type: application\/json\n Accept: application\/json\n ```\n\n\n## Which conventions in v2 differ from v1?\n\n* **Monetary amounts**. All monetary amounts returned by v2 endpoints are positive. In v1, monetary amounts are negative if they represent money being paid *by* a merchant (such as a Square processing fee).\n* **Dates**. In v1, all dates must conform to the less strict ISO 8601. In v2, all dates you provide must conform to [RFC 3339](https:\/\/www.ietf.org\/rfc\/rfc3339.txt). An RFC 3339-compliant date is effectively an [ISO 8601](http:\/\/www.iso.org\/iso\/home\/standards\/iso8601.htm)-compliant date that omits no optional components besides fractional seconds. For example, `2016-01-15T00:00:00Z` is a valid ISO 8601 date and a valid RFC 3339 date, whereas `2016-01-15` is valid ISO 8601 but invalid RFC 3339.\n* **Pagination.** In v2, endpoints that paginate their results return a `cursor` field in their response body, which you can provide in the query string of a followup request to get the next set of results. In v1, pagination information is instead provided in the Link response header.\n* **Default sort order.** In v2, endpoints that return date-sorted results (such as `ListTransactions`) list results in newest-first order by default. Additionally, the parameter to change this behavior is called `sort_order`. In v1, corresponding endpoints (such as `ListPayments`) list results in oldest-first order by default. The parameter to change this behavior is called `order`.\n* **Error format.** In v2, endpoints include an `errors` array in their response body if any errors occurred during the corresponding request. Each `Error` object included in the array has a consistent format. In v1, only one error is ever returned in a single response, and the errors have a different format from v2 errors.\n",
        "tags": [
            "Point of Sale API",
            "Connect v2"
        ]
    },
    {
        "id": "7dR1ckuXbV7FVVdXlcGw7z",
        "slug": "changelog\/connect-logs\/2016-02-16",
        "linkBack": "\/changelog\/connect",
        "changelogType": "API (Connect and Authorization)",
        "changelogDate": "2016-02-16",
        "summary": "Changes made to the representation of a Square merchant in the Connect API.",
        "details": "We have made changes made to the representation of a Square merchant in the Connect API.\n\nThese changes have different effects on Connect API applications created before and after February 16. **Applications created before February 16 continue to work as before.** Before, most Square merchants had a single account that they used to process all of their payments and manage all of their items.\n\n![old-merchant-structure](\/\/images.ctfassets.net\/1nw4q0oohfju\/1QO3UHEzdi8zbo38DS4u0j\/b7d9f4579a146033217b97152b82d345\/old-merchant-structure.jpg)\n\nApplications with the necessary permissions had access to all of these transactions and items.\n\nAfter this change, a Square merchant instead has a **business** entity that includes one or more **locations**. Each location typically represents a different brick-and-mortar store, and each one has its own transactions and its own items.\n\n![new-business-structure](\/\/images.ctfassets.net\/1nw4q0oohfju\/2lqta6Z6oYf1KGPWWKZ47H\/e53087920dbd45e22f46bacd12117702\/new-business-structure.jpg)\n\nAs this change rolls out, Square is creating a business entity for every merchant. The business has a single location, which contains all of the merchant's existing transactions and items.\n\nThe majority of merchants will choose to stick with a single location, but they can add as many locations as they want from their merchant dashboard.\n\n\n## How does this affect applications created before February 16?\n\nIf you created your Connect API application before February 16, your application works as before. However, your application is a **single-location application**. This means the following:\n\n* Your application cannot use endpoints listed in the Business Management section of the Connect API reference. These endpoints are primarily for managing a business' employees and timecards.\n* If one of your merchants adds a location to their business, your application *will not* have access to the new location's transactions and items.\n* When a new merchant authorizes your application, they will automatically be prompted to choose *one* of their locations to grant your application access to.\n* In order to grant your application access to multiple locations, a merchant will have to complete the OAuth flow once *for each location*. Your application will need to keep track of a different access token for each location.\n\n\n## How does this affect applications created on or after February 16?\n\n* If you created a Connect API application on or after February 16, your application is a **business-level application**. This means that when a merchant authorizes your application, they'll grant it access to *all* of their business' locations.\n* Business-level applications must specify a location in their requests to access transactions or items. For example, the path for the List Items endpoint is `\/v1\/{location_id}\/items`\n* Single-location applications have always been able to simply specify `me` for the value of the `location_id` parameter, but business-level applications must provide the `id` of the location they want to list items for.\n* Business-level applications will be able to get a business' location `id`s by sending a `GET` request to `\/v1\/me\/locations`\n\n\n## Can I upgrade my single-location application to a business-level application?\n\nIt is not possible to upgrade an existing application listed in the [Application Dashboard](https:\/\/developer.{{SQUARE_DOMAIN}}\/apps). Instead, you can create a *new* application in the dashboard after February 16 and reauthorize your merchants with the new application. Before you move your merchants to a new application, you will need to make sure your new application's code supports the location `id` requirement for business-level applications described above.\n\n\n## Are endpoint paths changing?\n\nNo, with the exception that applications created after February 16 will not be able to specify `me` in the path of a request to access a location's transactions or items. Applications created before February 16 can continue to specify `me` as usual.\n",
        "tags": [
            "Locations API",
            "Connect v1"
        ]
    }
]